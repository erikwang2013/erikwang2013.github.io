{
    "version": "https://jsonfeed.org/version/1",
    "title": "艾瑞可erik • All posts by \"elasticsearch搭建\" tag • All posts by \"undefined\" categories",
    "description": "一只PHP开发的程序猿，偶尔做做运维、Goland、Python、Java、摄影、画画、写作、顺便睡觉，反正整站都搞过。",
    "home_page_url": "https://erik.xyz",
    "items": [
        {
            "id": "https://erik.xyz/2020/05/07/elasticsearch-node/",
            "url": "https://erik.xyz/2020/05/07/elasticsearch-node/",
            "title": "linux系统里elasticsearch集群搭建",
            "date_published": "2020-05-07T03:43:00.000Z",
            "content_html": "<h2 id=\"1-在容器中搜索elasticsearch镜像-如图结果，一般选择最上面的一个。\"><a href=\"#1-在容器中搜索elasticsearch镜像-如图结果，一般选择最上面的一个。\" class=\"headerlink\" title=\"1.在容器中搜索elasticsearch镜像,如图结果，一般选择最上面的一个。\"></a>1.在容器中搜索elasticsearch镜像,如图结果，一般选择最上面的一个。</h2><pre><code>    sudo docker search elasticsearch\n</code></pre><p><img src=\"https://erik.xyz/img/202005/07/2020-05-07_114446.jpg\" alt=\"&#39;es图&#39;\"></p>\n<span id=\"more\"></span>\n<h2 id=\"2-到elasticsearch官方网站查询elasticsearch的版本，我用的是最新版7-6-2\"><a href=\"#2-到elasticsearch官方网站查询elasticsearch的版本，我用的是最新版7-6-2\" class=\"headerlink\" title=\"2.到elasticsearch官方网站查询elasticsearch的版本，我用的是最新版7.6.2\"></a>2.到elasticsearch官方网站查询elasticsearch的版本，我用的是最新版7.6.2</h2><h2 id=\"3-拉镜像到本地\"><a href=\"#3-拉镜像到本地\" class=\"headerlink\" title=\"3.拉镜像到本地\"></a>3.拉镜像到本地</h2><pre><code>    sudo docker pull elasticsearch:7.6.2\n</code></pre><h2 id=\"4-查看本地镜像，找到elasticsearch，如下图\"><a href=\"#4-查看本地镜像，找到elasticsearch，如下图\" class=\"headerlink\" title=\"4.查看本地镜像，找到elasticsearch，如下图\"></a>4.查看本地镜像，找到elasticsearch，如下图</h2><pre><code>    sudo docker images\n</code></pre><p><img src=\"https://erik.xyz/img/202005/07/2020-05-07_115053.jpg\" alt=\"&#39;es图&#39;\"></p>\n<h2 id=\"5-创建挂载本地目录\"><a href=\"#5-创建挂载本地目录\" class=\"headerlink\" title=\"5.创建挂载本地目录\"></a>5.创建挂载本地目录</h2><pre><code>mkdir -p es/node1 es/node2 es/node3 &amp;&amp; mkdir es/node1/config es/node1/data es/node1/log es/node1/plugins es/node2/config es/node2/data es/node2/log es/node2/plugins es/node3/config es/node3/data es/node3/log es/node3/plugins\n</code></pre><p>config存放配置文件</p>\n<p>data存放数据</p>\n<p>log存放日志</p>\n<p>plugins存放插件</p>\n<p>给目录开放读写权限</p>\n<pre><code>    sudo chmod -R 777 es/node1 es/node2 es/node3\n</code></pre><h2 id=\"6-创建配置文件\"><a href=\"#6-创建配置文件\" class=\"headerlink\" title=\"6.创建配置文件\"></a>6.创建配置文件</h2><ul>\n<li><p>node1的配置文件  es/node1/config/config.yml</p>\n<pre><code>#集群名称\ncluster.name: erik-es\n#当前该节点的名称\nnode.name: node1\n#是不是有资格竞选主节点\nnode.master: true\n#是否存储数据\nnode.data: true\n#最大集群节点数\nnode.max_local_storage_nodes: 3\n#给当前节点自定义属性（可以省略）\n#node.attr.rack: r1\n#数据存档位置\npath.data: /usr/share/elasticsearch/data\n#日志存放位置\npath.logs: /usr/share/elasticsearch/log\n#是否开启时锁定内存（默认为是）\n#bootstrap.memory_lock: true\n#设置网关地址，我是被这个坑死了，这个地址我原先填写了自己的实际物理IP地址，\n#然后启动一直报无效的IP地址，无法注入9300端口，这里只需要填写0.0.0.0\nnetwork.host: 0.0.0.0\n#设置其它结点和该结点交互的ip地址，如果不设置它会自动判断，值必须是个真实的ip地址，设置当前物理机地址,\n#如果是docker安装节点的IP将会是配置的IP而不是docker网管ip\nnetwork.publish_host: 172.18.0.2\n#设置映射端口\nhttp.port: 9200\n#内部节点之间沟通端口\ntransport.tcp.port: 9300\n#集群发现默认值为127.0.0.1:9300,如果要在其他主机上形成包含节点的群集,如果搭建集群则需要填写\n#es7.x 之后新增的配置，写入候选主节点的设备地址，在开启服务后可以被选为主节点，也就是说把所有的节点都写上\ndiscovery.seed_hosts: [&quot;172.18.0.2:9300&quot;,&quot;172.18.0.3:9301&quot;,&quot;172.18.0.4:9302&quot;]\n#当你在搭建集群的时候，选出合格的节点集群，有些人说的太官方了，\n#其实就是，让你选择比较好的几个节点，在你节点启动时，在这些节点中选一个做领导者，\n#如果你不设置呢，elasticsearch就会自己选举，这里我们把三个节点都写上\ncluster.initial_master_nodes: [&quot;node1&quot;,&quot;node2&quot;,&quot;node3&quot;]\n#在群集完全重新启动后阻止初始恢复，直到启动N个节点\n#简单点说在集群启动后，至少复活多少个节点以上，那么这个服务才可以被使用，否则不可以被使用，\ngateway.recover_after_nodes: 2\n#删除索引是是否需要显示其名称，默认为显示\n#action.destructive_requires_name: true\n</code></pre></li>\n<li><p>node2的配置文件  es/node2/config/config.yml</p>\n<pre><code>  #集群名称\n  cluster.name: erik-es\n  #当前该节点的名称\n  node.name: node2\n  #是不是有资格竞选主节点\n  node.master: true\n  #是否存储数据\n  node.data: true\n  #最大集群节点数\n  node.max_local_storage_nodes: 3\n  #给当前节点自定义属性（可以省略）\n  #node.attr.rack: r1\n  #数据存档位置\n  path.data: /usr/share/elasticsearch/data\n  #日志存放位置\n  path.logs: /usr/share/elasticsearch/log\n  #是否开启时锁定内存（默认为是）\n  #bootstrap.memory_lock: true\n  #设置网关地址，我是被这个坑死了，这个地址我原先填写了自己的实际物理IP地址，\n  #然后启动一直报无效的IP地址，无法注入9300端口，这里只需要填写0.0.0.0\n  network.host: 0.0.0.0\n  #设置其它结点和该结点交互的ip地址，如果不设置它会自动判断，值必须是个真实的ip地址，设置当前物理机地址,\n  #如果是docker安装节点的IP将会是配置的IP而不是docker网管ip\n  network.publish_host: 172.18.0.3\n  #设置映射端口\n  http.port: 9201\n  #内部节点之间沟通端口\n  transport.tcp.port: 9301\n  #集群发现默认值为127.0.0.1:9300,如果要在其他主机上形成包含节点的群集,如果搭建集群则需要填写\n  #es7.x 之后新增的配置，写入候选主节点的设备地址，在开启服务后可以被选为主节点，也就是说把所有的节点都写上\n  discovery.seed_hosts: [&quot;172.18.0.2:9300&quot;,&quot;172.18.0.3:9301&quot;,&quot;172.18.0.4:9302&quot;]\n  #当你在搭建集群的时候，选出合格的节点集群，有些人说的太官方了，\n  #其实就是，让你选择比较好的几个节点，在你节点启动时，在这些节点中选一个做领导者，\n  #如果你不设置呢，elasticsearch就会自己选举，这里我们把三个节点都写上\n  cluster.initial_master_nodes: [&quot;node1&quot;,&quot;node2&quot;,&quot;node3&quot;]\n  #在群集完全重新启动后阻止初始恢复，直到启动N个节点\n  #简单点说在集群启动后，至少复活多少个节点以上，那么这个服务才可以被使用，否则不可以被使用，\n  gateway.recover_after_nodes: 2\n  #删除索引是是否需要显示其名称，默认为显示\n  #action.destructive_requires_name: true\n</code></pre></li>\n<li><p>node3的配置文件  es/node3/config/config.yml</p>\n<pre><code>  #集群名称\n  cluster.name: erik-es\n  #当前该节点的名称\n  node.name: node3\n  #是不是有资格竞选主节点\n  node.master: true\n  #是否存储数据\n  node.data: true\n  #最大集群节点数\n  node.max_local_storage_nodes: 3\n  #给当前节点自定义属性（可以省略）\n  #node.attr.rack: r1\n  #数据存档位置\n  path.data: /usr/share/elasticsearch/data\n  #日志存放位置\n  path.logs: /usr/share/elasticsearch/log\n  #是否开启时锁定内存（默认为是）\n  #bootstrap.memory_lock: true\n  #设置网关地址，我是被这个坑死了，这个地址我原先填写了自己的实际物理IP地址，\n  #然后启动一直报无效的IP地址，无法注入9300端口，这里只需要填写0.0.0.0\n  network.host: 0.0.0.0\n  #设置其它结点和该结点交互的ip地址，如果不设置它会自动判断，值必须是个真实的ip地址，设置当前物理机地址,\n  #如果是docker安装节点的IP将会是配置的IP而不是docker网管ip\n  network.publish_host: 172.18.0.4\n  #设置映射端口\n  http.port: 9202\n  #内部节点之间沟通端口\n  transport.tcp.port: 9302\n  #集群发现默认值为127.0.0.1:9300,如果要在其他主机上形成包含节点的群集,如果搭建集群则需要填写\n  #es7.x 之后新增的配置，写入候选主节点的设备地址，在开启服务后可以被选为主节点，也就是说把所有的节点都写上\n  discovery.seed_hosts: [&quot;172.18.0.2:9300&quot;,&quot;172.18.0.3:9301&quot;,&quot;172.18.0.4:9302&quot;]\n  #当你在搭建集群的时候，选出合格的节点集群，有些人说的太官方了，\n  #其实就是，让你选择比较好的几个节点，在你节点启动时，在这些节点中选一个做领导者，\n  #如果你不设置呢，elasticsearch就会自己选举，这里我们把三个节点都写上\n  cluster.initial_master_nodes: [&quot;node1&quot;,&quot;node2&quot;,&quot;node3&quot;]\n  #在群集完全重新启动后阻止初始恢复，直到启动N个节点\n  #简单点说在集群启动后，至少复活多少个节点以上，那么这个服务才可以被使用，否则不可以被使用，\n  gateway.recover_after_nodes: 2\n  #删除索引是是否需要显示其名称，默认为显示\n  #action.destructive_requires_name: true\n</code></pre></li>\n</ul>\n<h2 id=\"7-创建网络\"><a href=\"#7-创建网络\" class=\"headerlink\" title=\"7.创建网络\"></a>7.创建网络</h2><p>如果需要安装kibana等其他，需要创建一个网络，名字任意取，让他们在同一个网络，使得elasticsearch和kibana通信，网络名称可以自定义</p>\n<pre><code>sudo docker network create es-net\n</code></pre><p> 查看已创建的网络，如下图</p>\n<pre><code>    sudo docker network ls\n</code></pre><p><img src=\"https://erik.xyz/img/202005/07/2020-05-07_125720.jpg\" alt=\"\"></p>\n<h2 id=\"8-创建节点\"><a href=\"#8-创建节点\" class=\"headerlink\" title=\"8.创建节点\"></a>8.创建节点</h2><ul>\n<li><p>node1</p>\n<pre><code>    sudo docker run --privileged -ti -e ES_JAVA_OPTS=&quot;-Xms512m -Xmx512m&quot; --network es-net -d -p 9200:9200 -p 9300:9300 -v /home/project/es/node1/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml -v /home/project/es/node1/plugins:/usr/share/elasticsearch/plugins -v /home/project/es/node1/data:/usr/share/elasticsearch/data -v /home/project/es/node1/log:/usr/share/elasticsearch/log --name es-node1 elasticsearch:7.6.2\n</code></pre><p>这时候你会发现过会容器节点es-node1自动停止了。查查容器日志，如下<br><img src=\"https://erik.xyz/img/202005/07/2020-05-07_133110.jpg\" alt=\"\"></p>\n<p>本地系统最大虚拟值太小，一般就是本地没有设置，而用了默认的，打开</p>\n<pre><code>    sudo leafpad  /etc/sysctl.conf\n</code></pre><p>在sysctl.conf中找找vm.max_map_count，如果找不到就添加vm.max_map_count=262144<br>退出编辑，执行加载</p>\n<pre><code>    sudo sysctl -p\n</code></pre><p>重新启动es-node1</p>\n<p>查询此时容器es-node1的IP地址</p>\n<pre><code>    sudo docker inspect es-node1 | grep &#39;&quot;IPAddress&quot;&#39;\n</code></pre><p>然后更改es-node1配置文件中的network.publish_host和discovery.seed_hostsd地址，其他两个节点也是如此。</p>\n</li>\n<li><p>node2</p>\n<pre><code>sudo docker run --privileged -ti -e ES_JAVA_OPTS=&quot;-Xms512m -Xmx512m&quot; --network es-net -d -p 9201:9201 -p 9301:9301 -v /home/project/es/node2/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml -v /home/project/es/node2/plugins:/usr/share/elasticsearch/plugins -v /home/project/es/node2/data:/usr/share/elasticsearch/data -v /home/project/es/node2/log:/usr/share/elasticsearch/log --name es-node2 elasticsearch:7.6.2\n</code></pre></li>\n</ul>\n<p>改配置ip同node1</p>\n<ul>\n<li><p>node3</p>\n<pre><code>sudo docker run --privileged -ti -e ES_JAVA_OPTS=&quot;-Xms512m -Xmx512m&quot; --network es-net -d -p 9202:9202 -p 9302:9302 -v /home/project/es/node3/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml -v /home/project/es/node3/plugins:/usr/share/elasticsearch/plugins -v /home/project/es/node3/data:/usr/share/elasticsearch/data -v /home/project/es/node3/log:/usr/share/elasticsearch/log --name es-node3 elasticsearch:7.6.2\n</code></pre></li>\n</ul>\n<p>改配置ip同node1</p>\n<p>修改完所有节点的配置文件后记得重启所有节点。</p>\n<h2 id=\"9-测试结果\"><a href=\"#9-测试结果\" class=\"headerlink\" title=\"9.测试结果\"></a>9.测试结果</h2><p>在浏览器端输入（ip是我本地的）<a href=\"http://172.18.0.2:9200/_cat/nodes?pretty\">http://172.18.0.2:9200/_cat/nodes?pretty</a><br>展示如下图</p>\n<p><img src=\"https://erik.xyz/img/202005/07/2020-05-07_140004.jpg\" alt=\"\"></p>\n<p>表示成功</p>\n<h2 id=\"10-安装Kibana\"><a href=\"#10-安装Kibana\" class=\"headerlink\" title=\"10.安装Kibana\"></a>10.安装Kibana</h2><p>在docker中拉取Kibana</p>\n<pre><code>sudo docker pull kibana:7.6.2\n</code></pre><p>创建kibana目录，并添加文件</p>\n<pre><code>    sudo chmod -R 777 kibana/config\n\n    leafpad kibana/config/kibana.yml\n</code></pre><p>配置文件内容</p>\n<pre><code>#Kibana的映射端口\nserver.port: 5601\n\n#网关地址\nserver.host: &quot;0.0.0.0&quot;\n\n#Kibana实例对外展示的名称\nserver.name: &quot;kibana-192.168.31.190&quot;\n\n#Elasticsearch的集群地址，也就是说所有的集群IP\nelasticsearch.hosts: [&quot;http://172.18.0.2:9200&quot;,&quot;http://172.18.0.3:9201&quot;,&quot;http://172.18.0.4:9202&quot;]\n\n#设置页面语言，中文使用zh-CN，英文使用en\ni18n.locale: &quot;zh-CN&quot;\n\n#这个配置还没理解清楚………………\nxpack.monitoring.ui.container.elasticsearch.enabled: true\n</code></pre><p>安装容器</p>\n<pre><code>sudo docker run --privileged -ti -d -p 5601:5601 -v /home/project/kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml --network es-net --name kibana kibana:7.6.2\n</code></pre><p>成功后在浏览器输入地址（第一次启动会比较慢）<a href=\"http://127.0.0.1:5601，展示如下图\">http://127.0.0.1:5601，展示如下图</a></p>\n<p><img src=\"https://erik.xyz/img/202005/07/2020-05-07_142240.jpg\" alt=\"\"></p>\n<p>参考文章：<a href=\"https://blog.csdn.net/gfk3009/article/details/104560431/\">https://blog.csdn.net/gfk3009/article/details/104560431/</a></p>\n",
            "tags": [
                "elasticsearch",
                "elasticsearch搭建",
                "elasticsearch集群"
            ]
        }
    ]
}