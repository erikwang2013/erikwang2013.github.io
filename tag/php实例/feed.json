{
    "version": "https://jsonfeed.org/version/1",
    "title": "艾瑞可erik • All posts by \"php实例\" tag • All posts by \"undefined\" categories",
    "description": "一只PHP开发的程序猿，偶尔做做运维、Goland、Python、Java、摄影、画画、写作、顺便睡觉，反正整站都搞过。",
    "home_page_url": "https://erik.xyz",
    "items": [
        {
            "id": "https://erik.xyz/2014/12/29/21-ge-shi-yong-bian-li-de-php-dai-ma/",
            "url": "https://erik.xyz/2014/12/29/21-ge-shi-yong-bian-li-de-php-dai-ma/",
            "title": "21个实用便利的PHP代码",
            "date_published": "2014-12-29T14:07:00.000Z",
            "content_html": "<p>作者: <a href=\"http://paranimage.com/author/admin/\" title=\"由帕兰发布\">帕兰</a></p>\n<h3 id=\"1-PHP可阅读随机字符串\"><a href=\"#1-PHP可阅读随机字符串\" class=\"headerlink\" title=\"1. PHP可阅读随机字符串\"></a>1. PHP可阅读随机字符串</h3><p>此代码将创建一个可阅读的字符串，使其更接近词典中的单词，实用且具有密码验证功能。</p>\n<pre><code>/**************\n*@length - length of random string (must be a multiple of 2)\n**************/\nfunction readable_random_string($length = 6)&#123;\n    $conso=array(&quot;b&quot;,&quot;c&quot;,&quot;d&quot;,&quot;f&quot;,&quot;g&quot;,&quot;h&quot;,&quot;j&quot;,&quot;k&quot;,&quot;l&quot;,\n    &quot;m&quot;,&quot;n&quot;,&quot;p&quot;,&quot;r&quot;,&quot;s&quot;,&quot;t&quot;,&quot;v&quot;,&quot;w&quot;,&quot;x&quot;,&quot;y&quot;,&quot;z&quot;);\n    $vocal=array(&quot;a&quot;,&quot;e&quot;,&quot;i&quot;,&quot;o&quot;,&quot;u&quot;);\n    $password=&quot;&quot;;\n    srand ((double)microtime()*1000000);\n    $max = $length/2;\n    for($i=1; $i&lt;=$max; $i++)\n    &#123;\n    $password.=$conso[rand(0,19)];\n    $password.=$vocal[rand(0,4)];\n    &#125;\n    return $password;\n&#125;\n</code></pre><span id=\"more\"></span>\n<h3 id=\"2-PHP生成一个随机字符串\"><a href=\"#2-PHP生成一个随机字符串\" class=\"headerlink\" title=\"2. PHP生成一个随机字符串\"></a>2. PHP生成一个随机字符串</h3><p>如果不需要可阅读的字符串，使用此函数替代，即可创建一个随机字符串，作为用户的随机密码等。</p>\n<pre><code>/*************\n*@l - length of random string\n*/\nfunction generate_rand($l)&#123;\n  $c= &quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789&quot;;\n  srand((double)microtime()*1000000);\n  for($i=0; $i&lt;$l; $i++) &#123;\n      $rand.= $c[rand()%strlen($c)];\n  &#125;\n  return $rand;\n &#125;\n</code></pre><h3 id=\"3-PHP编码电子邮件地址\"><a href=\"#3-PHP编码电子邮件地址\" class=\"headerlink\" title=\"3. PHP编码电子邮件地址\"></a>3. PHP编码电子邮件地址</h3><p>使用此代码，可以将任何电子邮件地址编码为 HTML 字符实体，以防止被垃圾邮件程序收集。</p>\n<pre><code>function encode_email($email=&#39;info@domain.com&#39;, $linkText=&#39;Contact Us&#39;, $attrs =&#39;class=&quot;emailencoder&quot;&#39; )\n&#123;\n    // remplazar aroba y puntos\n    $email = str_replace(&#39;@&#39;, &#39;&amp;#64;&#39;, $email);\n    $email = str_replace(&#39;.&#39;, &#39;&amp;#46;&#39;, $email);\n    $email = str_split($email, 5);  \n\n    $linkText = str_replace(&#39;@&#39;, &#39;&amp;#64;&#39;, $linkText);\n    $linkText = str_replace(&#39;.&#39;, &#39;&amp;#46;&#39;, $linkText);\n    $linkText = str_split($linkText, 5);  \n\n    $part1 = &#39;&lt;a href=&quot;ma&#39;;\n    $part2 = &#39;ilto&amp;#58;&#39;;\n    $part3 = &#39;&quot; &#39;. $attrs .&#39; &gt;&#39;;\n    $part4 = &#39;&lt;/a&gt;&#39;;  \n\n    $encoded = &#39;&lt;script type=&quot;text/javascript&quot;&gt;&#39;;\n    $encoded .= &quot;document.write(&#39;$part1&#39;);&quot;;\n    $encoded .= &quot;document.write(&#39;$part2&#39;);&quot;;\n    foreach($email as $e)\n    &#123;\n            $encoded .= &quot;document.write(&#39;$e&#39;);&quot;;\n    &#125;\n    $encoded .= &quot;document.write(&#39;$part3&#39;);&quot;;\n    foreach($linkText as $l)\n    &#123;\n            $encoded .= &quot;document.write(&#39;$l&#39;);&quot;;\n    &#125;\n    $encoded .= &quot;document.write(&#39;$part4&#39;);&quot;;\n    $encoded .= &#39;&lt;/script&gt;&#39;;  \n\n    return $encoded;\n&#125;\n</code></pre><h3 id=\"4-PHP验证邮件地址\"><a href=\"#4-PHP验证邮件地址\" class=\"headerlink\" title=\"4. PHP验证邮件地址\"></a>4. PHP验证邮件地址</h3><p>电子邮件验证也许是中最常用的网页表单验证，此代码除了验证电子邮件地址，也可以选择检查邮件域所属 DNS 中的 MX 记录，使邮件验证功能更加强大。</p>\n<pre><code>function is_valid_email($email, $test_mx = false)\n&#123;\n    if(eregi(&quot;^([_a-z0-9-]+)(\\.[_a-z0-9-]+)*@([a-z0-9-]+)(\\.[a-z0-9-]+)*(\\.[a-z]&#123;2,4&#125;)$&quot;, $email))\n        if($test_mx)\n        &#123;\n            list($username, $domain) = split(&quot;@&quot;, $email);\n            return getmxrr($domain, $mxrecords);\n        &#125;\n        else\n            return true;\n    else\n        return false;\n&#125;\n</code></pre><h3 id=\"5-PHP列出目录内容\"><a href=\"#5-PHP列出目录内容\" class=\"headerlink\" title=\"5. PHP列出目录内容\"></a>5. PHP列出目录内容</h3><pre><code>function list_files($dir)\n&#123;\n    if(is_dir($dir))\n    &#123;\n        if($handle = opendir($dir))\n        &#123;\n            while(($file = readdir($handle)) !== false)\n            &#123;\n                if($file != &quot;.&quot; &amp;&amp; $file != &quot;..&quot; &amp;&amp; $file != &quot;Thumbs.db&quot;)\n                &#123;\n                    echo &#39;&lt;a target=&quot;_blank&quot; href=&quot;&#39;.$dir.$file.&#39;&quot;&gt;&#39;.$file.&#39;&lt;/a&gt;&lt;br&gt;&#39;.&quot;\\n&quot;;\n                &#125;\n            &#125;\n            closedir($handle);\n        &#125;\n    &#125;\n&#125;\n</code></pre><h3 id=\"6-PHP销毁目录\"><a href=\"#6-PHP销毁目录\" class=\"headerlink\" title=\"6. PHP销毁目录\"></a>6. PHP销毁目录</h3><p>删除一个目录，包括它的内容。</p>\n<pre><code>/*****\n*@dir - Directory to destroy\n*@virtual[optional]- whether a virtual directory\n*/\nfunction destroyDir($dir, $virtual = false)\n&#123;\n    $ds = DIRECTORY_SEPARATOR;\n    $dir = $virtual ? realpath($dir) : $dir;\n    $dir = substr($dir, -1) == $ds ? substr($dir, 0, -1) : $dir;\n    if (is_dir($dir) &amp;&amp; $handle = opendir($dir))\n    &#123;\n        while ($file = readdir($handle))\n        &#123;\n            if ($file == &#39;.&#39; || $file == &#39;..&#39;)\n            &#123;\n                continue;\n            &#125;\n            elseif (is_dir($dir.$ds.$file))\n            &#123;\n                destroyDir($dir.$ds.$file);\n            &#125;\n            else\n            &#123;\n                unlink($dir.$ds.$file);\n            &#125;\n        &#125;\n        closedir($handle);\n        rmdir($dir);\n        return true;\n    &#125;\n    else\n    &#123;\n        return false;\n    &#125;\n&#125;\n</code></pre><h3 id=\"7-PHP解析-JSON-数据\"><a href=\"#7-PHP解析-JSON-数据\" class=\"headerlink\" title=\"7. PHP解析 JSON 数据\"></a>7. PHP解析 JSON 数据</h3><p>与大多数流行的 Web 服务如 Twitter 通过开放 API 来提供数据一样，它总是能够知道如何解析 API 数据的各种传送格式，包括 JSON，XML 等等。</p>\n<pre><code>$json_string=&#39;&#123;&quot;id&quot;:1,&quot;name&quot;:&quot;foo&quot;,&quot;email&quot;:&quot;foo@foobar.com&quot;,&quot;interest&quot;:[&quot;wordpress&quot;,&quot;php&quot;]&#125; &#39;;\n$obj=json_decode($json_string);\necho $obj-&gt;name; //prints foo\necho $obj-&gt;interest[1]; //prints php\n</code></pre><h3 id=\"8-PHP解析-XML-数据\"><a href=\"#8-PHP解析-XML-数据\" class=\"headerlink\" title=\"8. PHP解析 XML 数据\"></a>8. PHP解析 XML 数据</h3><pre><code>//xml string\n$xml_string=&quot;&lt;?xml version=&#39;1.0&#39;?&gt;\n&lt;users&gt;\n   &lt;user id=&#39;398&#39;&gt;\n      &lt;name&gt;Foo&lt;/name&gt;\n      &lt;email&gt;foo@bar.com&lt;/name&gt;\n   &lt;/user&gt;\n   &lt;user id=&#39;867&#39;&gt;\n      &lt;name&gt;Foobar&lt;/name&gt;\n      &lt;email&gt;foobar@foo.com&lt;/name&gt;\n   &lt;/user&gt;\n&lt;/users&gt;&quot;;  \n\n//load the xml string using simplexml\n$xml = simplexml_load_string($xml_string);  \n\n//loop through the each node of user\nforeach ($xml-&gt;user as $user)\n&#123;\n   //access attribute\n   echo $user[&#39;id&#39;], &#39;  &#39;;\n   //subnodes are accessed by -&gt; operator\n   echo $user-&gt;name, &#39;  &#39;;\n   echo $user-&gt;email, &#39;&lt;br /&gt;&#39;;\n&#125;\n</code></pre><h3 id=\"9-PHP创建日志缩略名\"><a href=\"#9-PHP创建日志缩略名\" class=\"headerlink\" title=\"9. PHP创建日志缩略名\"></a>9. PHP创建日志缩略名</h3><p>创建用户友好的日志缩略名。</p>\n<pre><code>function create_slug($string)&#123;\n    $slug=preg_replace(&#39;/[^A-Za-z0-9-]+/&#39;, &#39;-&#39;, $string);\n    return $slug;\n&#125;\n</code></pre><h3 id=\"10-PHP获取客户端真实-IP-地址\"><a href=\"#10-PHP获取客户端真实-IP-地址\" class=\"headerlink\" title=\"10. PHP获取客户端真实 IP 地址\"></a>10. PHP获取客户端真实 IP 地址</h3><p>该函数将获取用户的真实 IP 地址，即便他使用代理服务器。</p>\n<pre><code>function getRealIpAddr()\n&#123;\n    if (!emptyempty($_SERVER[&#39;HTTP_CLIENT_IP&#39;]))\n    &#123;\n        $ip=$_SERVER[&#39;HTTP_CLIENT_IP&#39;];\n    &#125;\n    elseif (!emptyempty($_SERVER[&#39;HTTP_X_FORWARDED_FOR&#39;]))\n    //to check ip is pass from proxy\n    &#123;\n        $ip=$_SERVER[&#39;HTTP_X_FORWARDED_FOR&#39;];\n    &#125;\n    else\n    &#123;\n        $ip=$_SERVER[&#39;REMOTE_ADDR&#39;];\n    &#125;\n    return $ip;\n&#125;\n</code></pre><h3 id=\"11-PHP强制性文件下载\"><a href=\"#11-PHP强制性文件下载\" class=\"headerlink\" title=\"11. PHP强制性文件下载\"></a>11. PHP强制性文件下载</h3><p>为用户提供强制性的文件下载功能。</p>\n<pre><code>/********************\n*@file - path to file\n*/\nfunction force_download($file)\n&#123;\n    if ((isset($file))&amp;&amp;(file_exists($file))) &#123;\n       header(&quot;Content-length: &quot;.filesize($file));\n       header(&#39;Content-Type: application/octet-stream&#39;);\n       header(&#39;Content-Disposition: attachment; filename=&quot;&#39; . $file . &#39;&quot;&#39;);\n       readfile(&quot;$file&quot;);\n    &#125; else &#123;\n       echo &quot;No file selected&quot;;\n    &#125;\n&#125;\n</code></pre><h3 id=\"12-PHP创建标签云\"><a href=\"#12-PHP创建标签云\" class=\"headerlink\" title=\"12. PHP创建标签云\"></a>12. PHP创建标签云</h3><pre><code>function getCloud( $data = array(), $minFontSize = 12, $maxFontSize = 30 )\n&#123;\n    $minimumCount = min( array_values( $data ) );\n    $maximumCount = max( array_values( $data ) );\n    $spread       = $maximumCount - $minimumCount;\n    $cloudHTML    = &#39;&#39;;\n    $cloudTags    = array();  \n\n    $spread == 0 &amp;&amp; $spread = 1;  \n\n    foreach( $data as $tag =&gt; $count )\n    &#123;\n        $size = $minFontSize + ( $count - $minimumCount )\n            * ( $maxFontSize - $minFontSize ) / $spread;\n        $cloudTags[] = &#39;&lt;a style=&quot;font-size: &#39; . floor( $size ) . &#39;px&#39;\n        . &#39;&quot; href=&quot;#&quot; title=&quot;\\&#39;&#39; . $tag  .\n        &#39;\\&#39; returned a count of &#39; . $count . &#39;&quot;&gt;&#39;\n        . htmlspecialchars( stripslashes( $tag ) ) . &#39;&lt;/a&gt;&#39;;\n    &#125;  \n\n    return join( &quot;\\n&quot;, $cloudTags ) . &quot;\\n&quot;;\n&#125;\n/**************************\n****   Sample usage    ***/\n$arr = Array(&#39;Actionscript&#39; =&gt; 35, &#39;Adobe&#39; =&gt; 22, &#39;Array&#39; =&gt; 44, &#39;Background&#39; =&gt; 43,\n    &#39;Blur&#39; =&gt; 18, &#39;Canvas&#39; =&gt; 33, &#39;Class&#39; =&gt; 15, &#39;Color Palette&#39; =&gt; 11, &#39;Crop&#39; =&gt; 42,\n    &#39;Delimiter&#39; =&gt; 13, &#39;Depth&#39; =&gt; 34, &#39;Design&#39; =&gt; 8, &#39;Encode&#39; =&gt; 12, &#39;Encryption&#39; =&gt; 30,\n    &#39;Extract&#39; =&gt; 28, &#39;Filters&#39; =&gt; 42);\necho getCloud($arr, 12, 36);\n</code></pre><h3 id=\"13-PHP寻找两个字符串的相似性\"><a href=\"#13-PHP寻找两个字符串的相似性\" class=\"headerlink\" title=\"13. PHP寻找两个字符串的相似性\"></a>13. PHP寻找两个字符串的相似性</h3><p>PHP 提供了一个极少使用的 similar_text 函数，但此函数非常有用，用于比较两个字符串并返回相似程度的百分比。</p>\n<pre><code>similar_text($string1, $string2, $percent);\n//$percent will have the percentage of similarity\n</code></pre><h3 id=\"14-PHP在应用程序中使用-Gravatar-通用头像\"><a href=\"#14-PHP在应用程序中使用-Gravatar-通用头像\" class=\"headerlink\" title=\"14. PHP在应用程序中使用 Gravatar 通用头像\"></a>14. PHP在应用程序中使用 Gravatar 通用头像</h3><p>随着 WordPress 越来越普及，Gravatar 也随之流行。由于 Gravatar 提供了易于使用的 API，将其纳入应用程序也变得十分方便。</p>\n<pre><code>/******************\n*@email - Email address to show gravatar for\n*@size - size of gravatar\n*@default - URL of default gravatar to use\n*@rating - rating of Gravatar(G, PG, R, X)\n*/\nfunction show_gravatar($email, $size, $default, $rating)\n&#123;\n    echo &#39;&lt;img src=&quot;http://www.gravatar.com/avatar.php?gravatar_id=&#39;.md5($email).\n        &#39;&amp;default=&#39;.$default.&#39;&amp;size=&#39;.$size.&#39;&amp;rating=&#39;.$rating.&#39;&quot; width=&quot;&#39;.$size.&#39;px&quot;\n        height=&quot;&#39;.$size.&#39;px&quot; /&gt;&#39;;\n&#125;\n</code></pre><h3 id=\"15-PHP在字符断点处截断文字\"><a href=\"#15-PHP在字符断点处截断文字\" class=\"headerlink\" title=\"15. PHP在字符断点处截断文字\"></a>15. PHP在字符断点处截断文字</h3><p>所谓断字 (word break)，即一个单词可在转行时断开的地方。这一函数将在断字处截断字符串。</p>\n<pre><code>// Original PHP code by Chirp Internet: www.chirp.com.au\n// Please acknowledge use of this code by including this header.\nfunction myTruncate($string, $limit, $break=&quot;.&quot;, $pad=&quot;...&quot;) &#123;\n    // return with no change if string is shorter than $limit\n    if(strlen($string) &lt;= $limit)\n        return $string;   \n\n    // is $break present between $limit and the end of the string?\n    if(false !== ($breakpoint = strpos($string, $break, $limit))) &#123;\n        if($breakpoint &lt; strlen($string) - 1) &#123;\n            $string = substr($string, 0, $breakpoint) . $pad;\n        &#125;\n    &#125;\n    return $string;\n&#125;\n/***** Example ****/\n$short_string=myTruncate($long_string, 100, &#39; &#39;);\n</code></pre><h3 id=\"16-PHP文件-Zip-压缩\"><a href=\"#16-PHP文件-Zip-压缩\" class=\"headerlink\" title=\"16. PHP文件 Zip 压缩\"></a>16. PHP文件 Zip 压缩</h3><pre><code>/* creates a compressed zip file */\nfunction create_zip($files = array(),$destination = &#39;&#39;,$overwrite = false) &#123;\n    //if the zip file already exists and overwrite is false, return false\n    if(file_exists($destination) &amp;&amp; !$overwrite) &#123; return false; &#125;\n    //vars\n    $valid_files = array();\n    //if files were passed in...\n    if(is_array($files)) &#123;\n        //cycle through each file\n        foreach($files as $file) &#123;\n            //make sure the file exists\n            if(file_exists($file)) &#123;\n                $valid_files[] = $file;\n            &#125;\n        &#125;\n    &#125;\n    //if we have good files...\n    if(count($valid_files)) &#123;\n        //create the archive\n        $zip = new ZipArchive();\n        if($zip-&gt;open($destination,$overwrite ? ZIPARCHIVE::OVERWRITE : ZIPARCHIVE::CREATE) !== true) &#123;\n            return false;\n        &#125;\n        //add the files\n        foreach($valid_files as $file) &#123;\n            $zip-&gt;addFile($file,$file);\n        &#125;\n        //debug\n        //echo &#39;The zip archive contains &#39;,$zip-&gt;numFiles,&#39; files with a status of &#39;,$zip-&gt;status;  \n\n        //close the zip -- done!\n        $zip-&gt;close();  \n\n        //check to make sure the file exists\n        return file_exists($destination);\n    &#125;\n    else\n    &#123;\n        return false;\n    &#125;\n&#125;\n/***** Example Usage ***/\n$files=array(&#39;file1.jpg&#39;, &#39;file2.jpg&#39;, &#39;file3.gif&#39;);\ncreate_zip($files, &#39;myzipfile.zip&#39;, true);\n</code></pre><h3 id=\"17-PHP解压缩-Zip-文件\"><a href=\"#17-PHP解压缩-Zip-文件\" class=\"headerlink\" title=\"17. PHP解压缩 Zip 文件\"></a>17. PHP解压缩 Zip 文件</h3><pre><code>/**********************\n*@file - path to zip file\n*@destination - destination directory for unzipped files\n*/\nfunction unzip_file($file, $destination)&#123;\n    // create object\n    $zip = new ZipArchive() ;\n    // open archive\n    if ($zip-&gt;open($file) !== TRUE) &#123;\n        die (’Could not open archive’);\n    &#125;\n    // extract contents to destination directory\n    $zip-&gt;extractTo($destination);\n    // close archive\n    $zip-&gt;close();\n    echo &#39;Archive extracted to directory&#39;;\n&#125;\n</code></pre><h3 id=\"18-PHP为-URL-地址预设-http-字符串\"><a href=\"#18-PHP为-URL-地址预设-http-字符串\" class=\"headerlink\" title=\"18. PHP为 URL 地址预设 http 字符串\"></a>18. PHP为 URL 地址预设 http 字符串</h3><p>有时需要接受一些表单中的网址输入，但用户很少添加 http:// 字段，此代码将为网址添加该字段。</p>\n<pre><code>if (!preg_match(&quot;/^(http|ftp):/&quot;, $_POST[&#39;url&#39;])) &#123;\n   $_POST[&#39;url&#39;] = &#39;http://&#39;.$_POST[&#39;url&#39;];\n&#125;\n</code></pre><h3 id=\"19-PHP将网址字符串转换成超级链接\"><a href=\"#19-PHP将网址字符串转换成超级链接\" class=\"headerlink\" title=\"19. PHP将网址字符串转换成超级链接\"></a>19. PHP将网址字符串转换成超级链接</h3><p>该函数将 URL 和 E-mail 地址字符串转换为可点击的超级链接。</p>\n<pre><code>function makeClickableLinks($text) &#123;\n $text = eregi_replace(&#39;(((f|ht)&#123;1&#125;tp://)[-a-zA-Z0-9@:%_+.~#?&amp;//=]+)&#39;,\n &#39;&lt;a href=&quot;\\1&quot;&gt;\\1&lt;/a&gt;&#39;, $text);\n $text = eregi_replace(&#39;([[:space:]()[&#123;&#125;])(www.[-a-zA-Z0-9@:%_+.~#?&amp;//=]+)&#39;,\n &#39;\\1&lt;a href=&quot;http://\\2&quot;&gt;\\2&lt;/a&gt;&#39;, $text);\n $text = eregi_replace(&#39;([_.0-9a-z-]+@([0-9a-z][0-9a-z-]+.)+[a-z]&#123;2,3&#125;)&#39;,\n &#39;&lt;a href=&quot;mailto:\\1&quot;&gt;\\1&lt;/a&gt;&#39;, $text);  \n\nreturn $text;\n&#125;\n</code></pre><h3 id=\"20-PHP调整图像尺寸\"><a href=\"#20-PHP调整图像尺寸\" class=\"headerlink\" title=\"20. PHP调整图像尺寸\"></a>20. PHP调整图像尺寸</h3><p>创建图像缩略图需要许多时间，此代码将有助于了解缩略图的逻辑。</p>\n<pre><code>/**********************\n*@filename - path to the image\n*@tmpname - temporary path to thumbnail\n*@xmax - max width\n*@ymax - max height\n*/\nfunction resize_image($filename, $tmpname, $xmax, $ymax)\n&#123;\n    $ext = explode(&quot;.&quot;, $filename);\n    $ext = $ext[count($ext)-1];  \n\n    if($ext == &quot;jpg&quot; || $ext == &quot;jpeg&quot;)\n        $im = imagecreatefromjpeg($tmpname);\n    elseif($ext == &quot;png&quot;)\n        $im = imagecreatefrompng($tmpname);\n    elseif($ext == &quot;gif&quot;)\n        $im = imagecreatefromgif($tmpname);  \n\n    $x = imagesx($im);\n    $y = imagesy($im);  \n\n    if($x &lt;= $xmax &amp;&amp; $y &lt;= $ymax)\n        return $im;  \n\n    if($x &gt;= $y) &#123;\n        $newx = $xmax;\n        $newy = $newx * $y / $x;\n    &#125;\n    else &#123;\n        $newy = $ymax;\n        $newx = $x / $y * $newy;\n    &#125;  \n\n    $im2 = imagecreatetruecolor($newx, $newy);\n    imagecopyresized($im2, $im, 0, 0, 0, 0, floor($newx), floor($newy), $x, $y);\n    return $im2;\n&#125;\n</code></pre><h3 id=\"21-PHP检测-Ajax-请求\"><a href=\"#21-PHP检测-Ajax-请求\" class=\"headerlink\" title=\"21. PHP检测 Ajax 请求\"></a>21. PHP检测 Ajax 请求</h3><p>大多数的 JavaScript 框架如 jQuery，Mootools 等，在发出 Ajax 请求时，都会发送额外的 HTTP_X_REQUESTED_WITH 头部信息，头当他们一个ajax请求，因此你可以在服务器端侦测到 Ajax 请求。</p>\n<pre><code>if(!emptyempty($_SERVER[&#39;HTTP_X_REQUESTED_WITH&#39;]) &amp;&amp; strtolower($_SERVER[&#39;HTTP_X_REQUESTED_WITH&#39;]) == &#39;xmlhttprequest&#39;)&#123;\n    //If AJAX Request Then\n&#125;else&#123;\n//something else\n&#125;\n</code></pre>",
            "tags": [
                "php",
                "php服务器",
                "随笔",
                "php实例"
            ]
        }
    ]
}