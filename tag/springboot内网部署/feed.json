{
    "version": "https://jsonfeed.org/version/1",
    "title": "艾瑞可erik • All posts by \"springboot内网部署\" tag • All posts by \"undefined\" categories",
    "description": "一只PHP开发的程序猿，偶尔做做运维、Goland、Python、Java、摄影、画画、写作、顺便睡觉，反正整站都搞过。",
    "home_page_url": "https://erik.xyz",
    "items": [
        {
            "id": "https://erik.xyz/2024/12/12/intranet-spring-boot-install/",
            "url": "https://erik.xyz/2024/12/12/intranet-spring-boot-install/",
            "title": "spring boot内网部署",
            "date_published": "2024-12-12T10:22:18.000Z",
            "content_html": "<h4 id=\"1-准备环境\"><a href=\"#1-准备环境\" class=\"headerlink\" title=\"1. 准备环境\"></a>1. 准备环境</h4><p>确保内网中的服务器或机器具备运行 Spring Boot 应用的基本环境：</p>\n<ul>\n<li>JDK：确保服务器安装了合适版本的 JDK（通常建议使用 Java 8 及以上版本）。</li>\n<li>Maven/Gradle：根据项目使用的构建工具安装 Maven 或 Gradle。</li>\n<li>数据库：如果应用需要连接数据库，确保数据库在内网中可访问，且连接配置正确。</li>\n</ul>\n<span id=\"more\"></span>\n<h4 id=\"2-编译-Spring-Boot-应用\"><a href=\"#2-编译-Spring-Boot-应用\" class=\"headerlink\" title=\"2. 编译 Spring Boot 应用\"></a>2. 编译 Spring Boot 应用</h4><p>首先，你需要编译你的 Spring Boot 应用，生成可执行的 JAR 文件。可以通过以下命令在项目目录下执行：</p>\n<ul>\n<li>Maven 构建命令：</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mvn clean package</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<ul>\n<li>Gradle 构建命令：</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./gradlew build</span><br></pre></td></tr></table></figure>\n<p>这会在 target/ 或 build/libs/ 目录下生成一个可执行的 JAR 文件，通常名为 your-application-name.jar。</p>\n<h4 id=\"3-传输-JAR-到内网服务器\"><a href=\"#3-传输-JAR-到内网服务器\" class=\"headerlink\" title=\"3. 传输 JAR 到内网服务器\"></a>3. 传输 JAR 到内网服务器</h4><p>将生成的 JAR 文件上传到内网的目标服务器。可以使用各种文件传输工具，比如：</p>\n<ul>\n<li>SCP（如果服务器支持 SSH）：</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scp your-application-name.jar user@server-ip:/path/to/deploy/</span><br></pre></td></tr></table></figure>\n<ul>\n<li>FTP 或 SFTP（如果有配置 FTP 服务）。</li>\n</ul>\n<h4 id=\"4-配置-Spring-Boot-应用\"><a href=\"#4-配置-Spring-Boot-应用\" class=\"headerlink\" title=\"4. 配置 Spring Boot 应用\"></a>4. 配置 Spring Boot 应用</h4><p>在内网部署时，你可能需要根据环境修改配置文件，比如 application.properties 或 application.yml。常见的配置项包括：</p>\n<ul>\n<li>数据库连接信息（spring.datasource.url、spring.datasource.username 等）。</li>\n<li>日志配置。</li>\n<li>服务端口（server.port）。</li>\n<li>安全设置（如禁用外部访问，或者设置访问白名单等）。</li>\n</ul>\n<p>例如，修改 application.properties 中的数据库配置：<br><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">spring.datasource.url=jdbc:mysql://localhost:3306/your_db</span><br><span class=\"line\">spring.datasource.username=db_user</span><br><span class=\"line\">spring.datasource.password=db_password</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"5-启动-Spring-Boot-应用\"><a href=\"#5-启动-Spring-Boot-应用\" class=\"headerlink\" title=\"5. 启动 Spring Boot 应用\"></a>5. 启动 Spring Boot 应用</h4><p>在内网服务器上，使用以下命令启动 Spring Boot 应用：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">java -jar your-application-name.jar</span><br></pre></td></tr></table></figure>\n<p>如果你希望应用在后台运行，可以使用 nohup 或者类似的工具：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nohup java -jar your-application-name.jar &gt; output.log 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure>\n<p>这会将输出重定向到 output.log 文件，并让应用在后台运行。</p>\n<h4 id=\"6-配置防火墙和网络\"><a href=\"#6-配置防火墙和网络\" class=\"headerlink\" title=\"6. 配置防火墙和网络\"></a>6. 配置防火墙和网络</h4><ul>\n<li>确保服务器的防火墙允许访问应用所绑定的端口（默认是 8080）。如果使用其他端口，可以在防火墙中配置允许访问该端口。</li>\n<li>如果 Spring Boot 应用需要通过内网的特定 IP 地址或域名访问，确保 DNS 或 hosts 配置正确。</li>\n</ul>\n<h4 id=\"7-监控和日志\"><a href=\"#7-监控和日志\" class=\"headerlink\" title=\"7. 监控和日志\"></a>7. 监控和日志</h4><ul>\n<li>日志：Spring Boot 应用会将日志输出到控制台，你可以将日志配置为输出到文件中进行持久化存储。常见做法是在 application.properties 或 application.yml 中设置日志路径：</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">logging.file.name=/path/to/logs/application.log</span><br></pre></td></tr></table></figure>\n<ul>\n<li>监控：可以使用 Spring Boot 的 Actuator 或其他监控工具（如 Prometheus 和 Grafana）来监控应用的运行状态。</li>\n</ul>\n<h4 id=\"8-设置开机启动（可选）\"><a href=\"#8-设置开机启动（可选）\" class=\"headerlink\" title=\"8. 设置开机启动（可选）\"></a>8. 设置开机启动（可选）</h4><p>如果希望应用在服务器重启时自动启动，可以使用 systemd（Linux 系统）或配置为 Windows 服务。</p>\n<p>Linux 系统 (Systemd)</p>\n<p>创建一个 systemd 服务文件，如 /etc/systemd/system/yourapp.service：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[Unit]</span><br><span class=\"line\">Description=Spring Boot Application</span><br><span class=\"line\">After=network.target</span><br><span class=\"line\"></span><br><span class=\"line\">[Service]</span><br><span class=\"line\">User=your_user</span><br><span class=\"line\">ExecStart=/usr/bin/java -jar /path/to/your-application-name.jar</span><br><span class=\"line\">SuccessExitStatus=143</span><br><span class=\"line\">Restart=always</span><br><span class=\"line\"></span><br><span class=\"line\">[Install]</span><br><span class=\"line\">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure>\n<p>然后启用并启动服务：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo systemctl enable yourapp</span><br><span class=\"line\">sudo systemctl start yourapp</span><br></pre></td></tr></table></figure>",
            "tags": [
                "springboot",
                "springboot内网部署"
            ]
        }
    ]
}