{
    "version": "https://jsonfeed.org/version/1",
    "title": "艾瑞可erik • All posts by \"centos\" tag • All posts by \"undefined\" categories",
    "description": "一只PHP开发的程序猿，偶尔做做运维、Goland、Python、Java、摄影、画画、写作、顺便睡觉，反正整站都搞过。",
    "home_page_url": "https://erik.xyz",
    "items": [
        {
            "id": "https://erik.xyz/2017/11/25/centos-ru-he-an-zhuang-deb-ruan-jian-bao-yuan-ming-linux-xi-tong-xia-zen-me-yong-checkinstall-cong-yuan-ma-chuang-jian-yi-ge-rpm-huo-deb-bao/",
            "url": "https://erik.xyz/2017/11/25/centos-ru-he-an-zhuang-deb-ruan-jian-bao-yuan-ming-linux-xi-tong-xia-zen-me-yong-checkinstall-cong-yuan-ma-chuang-jian-yi-ge-rpm-huo-deb-bao/",
            "title": "centos如何安装deb软件包/rpm转换成deb(原名：Linux系统下怎么用CheckInstall从源码创建一个RPM或DEB包)",
            "date_published": "2017-11-25T02:38:00.000Z",
            "content_html": "<p>正如我确信，你们一定知道Linux下的多种软件安装方式：使用发行版所提供的包管理系统（<a href=\"http://www.tecmint.com/linux-package-management/\">aptitude，yum，或者zypper</a>，还可以举很多例子），从源码编译（尽管现在很少用了，但在Linux发展早期却是唯一可用的方法），或者使用各自的低级工具dpkg用于.deb，以及rpm用于.rpm，预编译包，如此这般。</p>\n<p><img src=\"http://www.linuxidc.com/upload/2015_09/150902085681941.png\" alt=\"Convert RPM to DEB and DEB to RPM\"><br><span id=\"more\"></span><br><em>使用Alien将RPM转换成DEB以及将DEB转换成RPM</em></p>\n<p>在本文中，我们将为你介绍alien，一个用于在各种不同的Linux包格式相互转换的工具，其最常见的用法是将.rpm转换成.deb（或者反过来）。 如果你需要某个特定类型的包，而你只能找到其它格式的包的时候，该工具迟早能派得上用场——即使是其作者不再维护，并且在其网站声明：alien将可能永远维持在实验状态。 例如，有一次，我正查找一个用于喷墨打印机的.deb驱动，但是却没有找到——生产厂家只提供.rpm包，这时候alien拯救了我。我安装了alien，将包进行转换，不久之后我就可以使用我的打印机了，没有任何问题。 即便如此，我们也必须澄清一下，这个工具不应当用来转换重要的系统文件和库，因为它们在不同的发行版中有不同的配置。只有在前面说的那种情况下所建议的安装方法根本不适合时，alien才能作为最后手段使用。 最后一项要点是，我们必须注意，虽然我们在本文中使用<a href=\"http://www.linuxidc.com/topicnews.aspx?tid=14\" title=\"CentOS\">CentOS</a>和Debian，除了前两个发行版及其各自的家族体系外，据我们所知，alien可以工作在Slackware中，甚至Solaris中。  </p>\n<h4 id=\"步骤1：安装Alien及其依赖包\"><a href=\"#步骤1：安装Alien及其依赖包\" class=\"headerlink\" title=\"步骤1：安装Alien及其依赖包\"></a>步骤1：安装Alien及其依赖包</h4><p>要安装alien到CentOS/RHEL 7中，你需要启用EPEL和Nux Dextop（是的，是Dextop——不是Desktop）仓库，顺序如下：</p>\n<ol>\n<li><code># yum install epel-release</code></li>\n</ol>\n<p>启用Nux Dextop仓库的包的当前最新版本是0.5（2015年8月10日发布），在安装之前你可以查看<a href=\"http://li.nux.ro/download/nux/dextop/el7/x86_64/\">http://li.nux.ro/download/nux/dextop/el7/x86_64/</a>上是否有更新的版本。</p>\n<ol>\n<li><code># rpm --import http://li.nux.ro/download/nux/RPM-GPG-KEY-nux.ro</code></li>\n<li><code># rpm -Uvh http://li.nux.ro/download/nux/dextop/el7/x86_64/nux-dextop-release-0-5.el7.nux.noarch.rpm</code></li>\n</ol>\n<p>然后再做，</p>\n<ol>\n<li><code># yum update &amp;&amp; yum install alien</code></li>\n</ol>\n<p>在<a href=\"http://www.linuxidc.com/topicnews.aspx?tid=5\" title=\"Fedora\">Fedora</a>中，你只需要运行上面的命令即可。 在Debian及其衍生版中，只需要：</p>\n<ol>\n<li><code># aptitude install alien</code></li>\n</ol>\n<h4 id=\"步骤2：将-deb转换成-rpm包\"><a href=\"#步骤2：将-deb转换成-rpm包\" class=\"headerlink\" title=\"步骤2：将.deb转换成.rpm包\"></a>步骤2：将.deb转换成.rpm包</h4><p>对于本次测试，我们选择了date工具，它提供了一系列日期和时间工具用于处理大量金融数据。我们将下载.deb包到我们的CentOS 7机器中，将它转换成.rpm并安装：</p>\n<p><img src=\"http://www.linuxidc.com/upload/2015_09/150902085681942.png\" alt=\"Check CentOS Version\"></p>\n<p><em>Check CentOS Version</em></p>\n<p>检查CentOS版本</p>\n<ol>\n<li><code># cat /etc/centos-release</code></li>\n<li><code># wget http://ftp.us.debian.org/debian/pool/main/d/dateutils/dateutils_0.3.1-1.1_amd64.deb</code></li>\n<li><code># alien --to-rpm --scripts dateutils_0.3.1-1.1_amd64.deb</code></li>\n</ol>\n<p><img src=\"http://www.linuxidc.com/upload/2015_09/150902085681943.png\" alt=\"Convert .deb to .rpm package in Linux\"></p>\n<p><em>在Linux中将.deb转换成.rpm</em></p>\n<p><strong>重要</strong>：（请注意alien是怎样来增加目标包的次版本号的。如果你想要无视该行为，请添加-keep-version标识）。 如果我们尝试马上安装该包，我们将碰到些许问题：</p>\n<ol>\n<li><code># rpm -Uvh dateutils-0.3.1-2.1.x86_64.rpm</code></li>\n</ol>\n<p><img src=\"http://www.linuxidc.com/upload/2015_09/150902085681945.png\" alt=\"Install RPM Package\"></p>\n<p><em>安装RPM包</em></p>\n<p>要解决该问题，我们需要启用epel-testing仓库，然后安装rpmbuild工具来编辑该包的配置以重建包：</p>\n<ol>\n<li><code># yum --enablerepo=epel-testing install rpmrebuild</code></li>\n</ol>\n<p>然后运行，</p>\n<ol>\n<li><code># rpmrebuild -pe dateutils-0.3.1-2.1.x86_64.rpm</code></li>\n</ol>\n<p>它会打开你的默认文本编辑器。请转到<code>%files</code>章节并删除涉及到错误信息中提到的目录的行，然后保存文件并退出：</p>\n<p><img src=\"http://www.linuxidc.com/upload/2015_09/150902085681944.png\" alt=\"Convert .deb to Alien Version\"></p>\n<p><em>转换.deb到Alien版</em></p>\n<p>但你退出该文件后，将提示你继续去重构。如果你选择“Y”，该文件会重构到指定的目录（与当前工作目录不同）：</p>\n<ol>\n<li><code># rpmrebuild –pe dateutils-0.3.1-2.1.x86_64.rpm</code></li>\n</ol>\n<p><img src=\"http://www.linuxidc.com/upload/2015_09/150902085681946.png\" alt=\"Build RPM Package\"></p>\n<p><em>构建RPM包</em></p>\n<p>现在你可以像以往一样继续来安装包并验证：</p>\n<ol>\n<li><code># rpm -Uvh /root/rpmbuild/RPMS/x86_64/dateutils-0.3.1-2.1.x86_64.rpm</code></li>\n<li><code># rpm -qa | grep dateutils</code></li>\n</ol>\n<p><img src=\"http://www.linuxidc.com/upload/2015_09/150902085681947.png\" alt=\"Install Build RPM Package\"></p>\n<p><em>安装构建RPM包</em></p>\n<p>最后，你可以列出date工具包含的各个工具，也可以查看各自的手册页：</p>\n<ol>\n<li><code># ls -l /usr/bin | grep dateutils</code></li>\n</ol>\n<p><img src=\"http://www.linuxidc.com/upload/2015_09/150902085681948.png\" alt=\"Verify Installed RPM Package\"></p>\n<p><em>验证安装的RPM包</em></p>\n<h4 id=\"步骤3：将-rpm转换成-deb包\"><a href=\"#步骤3：将-rpm转换成-deb包\" class=\"headerlink\" title=\"步骤3：将.rpm转换成.deb包\"></a>步骤3：将.rpm转换成.deb包</h4><p>在本节中，我们将演示如何将.rpm转换成.deb。在一台32位的Debian Wheezy机器中，让我们从CentOS 6操作系统仓库中下载用于zsh shell的.rpm包。注意，该shell在Debian及其衍生版的默认安装中是不可用的。</p>\n<ol>\n<li><code># cat /etc/shells</code></li>\n<li><code># lsb_release -a | tail -n 4</code></li>\n</ol>\n<p><img src=\"http://www.linuxidc.com/upload/2015_09/150902085681949.png\" alt=\"Check Shell and Debian OS Version\"></p>\n<p><em>检查Shell和Debian操作系统版本</em></p>\n<ol>\n<li><code># wget http://mirror.centos.org/centos/6/os/i386/Packages/zsh-4.3.11-4.el6.centos.i686.rpm</code></li>\n<li><code># alien --to-deb --scripts zsh-4.3.11-4.el6.centos.i686.rpm</code></li>\n</ol>\n<p>你可以安全地无视关于签名丢失的信息：</p>\n<p><img src=\"http://www.linuxidc.com/upload/2015_09/1509020856819410.png\" alt=\"Convert .rpm to .deb Package\"></p>\n<p><em>将.rpm转换成.deb包</em></p>\n<p>过了一会儿后，.deb包应该已经生成，并可以安装了：</p>\n<ol>\n<li><code># dpkg -i zsh_4.3.11-5_i386.deb</code></li>\n</ol>\n<p><img src=\"http://www.linuxidc.com/upload/2015_09/1509020856819412.png\" alt=\"Install RPM Converted Deb Package\"></p>\n<p><em>安装RPM转换来的Deb包</em></p>\n<p>安装完后，你看看可以zsh是否添加到了合法shell列表中：</p>\n<ol>\n<li><code># cat /etc/shells</code></li>\n</ol>\n<p><img src=\"http://www.linuxidc.com/upload/2015_09/1509020856819411.png\" alt=\"Confirm Installed Zsh Package\"></p>\n<p><em>确认安装的Zsh包</em></p>\n<p>转载：<a href=\"http://www.linuxidc.com/Linux/2015-09/122573.htm\">http://www.linuxidc.com/Linux/2015-09/122573.htm</a> 本文地址：<a href=\"http://erik.xyz/?p=1398\">http://erik.xyz/?p=1398</a></p>\n",
            "tags": [
                "centos",
                "deb",
                "deb/rpm互转",
                "deb转rpm",
                "rpm互转"
            ]
        },
        {
            "id": "https://erik.xyz/2015/03/24/centos-an-zhuang-svn/",
            "url": "https://erik.xyz/2015/03/24/centos-an-zhuang-svn/",
            "title": "centos安装svn",
            "date_published": "2015-03-24T12:17:00.000Z",
            "content_html": "<p>最近尝试进一步了解服务器，centos安装svn<br>rpm -qa subversion  检测已安装版本，如果存在则删除<br>删除   yum remove subversion<br>安装svn命令    yum install httpd httpd-devel subversion mod_dav_svn mod_auth_mysql 确认安装模块<br>进入目录     cd /etc/httpd/modules<br>确认命令    ls | grep svn<br>检查安装版本 svnserve —version<span id=\"more\"></span><br><a href=\"http://i3.tietuku.com/54d9260e32ce137c.png\"><img src=\"http://i3.tietuku.com/54d9260e32ce137c.png\" alt=\"艾瑞可erik\"></a><br>安装完成后还需要建立svn库<br>创建目录 mkdir -p /opt/svn/repositories svnadmin create /opt/svn/repositories<br>查看/opt/svn/repositories 文件夹发现包含了conf, db,format,hooks, locks, README.txt文件，说明一个SVN库已经建立。<br>配置<br>进入 cd /opt/svn/repositories/conf<br>配置密码 vi passwd [users] # harry = harryssecret # sally = sallyssecret admin=123456 配置权限 vi authz </p>\n<ol>\n<li>设置[/]代表根目录下所有的资源 [/] admin=rw 服务svnserve.com配置 vi svnserve.conf 【general] </li>\n<li>匿名访问的权限，可以是read,write,none,默认为read anon-access=none </li>\n<li>使授权用户有写权限 auth-access=write </li>\n<li>密码数据库的路径 password-db=passwd</li>\n<li>访问控制文件 authz-db=authz </li>\n<li>认证命名空间，subversion会在认证提示里显示，并且作为凭证缓存的关键字 realm=/opt/svn/repositories </li>\n</ol>\n<p><a href=\"http://i3.tietuku.com/067648b1456ff3ab.png\"><img src=\"http://i3.tietuku.com/067648b1456ff3ab.png\" alt=\"\"></a><br>配置防火墙 vi /etc/sysconfig/iptables<br>添加以下内容： -A INPUT -m state —state NEW -m tcp -p tcp —dport 3690 -j ACCEPT<br>保存后重启防火墙 service iptables restart<br>启动svn svnserve -d -r /opt/svn/repositories<br>查看svn进程 ps -ef|grep svn|grep -v grep root 3699 1 0 21:33 ? 00:00:00 svnserve -d -r /opt/svn/reposito<br>检测端口 netstat -ln |grep 3690 tcp 0 0 0.0.0.0:3690 0.0.0.0:* LIST<br>停止svn killall svnserve<br>启动svn svnserve -d -r /opt/svn/repositories 连接客户端测试</p>\n",
            "tags": [
                "centos",
                "svn",
                "代码提交"
            ]
        },
        {
            "id": "https://erik.xyz/2015/03/16/centos-zhong-ruan-jian-an-zhuang/",
            "url": "https://erik.xyz/2015/03/16/centos-zhong-ruan-jian-an-zhuang/",
            "title": "centos中软件安装",
            "date_published": "2015-03-15T23:45:00.000Z",
            "content_html": "<p>在centos中我们想要安装软件，一般都是用yum，在安装软件前首先是查询软件<br>例如安装 samba网上邻居<br>查询： rpm -qa | grep -i samba<br><a href=\"http://i2.tietuku.com/a8fca0536413f0a7.png\"><img src=\"http://i2.tietuku.com/a8fca0536413f0a7.png\" alt=\"\"></a><br>查询一下相关软件  yum search samba 找到后，就安装 yum install samba 安装完毕，<br>要修改配置文件，就需要找到文件路径 执行  rpm -qc samba samba-common<br><a href=\"http://i2.tietuku.com/17d07aa8d4d9d680.png\"><img src=\"http://i2.tietuku.com/17d07aa8d4d9d680.png\" alt=\"\"></a><br>接下来要启动软件，先查询一下启动方式 rpm -ql samba | grep ‘/etc’<br><a href=\"http://i2.tietuku.com/27c9d5d59ea177a5.png\"><img src=\"http://i2.tietuku.com/27c9d5d59ea177a5.png\" alt=\"\"></a><br>红线部分为启动路径 接下来就是具体启动操作<br><a href=\"http://i2.tietuku.com/80c44788d7448f95.png\"><img src=\"http://i2.tietuku.com/80c44788d7448f95.png\" alt=\"\"></a><br>加入开机启动 执行 vi /etc/profile 按下方向键到底部<br>然后按i键写入 /etc/init.d/smb start /etc/init.d/nmb start 然后保存并退出<br>执行 source /etc/profile  修改生效 重启一下软件就是开机启动</p>\n",
            "tags": [
                "centos",
                "linux",
                "centos软件",
                "centos软件安装"
            ]
        },
        {
            "id": "https://erik.xyz/2015/03/15/centos-da-jian-svn-fu-wu-qi/",
            "url": "https://erik.xyz/2015/03/15/centos-da-jian-svn-fu-wu-qi/",
            "title": "centos搭建svn服务器",
            "date_published": "2015-03-15T04:27:00.000Z",
            "content_html": "<p>在centos中搭建svn服务器 在终端输入 yum install subversion 安装完毕 <a href=\"http://i2.tietuku.com/793f012274070e04.png\"><img src=\"http://i2.tietuku.com/793f012274070e04.png\" alt=\"\"></a> </p>\n<p>输入 subversion -v 判断是否安装成功 接着会出现提示   -bash: subversion: command not found   </p>\n<p>查找 输入 svnserve –version   出现提示 svnserve，版本 1.6.11 (r934486) 编译于 Feb 10 2015，22:08:22     版权所有 (C) 2000-2009 CollabNet。 Subversion 是开放源代码软件，请参阅 <a href=\"http://subversion.tigris.org/\">http://subversion.tigris.org/</a> 站点。 此产品包含由 CollabNet(<a href=\"http://www.Collab.Net/\">http://www.Collab.Net/</a>) 开发的软件。  <span id=\"more\"></span>  </p>\n<p>下列版本库后端(FS) 模块可用:     <em> fs_base : 模块只能操作BDB版本库。 </em> fs_fs : 模块与文本文件(FSFS)版本库一起工作。     Cyrus SASL 认证可用。   </p>\n<p>有了svn软件还要建立svn库<br>命令 mkdir /opt/svn/repos   svnadmin create /opt/svn/repos<br>执行后生成多个文件在repos下<br>接下来配置一下 进入配置文件passwd   cd /opt/svn/repos/conf<br>编辑 passwd   vi passwd<br>在[users]下创建用户名 密码 <a href=\"http://i2.tietuku.com/4fc1a7855d996b1a.png\"><img src=\"http://i2.tietuku.com/4fc1a7855d996b1a.png\" alt=\"\"></a><br>创建成功，保存，退出 设置权限   vi authz <a href=\"http://i2.tietuku.com/1fca22354b1e4fa5.png\"><img src=\"http://i2.tietuku.com/1fca22354b1e4fa5.png\" alt=\"\"></a><br>最后设定 svnserve.conf<br>anon-access = none # 使非授权用户无法访问<br>auth-access = write # 使授权用户有写权限<br>password-db = password authz-db = authz   # 访问控制文件<br>realm = /opt/svn/repos # 认证命名空间，subversion会在认证提示里显示，并且作为凭证缓存的关键字<br>连接 启动 svnserve -d -r /opt/svn/repos 或 svnserve -d -r /opt/svn/repos —listen-port 3391</p>\n",
            "tags": [
                "php服务器",
                "centos"
            ]
        },
        {
            "id": "https://erik.xyz/2014/12/11/guan-yu-php-fu-dian-shu-ni-ying-gai-zhi-dao-de-all-bogus-about-the-float-in-php/",
            "url": "https://erik.xyz/2014/12/11/guan-yu-php-fu-dian-shu-ni-ying-gai-zhi-dao-de-all-bogus-about-the-float-in-php/",
            "title": "关于PHP浮点数你应该知道的(All ‘bogus’ about the float in PHP)",
            "date_published": "2014-12-11T15:33:00.000Z",
            "content_html": "<p>PHP是一种弱类型语言, 这样的特性, 必然要求有无缝透明的隐式类型转换, PHP内部使用zval来保存任意类型的数值, zval的结构如下(5.2为例):<br><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">struct \\_zval\\_struct &#123;</span><br><span class=\"line\">    /\\* Variable information */</span><br><span class=\"line\">    zvalue_value value; /\\* value */</span><br><span class=\"line\">    zend_uint refcount;</span><br><span class=\"line\">    zend_uchar type; /\\* active type */</span><br><span class=\"line\">    zend_uchar is_ref;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure><br><span id=\"more\"></span><br>上面的结构中, 实际保存数值本身的是zvalue_value联合体:<br><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">typedef union \\_zvalue\\_value &#123;</span><br><span class=\"line\">    long lval; /\\* long value */</span><br><span class=\"line\">    double dval; /\\* double value */</span><br><span class=\"line\">    struct &#123;</span><br><span class=\"line\">        char *val;</span><br><span class=\"line\">        int len;</span><br><span class=\"line\">    &#125; str;</span><br><span class=\"line\">    HashTable *ht; /\\* hash table value */</span><br><span class=\"line\">    zend\\_object\\_value obj;</span><br><span class=\"line\">&#125; zvalue_value;</span><br></pre></td></tr></table></figure><br>今天的话题, 我们只关注其中的俩个成员, lval和dval, 我们要意识到, long lval是随着编译器, OS的字长不同而不定长的, 它有可能是32bits或者64bits, 而double dval(双精度)由<a href=\"http://en.wikipedia.org/wiki/IEEE_754-2008\">IEEE 754</a>规定, 是定长的, 一定是64bits. 请记住这一点, 造就了PHP的一些代码的”非平台无关性”. <strong>我们接下来的讨论, 除了特别指明, 都是假设long为64bits</strong> IEEE 754的浮点计数法, 我这里就不引用了, 大家有兴趣的可以自己查看, 关键的一点是, double的尾数采用52位bit来保存, 算上隐藏的1位有效位, 一共是53bits. 在这里, 引出一个很有意思的问题, 我们用c代码举例(假设long为64bits):<br><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">      long a = x;</span><br><span class=\"line\">      assert(a == (long)(double)a);</span><br></pre></td></tr></table></figure><br>请问, a的取值在什么范围内的时候, 上面的代码可以断言成功?(留在文章最后解答) 现在我们回归正题, PHP在执行一个脚本之前, 首先需要读入脚本, 分析脚本, 这个过程中也包含着, 对脚本中的字面量进行zval化, 比如对于如下脚本:<br><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\">$a = 9223372036854775807; //64位有符号数最大值</span><br><span class=\"line\">$b = 9223372036854775808; //最大值+1</span><br><span class=\"line\">var_dump($a);</span><br><span class=\"line\">var_dump($b);</span><br></pre></td></tr></table></figure><br>输出:<br><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">int(9223372036854775807)</span><br><span class=\"line\">float(9.22337203685E+18)</span><br></pre></td></tr></table></figure><br>也就说, PHP在词法分析阶段, 对于一个字面量的数值, 会去判断, 是否超出了当前系统的long的表值范围, 如果不是, 则用lval来保存, zval为IS_LONG, 否则就用dval表示, zval IS_FLOAT. 凡是大于最大的整数值的数值, 我们都要小心, 因为它可能会有精度损失:<br><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\">$a = 9223372036854775807;</span><br><span class=\"line\">$b = 9223372036854775808;</span><br><span class=\"line\"></span><br><span class=\"line\">var_dump($a === ($b - 1));</span><br></pre></td></tr></table></figure><br>输出是false. 现在接上开头的讨论, 之前说过, PHP的整数, 可能是32位, 也可能是64位, 那么就决定了, 一些在64位上可以运行正常的代码, 可能会因为隐形的类型转换, 发生精度丢失, 从而造成代码不能正常的运行在32位系统上. 所以, 我们一定要警惕这个临界值, 好在PHP中已经定义了这个临界值:<br><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\">    echo PHP\\_INT\\_MAX;</span><br><span class=\"line\"> ?&gt;</span><br></pre></td></tr></table></figure><br>当然, 为了保险起见, 我们应该使用字符串来保存大整数, 并且采用比如<a href=\"http://www.php.net/manual/en/book.bc.php\">bcmath</a>这样的数学函数库来进行计算. 另外, 还有一个关键的配置, 会让我们产生迷惑, 这个配置就是<a href=\"http://www.php.net/manual/en/ini.core.php#ini.precision\">php.precision</a>, 这配置决定了PHP再输出一个float值的时候, 输出多少有效位. 最后, 我们再来回头看上面提出的问题, 也就是一个long的整数, 最大的值是多少, 才能保证转到float以后再转回long不会发生精度丢失? 比如, 对于整数, 我们知道它的二进制表示是, 101, 现在, 让我们右移俩位, 变成1.01, 舍去高位的隐含有效位1, 我们得到在double中存储5的二进制数值为:</p>\n<ol>\n<li>0/<em>符号位</em>/ 10000000001/<em>指数位</em>/ 0100000000000000000000000000000000000000000000000000</li>\n</ol>\n<p>5的二进制表示, 丝毫未损的保存在了尾数部分, 这个情况下, 从double转会回long, 不会发生精度丢失. 我们知道double用52位表示尾数, 算上隐含的首位1, 一共是53位精度.. 那么也就可以得出, 如果一个long的整数, 值小于:</p>\n<ol>\n<li>2^53 - 1 == 9007199254740991; //牢记, 我们现在假设是64bits的long</li>\n</ol>\n<p>那么, 这个整数, 在发生long-&gt;double-&gt;long的数值转换时, 不会发生精度丢失. 原始文章出自： <a href=\"http://www.laruence.com/2011/12/19/2399.html\" title=\"Permanet Link to 关于PHP浮点数你应该知道的(All ‘bogus’ about the float in PHP)\">http://www.laruence.com/2011/12/19/2399.html</a></p>\n",
            "tags": [
                "php",
                "php服务器",
                "centos"
            ]
        },
        {
            "id": "https://erik.xyz/2014/12/10/linux-xia-shi-yong-tar-ming-ling/",
            "url": "https://erik.xyz/2014/12/10/linux-xia-shi-yong-tar-ming-ling/",
            "title": "linux下使用tar命令",
            "date_published": "2014-12-10T14:33:00.000Z",
            "content_html": "<p>解压 语法：tar [主选项+辅选项] 文件或者目录 使用该命令时，主选项是必须要有的，它告诉tar要做什么事情，辅选项是辅助使用的，可以选用。 </p>\n<p><strong>主选项：</strong></p>\n<p>c 创建新的档案文件。如果用户想备份一个目录或是一些文件，就要选择这个选项。相当于打包。</p>\n<p>x 从档案文件中释放文件。相当于拆包。 </p>\n<p>t 列出档案文件的内容，查看已经备份了哪些文件。 </p>\n<p>特别注意，在参数的下达中， c/x/t 仅能存在一个！不可同时存在！因为不可能同时压缩与解压缩。 <span id=\"more\"></span></p>\n<p><strong>辅助选项：</strong> </p>\n<p>-z ：是否同时具有 gzip 的属性？亦即是否需要用 gzip 压缩或解压？ 一般格式为xx.tar.gz或xx. tgz </p>\n<p>-j ：是否同时具有 bzip2 的属性？亦即是否需要用 bzip2 压缩或解压？一般格式为xx.tar.bz2 </p>\n<p>-v ：压缩的过程中显示文件！这个常用 -f ：使用档名，请留意，在 f 之后要立即接档名喔！不要再加其他参数！</p>\n<p>-p ：使用原文件的原来属性（属性不会依据使用者而变） —exclude FILE：在压缩的过程中，不要将 FILE 打包！<br><strong>范例：</strong> 范例一：<br>将整个 /etc 目录下的文件全部打包成为 /tmp/etc.tar </p>\n<p>tar -cvf /tmp/etc.tar /etc　　</p>\n<p>&lt;==仅打包，不压缩！  tar -zcvf /tmp/etc.tar.gz /etc　　</p>\n<p>&lt;==打包后，以 gzip 压缩  tar -jcvf /tmp/etc.tar.bz2 /etc　</p>\n<p>&lt;==打包后，以 bzip2 压缩 </p>\n<h1 id=\"特别注意，在参数-f-之后的文件档名是自己取的，我们习惯上都用-tar-来作为辨识。\"><a href=\"#特别注意，在参数-f-之后的文件档名是自己取的，我们习惯上都用-tar-来作为辨识。\" class=\"headerlink\" title=\"特别注意，在参数 f 之后的文件档名是自己取的，我们习惯上都用 .tar 来作为辨识。\"></a>特别注意，在参数 f 之后的文件档名是自己取的，我们习惯上都用 .tar 来作为辨识。</h1><h1 id=\"如果加-z-参数，则以-tar-gz-或-tgz-来代表-gzip-压缩过的-tar-file-～\"><a href=\"#如果加-z-参数，则以-tar-gz-或-tgz-来代表-gzip-压缩过的-tar-file-～\" class=\"headerlink\" title=\"如果加 z 参数，则以 .tar.gz 或 .tgz 来代表 gzip 压缩过的 tar file ～\"></a>如果加 z 参数，则以 .tar.gz 或 .tgz 来代表 gzip 压缩过的 tar file ～</h1><h1 id=\"如果加-j-参数，则以-tar-bz2-来作为附档名啊～\"><a href=\"#如果加-j-参数，则以-tar-bz2-来作为附档名啊～\" class=\"headerlink\" title=\"如果加 j 参数，则以 .tar.bz2 来作为附档名啊～\"></a>如果加 j 参数，则以 .tar.bz2 来作为附档名啊～</h1><h1 id=\"上述指令在执行的时候，会显示一个警告讯息：-『tar-Removing-leading-“-from-member-names』那是关於绝对路径的特殊设定。\"><a href=\"#上述指令在执行的时候，会显示一个警告讯息：-『tar-Removing-leading-“-from-member-names』那是关於绝对路径的特殊设定。\" class=\"headerlink\" title=\"上述指令在执行的时候，会显示一个警告讯息： # 『tar: Removing leading /“ from member names』那是关於绝对路径的特殊设定。\"></a>上述指令在执行的时候，会显示一个警告讯息： # 『tar: Removing leading /“ from member names』那是关於绝对路径的特殊设定。</h1><p>范例二：</p>\n<p>查阅上述 /tmp/etc.tar.gz 文件内有哪些文件？ </p>\n<p>tar -ztvf /tmp/etc.tar.gz </p>\n<h1 id=\"由於我们使用-gzip-压缩，所以要查阅该-tar-file-内的文件时，\"><a href=\"#由於我们使用-gzip-压缩，所以要查阅该-tar-file-内的文件时，\" class=\"headerlink\" title=\"由於我们使用 gzip 压缩，所以要查阅该 tar file 内的文件时，\"></a>由於我们使用 gzip 压缩，所以要查阅该 tar file 内的文件时，</h1><h1 id=\"就得要加上-z-这个参数了！这很重要的！\"><a href=\"#就得要加上-z-这个参数了！这很重要的！\" class=\"headerlink\" title=\"就得要加上 z 这个参数了！这很重要的！\"></a>就得要加上 z 这个参数了！这很重要的！</h1><p>范例三：</p>\n<p>将 /tmp/etc.tar.gz 文件解压缩在 /usr/local/src 底下</p>\n<p> cd /usr/local/src</p>\n<p> tar -zxvf /tmp/etc.tar.gz </p>\n<h1 id=\"在预设的情况下，我们可以将压缩档在任何地方解开的！以这个范例来说\"><a href=\"#在预设的情况下，我们可以将压缩档在任何地方解开的！以这个范例来说\" class=\"headerlink\" title=\"在预设的情况下，我们可以将压缩档在任何地方解开的！以这个范例来说\"></a>在预设的情况下，我们可以将压缩档在任何地方解开的！以这个范例来说</h1><h1 id=\"我先将工作目录变换到-usr-local-src-底下，并且解开-tmp-etc-tar-gz\"><a href=\"#我先将工作目录变换到-usr-local-src-底下，并且解开-tmp-etc-tar-gz\" class=\"headerlink\" title=\"我先将工作目录变换到 /usr/local/src 底下，并且解开 /tmp/etc.tar.gz\"></a>我先将工作目录变换到 /usr/local/src 底下，并且解开 /tmp/etc.tar.gz</h1><h1 id=\"则解开的目录会在-usr-local-src-etc-，另外，如果您进入-usr-local-src-etc\"><a href=\"#则解开的目录会在-usr-local-src-etc-，另外，如果您进入-usr-local-src-etc\" class=\"headerlink\" title=\"则解开的目录会在 /usr/local/src/etc ，另外，如果您进入 /usr/local/src/etc\"></a>则解开的目录会在 /usr/local/src/etc ，另外，如果您进入 /usr/local/src/etc</h1><h1 id=\"则会发现，该目录下的文件属性与-etc-可能会有所不同喔！\"><a href=\"#则会发现，该目录下的文件属性与-etc-可能会有所不同喔！\" class=\"headerlink\" title=\"则会发现，该目录下的文件属性与 /etc/ 可能会有所不同喔！\"></a>则会发现，该目录下的文件属性与 /etc/ 可能会有所不同喔！</h1><p>范例四：</p>\n<p>在 /tmp 底下，我只想要将 /tmp/etc.tar.gz 内的 etc/passwd 解开而已 </p>\n<p> cd /tmp </p>\n<p> tar -zxvf /tmp/etc.tar.gz etc/passwd </p>\n<h1 id=\"我可以透过-tar-ztvf-来查阅-tarfile-内的文件名称，如果单只要一个文件，\"><a href=\"#我可以透过-tar-ztvf-来查阅-tarfile-内的文件名称，如果单只要一个文件，\" class=\"headerlink\" title=\"我可以透过 tar -ztvf 来查阅 tarfile 内的文件名称，如果单只要一个文件，\"></a>我可以透过 tar -ztvf 来查阅 tarfile 内的文件名称，如果单只要一个文件，</h1><h1 id=\"就可以透过这个方式来下达！注意到！-etc-tar-gz-内的根目录-是被拿掉了！\"><a href=\"#就可以透过这个方式来下达！注意到！-etc-tar-gz-内的根目录-是被拿掉了！\" class=\"headerlink\" title=\"就可以透过这个方式来下达！注意到！ etc.tar.gz 内的根目录 / 是被拿掉了！\"></a>就可以透过这个方式来下达！注意到！ etc.tar.gz 内的根目录 / 是被拿掉了！</h1><p>范例五：</p>\n<p>我要备份 /home, /etc ，但不要 /home/dmtsai </p>\n<p>tar —exclude /home/dmtsai -zcvf myfile.tar.gz /home/<em> /etc   </em></p>\n<p><em>另外：tar命令的C参数</em></p>\n<p><strong>tar -cvf file2.tar /home/usr2/file2</strong></p>\n<p>tar: Removing leading ‘/‘ from members names home/usr2/file2 该命令可以将/home/usr2/file2文件打包到当前目录下的file2.tar中，需要注意的是：使用绝对路径标识的源文件，在用tar命令压缩后，文件名连同绝对路径（这里是home/usr2/，根目录’/‘被自动去掉了）一并被压缩进来。使用tar命令解压缩后会出现以下情况： $ tar -xvf file2.tar $ ls …… …… home …… …… 解压缩后的文件名不是想象中的file2，而是home/usr2/file2。 </p>\n<p><strong>tar -cvf file2.tar -C /home/usr2 file2</strong></p>\n<p>该命令中的-C dir参数，将tar的工作目录从当前目录改为/home/usr2，将file2文件（不带绝对路径）压缩到file2.tar中。注意：-C dir参数的作用在于改变工作目录，其有效期为该命令中下一次-C dir参数之前。 使用tar的-C dir参数，同样可以做到在当前目录/home/usr1下将文件解压缩到其他目录，例如：</p>\n<p><strong>tar -xvf file2.tar -C /home/usr2</strong> </p>\n<p>而tar不用-C dir参数时是无法做到的：</p>\n<p>tar -xvf file2.tar /home/usr2 tar: /tmp/file: Not found in archive tar: Error exit delayed from previous errors</p>\n",
            "tags": [
                "php服务器",
                "centos",
                "linux"
            ]
        },
        {
            "id": "https://erik.xyz/2014/11/02/linux-xia-chang-yong-wen-jian-jie-ya/",
            "url": "https://erik.xyz/2014/11/02/linux-xia-chang-yong-wen-jian-jie-ya/",
            "title": "Linux下常用文件解压",
            "date_published": "2014-11-02T07:59:00.000Z",
            "content_html": "<p><a href=\"http://www.erik.xyz/lxchywjjy/\"><img src=\"http://i2.tietuku.com/bf358fa2f81bc07d.jpg\" alt=\"木木夕\"></a><br><strong>1.以.a为扩展名的文件:</strong> #tar xv file.a<br><strong>2.以.z为扩展名的文件: </strong> #uncompress file.Z<br><strong>3.以.gz为扩展名的文件: </strong> #gunzip file.gz<br><strong>4.以.bz2为扩展名的文件: </strong> #bunzip2 file.bz2<br><strong>5.以.tar.Z为扩展名的文件: </strong> #tar xvZf file.tar.Z 或 #compress -dc file.tar.Z | tar xvf<br><strong>6.以.tar.gz/.tgz为扩展名的文件: </strong> #tar xvzf file.tar.gz 或 gzip -dc file.tar.gz | tar xvf -<br><strong>7.以.tar.bz2为扩展名的文件: </strong> #tar xvIf file.tar.bz2 或 bzip2 -dc file.tar.bz2 | xvf –<br><strong>8.以.cpio.gz/.cgz为扩展名的文件: </strong> #gzip -dc file.cgz | cpio -div<br><strong>9.以.cpio/cpio为扩展名的文件: </strong> #cpio -div file.cpio 或cpio -divc file.cpio<br><strong>10.以.rpm为扩展名的文件安装: </strong> #rpm -i file.rpm<br><strong>11.以.rpm为扩展名的文件解压缩： </strong> #rpm2cpio file.rpm | cpio -div<br><strong>12.以.deb为扩展名的文件安装： </strong> #dpkg -i file.deb<br><strong>13.以.deb为扩展名的文件解压缩: </strong> #dpkg-deb —fsys-tarfile file.deb | tar xvf - ar p file.deb data.tar.gz | tar xvzf –<br><strong>14.以.zip为扩展名的文件: </strong> #unzip file.zip<br><strong>15.在linux下解压Winzip格式的文件：</strong> 要是装了jdk的话，可以用jar命令；还可以使用unzip命令。<br><strong>16.直接解压.tar.gz文件：</strong> xxxx.tar.gz文件使用tar带zxvf参数，可以一次解压开。XXXX为文件名。 例如：$tar zxvf xxxx.tar.gz 各种压缩文件的解压（安装方法）<br><strong>17.文件扩展名解压（安装方法）：</strong> .a ar xv file.a .Z uncompress file.Z .gz gunzip file.gz .bz2 bunzip2 file.bz2 .tar.Z tar xvZf file.tar.Z compress -dc file.tar.Z | tar xvf - .tar.gz/.tgz tar xvzf file.tar.gz gzip -dc file.tar.gz | tar xvf - .tar.bz2 tar xvIf file.tar.bz2 bzip2 -dc file.tar.bz2 | xvf - .cpio.gz/.cgz gzip -dc file.cgz | cpio -div .cpio/cpio cpio -div file.cpio cpio -divc file.cpio .rpm/install rpm -i file.rpm .rpm/extract rpm2cpio file.rpm | cpio -div .deb/install dpkg -i file.deb .deb/exrtact dpkg-deb —fsys-tarfile file.deb | tar xvf - ar p file.deb data.tar.gz | tar xvzf - .zip unzip file.zip bzip2 -d myfile.tar.bz2 | tar xvf </p>\n<p><strong>18.tar xvfz myfile.tar.bz2</strong> x 是解压 v 是复杂输出 f 是指定文件 z gz格式<br><strong>19.gzip</strong> gzip[选项]要压缩（或解压缩）的文件名 -c将输出写到标准输出上，并保留原有文件。 -d将压缩文件压缩。 -l对每个压缩文件，显示下列字段：压缩文件的大小，未压缩文件的大小、压缩比、未压缩文件的名字 -r递归式地查找指定目录并压缩或压缩其中的所有文件。 -t测试压缩文件是正完整。 -v对每一个压缩和解压缩的文件，显示其文件名和压缩比。 -num-用指定的数字调整压缩的速度。<br><strong>20.举例：</strong> 把/usr目录并包括它的子目录在内的全部文件做一备份，备份文件名为usr.tar tar cvf usr.tar /home 把/usr 目录并包括它的子目录在内的全部文件做一备份并进行压缩，备份文件名是usr.tar.gz tar czvf usr.tar.gz /usr 压缩一组文件，文件的后缀为tar.gz #tar cvf back.tar /back/ #gzip -q back.tar or #tar cvfz back.tar.gz /back/ 释放一个后缀为tar.gz的文件。 #tar zxvf back.tar.gz #gzip back.tar.gz #tar xvf back.tar</p>\n",
            "tags": [
                "centos",
                "linux",
                "centos6.5"
            ]
        },
        {
            "id": "https://erik.xyz/2014/10/31/centos6-5-ben-di-an-zhuang-shi-pin-bo-fang-qi/",
            "url": "https://erik.xyz/2014/10/31/centos6-5-ben-di-an-zhuang-shi-pin-bo-fang-qi/",
            "title": "centos6.5本地安装视频播放器",
            "date_published": "2014-10-31T09:57:00.000Z",
            "content_html": "<p><a href=\"http://www.erik.xyz/ctspbf/\"><img src=\"http://i2.tietuku.com/706b2fbb5793484a.jpg\" alt=\"木木夕\"></a> 安装来centos6.5很郁闷的是自带的播放器好多视频不支持（你懂的哦）。怎么办呢？？ 老规矩先度娘，后谷歌。。。 度娘的伙伴们大部分都是mplayer那我也随众人吧 首先下载文件MPlayer-1.1.tar.gz和yasm-1.2.0.tar.gz mplayer <a href=\"http://download.csdn.net/detail/w15875510692/7708613\">http://download.csdn.net/detail/w15875510692/7708613</a> yasm <a href=\"http://download.csdn.net/detail/w15875510692/7708623\">http://download.csdn.net/detail/w15875510692/7708623</a> 解压先安装yasm 再安装mplayer ./configure —enable-gui 之后 make &amp;&amp; make install 漫长的等待吧 安装完成后 cd /usar/share/mplayer/skins cp Blue /usr/local/share/mplayer/skins/ -r cd /usr/local/share/mplayer/skins/ mv Blue/ default modprobe snd_pcm_oss 输入gmplayer打开播放器</p>\n",
            "tags": [
                "php服务器",
                "centos",
                "linux"
            ]
        },
        {
            "id": "https://erik.xyz/2014/10/30/linux-xi-tong-fang-wen-windows-xi-tong-de-ying-pan-ntfs-ying-pan/",
            "url": "https://erik.xyz/2014/10/30/linux-xi-tong-fang-wen-windows-xi-tong-de-ying-pan-ntfs-ying-pan/",
            "title": "linux系统访问windows系统的硬盘ntfs硬盘",
            "date_published": "2014-10-30T02:14:00.000Z",
            "content_html": "<p><a href=\"http://www.erik.xyz/lwnygpan/\"><img src=\"http://i2.tietuku.com/5f7e22bbaa82f3ff.jpg\" alt=\"木木夕图片\"></a> 这边介绍的是NTFS-3G挂载ntfs硬盘 首先，确认你的linux系统是否已经安装GCC不然源码包没法编译的<br>输入命令行   yum -y install gcc<br>创建位于mnt文件下的www文件<br><span id=\"more\"></span><br>第二步，下载NTFS-3G依赖软件。FUSE下载地址 <a href=\"http://sourceforge.net/projects/fuse/files/fuse-2.X/2.9.0/fuse-2.9.0.tar.gz/download\">http://sourceforge.net/projects/fuse/files/fuse-2.X/2.9.0/fuse-2.9.0.tar.gz/download</a>   版本可以自己选<br>安装<br>1，解压命令       tar -xvzf fuse-2.9.0.tar.gz<br>2，复制    cd fuse-2.9.0<br>3，安装   ./configure &amp;&amp; make &amp;&amp; make install </p>\n<p>第三部，安装NTFS-3G驱动。下载地址 <a href=\"http://tuxera.com/opensource/ntfs-3g\\_ntfsprogs-2014.2.15.tgz\">http://tuxera.com/opensource/ntfs-3g\\_ntfsprogs-2014.2.15.tgz</a> tar -xvzf ntfs-3g_ntfsprogs-2014.2.15.tgz cd ntfs-3g_ntfsprogs-2014.2.15<br>./configure &amp;&amp; make &amp;&amp; make install<br>第四部，挂载ntfs格式硬盘 mount -t ntfs-3g /dev/sda1 /mnt/www<br>自动挂载 fdisk -l 可获得硬盘信息 一般sda1是c盘依次类推， sdb1是移动硬盘 vi /etc/fstab 在最后面添加 /dev/sda6 /mnt/www/d ntfs-3g defaults,umask=000 0 0 /dev/sda5 /mnt/www/d ntfs-3g defaults,umask=000 0 0 /dev/sdb6 /mnt/www/d ntfs-3g defaults,umask=000 0 0</p>\n",
            "tags": [
                "php服务器",
                "centos",
                "linux"
            ]
        },
        {
            "id": "https://erik.xyz/2014/10/29/yum-du-li-an-zhuang-lnmp-huan-jing/",
            "url": "https://erik.xyz/2014/10/29/yum-du-li-an-zhuang-lnmp-huan-jing/",
            "title": "yum独立安装lnmp环境",
            "date_published": "2014-10-29T03:24:00.000Z",
            "content_html": "<p>lnmp环境如何便捷安装？找找看，还真找到来。</p>\n<ul>\n<li>首先运行 yum install wget    //下载wget工具 </li>\n<li>再运行 wget <a href=\"http://www.atomicorp.com/installers/atomic\">http://www.atomicorp.com/installers/atomic</a> //下载atomic源 </li>\n<li>sh ./atomic   //安装 </li>\n<li>yum check-update  //更新<span id=\"more\"></span></li>\n<li>yum -y install ntp make openssl openssl-devel pcre pcre-devel libpng libpng-devel libjpeg-6b - - libjpeg-devel-6b freetype freetype-devel gd gd-devel zlib zlib-devel gcc gcc-c++ libXpm libXpm-devel ncurses ncurses-devel libmcrypt libmcrypt-devel libxml2 libxml2-devel imake autoconf automake screen sysstat compat-libstdc++-33 curl curl-devel //安装开发包和文件</li>\n<li>yum install nginx    //安装</li>\n<li>nginx service nginx start   //启动</li>\n<li>nginx chkconfig —levels 235 nginx on   //设2、3、5级别开机启动 </li>\n<li>yum install mysql mysql-server mysql-devel   //安装</li>\n<li>mysql service mysqld start        //启动</li>\n<li>mysql chkconfig —levels 235 mysqld on mysqladmin -u root password “123456” //为root用户设置密码 - service mysqld restart //重启mysql </li>\n<li>安装php yum install php lighttpd-fastcgi php-cli php-mysql php-gd php-imap php-ldap php-odbc php-pear php-xml php-xmlrpc php-mbstring php-mcrypt php-mssql php-snmp php-soap php-tidy php-common php-devel php-fpm //安装php和所需组件使PHP支持MySQL、FastCGI模式 </li>\n<li>service php-fpm start chkconfig —levels 235 php-fpm on 配置nginx支持php </li>\n<li>mv /etc/nginx/nginx.conf /etc/nginx/nginx.confbak // 将配置文件改为备份文件</li>\n<li>cp /etc/nginx/nginx.conf.default /etc/nginx/nginx.conf //由于原配置文件要自己去写因此可以使用默认的配置文件作为配置文件 //修改nginx配置文件，添加fastcgi支持 </li>\n<li>vi /etc/nginx/nginx.conf index index.php index.html index.htm; //加入index.php <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">location ~ \\\\.php$ &#123; </span><br><span class=\"line\">root           /usr/share/nginx/html; </span><br><span class=\"line\">fastcgi\\_pass   127.0.0.1:9000; </span><br><span class=\"line\">fastcgi\\_index  index.php;</span><br><span class=\"line\">fastcgi\\_param  SCRIPT\\_FILENAME  /usr/share/nginx/html$fastcgi\\_script\\_name; </span><br><span class=\"line\">include        fastcgi\\_params;</span><br><span class=\"line\">&#125; </span><br></pre></td></tr></table></figure>\n//将以上代码注释去掉，并修改成nginx默认路径 配置php<br>//编辑文件php.ini，在文件末尾添加cgi.fix_pathinfo = 1 vi /etc/php.ini<br>重启nginx<br>php-fpm service nginx restart service php-fpm restart </li>\n</ul>\n<p>建立info.php文件 vi /usr/share/nginx/html/info.php</p>\n<p>&lt;?php phpinfo(); ?&gt; </p>\n<p>浏览器输入127.0.01显示 <a href=\"http://i2.tietuku.com/fe584e1cf5db4f2b.png\"><img src=\"http://i2.tietuku.com/fe584e1cf5db4f2b.png\" alt=\"木木夕互联网\"></a></p>\n",
            "tags": [
                "centos",
                "linux",
                "memcache"
            ]
        },
        {
            "id": "https://erik.xyz/2014/10/29/centos6-5-an-zhuang-wine/",
            "url": "https://erik.xyz/2014/10/29/centos6-5-an-zhuang-wine/",
            "title": "centos6.5安装wine",
            "date_published": "2014-10-29T03:07:00.000Z",
            "content_html": "<p>本来是装了虚拟机vmware，但是很占内存，软件开多了不方便，而应用的centos软件又不想win系统的那样丰富。怎么办呢？度娘了，于是找到了解决方法 安装wine模拟win系统环境，相当与在centos上安装了一个插件 首先，安装一个第三方软件库，比较丰富的软件，差不多有2万多个 rpm -ivh <a href=\"http://mirrors.yun-idc.com/epel/6/i386/epel-release-6-8.noarch.rpm\">http://mirrors.yun-idc.com/epel/6/i386/epel-release-6-8.noarch.rpm</a> 因为软件库会更新版本，地址或者名字会有所变动，靠后面的小伙伴如果无法下载，自己在这个网址找找 接下来就是 yum install wine 如果这步报错的话 分别执行以下2个命令 yum clean all yum makecache 接下来重新 yum install wine 在应用程序中你就可以看到红酒杯的图标就是wine了 如果感觉版本地版本较低更改换新版本，那就卸载吧 rpm -qa |grep wine 来查看和wine有关的一般是10个，也有多的，全都删掉</p>\n",
            "tags": [
                "centos",
                "linux"
            ]
        },
        {
            "id": "https://erik.xyz/2014/10/27/centos-xia-zai-an-zhuang-playonlinux/",
            "url": "https://erik.xyz/2014/10/27/centos-xia-zai-an-zhuang-playonlinux/",
            "title": "CentOS下载安装playonlinux",
            "date_published": "2014-10-27T14:16:00.000Z",
            "content_html": "<p>wine配置有一段时间了，又发现有些比较有用的第三方扩展软件playonlinux 因为我装得是centos6.5库软件更新比较慢，这playonlinux单独编译太费劲了，就干脆用rpm吧 下载（注意版本会更新，下载不了上网站看看版本） rpm -ivh <a href=\"http://rpm.playonlinux.com/[playonlinux-yum-4-1.noarch.rpm](http://rpm.playonlinux.com/playonlinux-yum-4-1.noarch.rpm\">http://rpm.playonlinux.com/[playonlinux-yum-4-1.noarch.rpm](http://rpm.playonlinux.com/playonlinux-yum-4-1.noarch.rpm</a>) 安装 yum install playonlinux 等待吧，差不多20多个软件 安装好后在应用程序》最后面那一项（游戏中看到playonlinu就是了） 这个是wine第三方应用，很有用，弥补wine的不足，可以安装好多软件</p>\n",
            "tags": [
                "centos",
                "linux"
            ]
        },
        {
            "id": "https://erik.xyz/2014/10/21/apache-fu-wu-qi-duo-zhan-dian-pei-zhi/",
            "url": "https://erik.xyz/2014/10/21/apache-fu-wu-qi-duo-zhan-dian-pei-zhi/",
            "title": "apache服务器多站点配置",
            "date_published": "2014-10-21T10:24:00.000Z",
            "content_html": "<p>群里有网友说不知道phpstudy怎配置多站点，其实这个不难，我当初配置的不是集成环境，集成环境和不是集成环境都一样的配置 首先我们要找到apache配置文件 E:\\phpStudy\\Apache\\conf\\httpd.conf 然后打开文件查找httpd-vhosts.conf 于是我们查找到 <a href=\"http://www.erik.xyz/wp-content/uploads/2014/10/20141021175554.png\"><img src=\"http://www.erik.xyz/wp-content/uploads/2014/10/20141021175554-300x53.png\" alt=\"apache\"></a> <span id=\"more\"></span>去掉前面的# 然后按这个路径找到httpd-vhosts.conf文件并打开 找到这段 # # VirtualHost example: # Almost any Apache directive may go into a VirtualHost container. # The first VirtualHost section is used for all requests that do not # match a ServerName or ServerAlias in any <VirtualHost> block. # 看看前面有 NameVirtualHost <em>:80 如果没有就加上 然后找到 #&lt;VirtualHost </em>:80&gt; #    ServerAdmin webmaster@dummy-host.example.com #    DocumentRoot “/Apache24/docs/dummy-host.example.com” #    ServerName dummy-host.example.com #    ServerAlias www.dummy-host.example.com #    ErrorLog “logs/dummy-host.example.com-error.log” #    CustomLog “logs/dummy-host.example.com-access.log” common #</VirtualHost> #<VirtualHost *:80> #    ServerAdmin webmaster@dummy-host2.example.com #    DocumentRoot “/Apache24/docs/dummy-host2.example.com” #    ServerName dummy-host2.example.com #    ErrorLog “logs/dummy-host2.example.com-error.log” #    CustomLog “logs/dummy-host2.example.com-access.log” common #</VirtualHost> 去掉前面的#后，修改路径和域名 <a href=\"http://www.erik.xyz/wp-content/uploads/2014/10/s20141021181957.png\"><img src=\"http://www.erik.xyz/wp-content/uploads/2014/10/s20141021181957-300x207.png\" alt=\"虚拟站点配置\"></a> 到此结束，建议最好用独立配置，别用集成环境，集成环境配置的东西太多容易冲突出错，此方法仅限在服务器上运行，本地运行没测试过，目前不清楚。</p>\n",
            "tags": [
                "php服务器",
                "centos",
                "linux"
            ]
        },
        {
            "id": "https://erik.xyz/2014/10/07/centos6-5-cao-zuo-xi-tong/",
            "url": "https://erik.xyz/2014/10/07/centos6-5-cao-zuo-xi-tong/",
            "title": "CentOs6.5操作系统",
            "date_published": "2014-10-07T01:54:00.000Z",
            "content_html": "<p><a href=\"http://www.erik.xyz/wp-content/uploads/2014/10/logo.png\"><img src=\"http://www.erik.xyz/wp-content/uploads/2014/10/logo-300x300.png\" alt=\"logo.png\"></a> CentOS-6.5-x86_64-LiveCD.iso CentOS-6.5-x86_64-LiveDVD.iso CentOS-6.5-x86_64-bin-DVD1.iso （比较全的系统，有大部分软件） CentOS-6.5-x86_64-bin-DVD2.iso  （对上DVD1的补充） 下载：<a href=\"http://yunpan.cn/cgnqyggJJvYaD\">http://yunpan.cn/cgnqyggJJvYaD</a> 提取码 54b2 CentOS-6.5-i386-LiveDVD.iso CentOS-6.5-i386-LiveCD.iso CentOS-6.5-i386-bin-DVD2.iso（对上DVD1的补充） CentOS-6.5-i386-bin-DVD1.iso（比较全的系统，有大部分软件） 下载：<a href=\"http://yunpan.cn/cgnYNATiGayCM\">http://yunpan.cn/cgnYNATiGayCM</a> 提取码 d567</p>\n",
            "tags": [
                "centos",
                "linux",
                "centos6.5",
                "linux系统"
            ]
        },
        {
            "id": "https://erik.xyz/2014/10/04/lanmp-du-li-er-pei-zhi/",
            "url": "https://erik.xyz/2014/10/04/lanmp-du-li-er-pei-zhi/",
            "title": "lanmp独立而配置",
            "date_published": "2014-10-04T05:02:00.000Z",
            "content_html": "<p>(一)安装yum<br><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@delphi ~\\]# cd /etc/yum.repos.d/</span><br><span class=\"line\">[root@delphi yum.repos.d\\]# ls</span><br><span class=\"line\">CentOS-Base.repo CentOS-Debuginfo.repo CentOS-Media.repo CentOS-Vault.repo</span><br><span class=\"line\">[root@delphi yum.repos.d\\]# vi CentOS-Media.repo </span><br><span class=\"line\"># CentOS-Media.repo</span><br><span class=\"line\">#</span><br><span class=\"line\"># This repo can be used with mounted DVD media, verify the mount point for</span><br><span class=\"line\"># CentOS-6. You can use this repo and yum to install items directly off the</span><br><span class=\"line\"># DVD ISO that we release.</span><br><span class=\"line\">#</span><br><span class=\"line\"># To use this repo, put in your DVD and use it with the other repos too:</span><br><span class=\"line\"># yum --enablerepo=c6-media \\[command\\]</span><br><span class=\"line\">#</span><br><span class=\"line\"># or for ONLY the media repo, do this:</span><br><span class=\"line\">#</span><br><span class=\"line\"># yum --disablerepo=\\\\* --enablerepo=c6-media \\[command\\]</span><br></pre></td></tr></table></figure><br><span id=\"more\"></span><br>[c6-media]<br>name=CentOS-$releasever - Media<br>baseurl=file:///mnt/cdrom/     #指定了三个光盘有可能挂载的路径。<br>file:///media/cdrom/<br>file:///media/cdrecorder/<br>gpgcheck=1<br>enabled=1     #enabled=0 这里的0代表缺省源不存在，1代表启用。<br>gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-6</p>\n<p># wq保存退出。</p>\n<p>  如果你的linux能够上互联网，那么备份Base这个配置文件。</p>\n<p>[root@delphi yum.repos.d]# mv CentOS-Base.repo CentOS-Base.repo.bak</p>\n<pre><code>(二)保证你的电脑里安装了gcc gcc-c++ make,如果没有应该先安装\n</code></pre><p>[root@delphi ~]# yum install gcc -y<br>[root@delphi ~]# yum install gcc-c++ -y</p>\n<pre><code>(三)卸载apache php mysql rpm软件包。我的系统里没有装。方法很多，不一一罗列。 查看服务有没有启动：\n</code></pre><p>[root@delphi ~]# service httpd status<br>httpd: 未被识别的服务<br>[root@delphi ~]# service mysqld status<br>mysqld: 未被识别的服务</p>\n<p>[root@delphi ~]# rpm -qa httpd<br>[root@delphi ~]# rpm -qa mysql<br>[root@delphi ~]# rpm -qa mysqld<br>[root@delphi ~]# rpm -qa | grep php</p>\n<p>  如果你的系统里有这些包，那么rpm -e packagename或者yum remove packagename（解决依赖卸载）。   (四)关闭SElinux 允许iptables相关端口 1.关闭selinux的两种方法。—永久关闭。（需要重启系统）</p>\n<p>[root@delphi ~]# vi /etc/sysconfig/selinux</p>\n<p># This file controls the state of SELinux on the system.<br># SELINUX= can take one of these three values:<br># enforcing - SELinux security policy is enforced.<br># permissive - SELinux prints warnings instead of enforcing.<br># disabled - No SELinux policy is loaded.<br>SELINUX=disabled     # 把SELINUX=enforcing 更改为SELINUX=disabled<br># SELINUXTYPE= can take one of these two values:<br># targeted - Targeted processes are protected,<br># mls - Multi Level Security protection.<br>SELINUXTYPE=targeted</p>\n<p>2.临时关闭（不需要重启系统）</p>\n<p>[root@delphi ~]# setenforce 0</p>\n<p>(五)准备源码部署需要安装的所有源代码包  </p>\n<p> linux命令下载</p>\n<p> wget <a href=\"https://sourceforge.net/projects/erik1314/files/lanmp/autoconf-2.69.tar.gz\">https://sourceforge.net/projects/erik1314/files/lanmp/autoconf-2.69.tar.gz</a></p>\n<p> wget  <a href=\"https://sourceforge.net/projects/erik1314/files/lanmp/freetype-2.4.10.tar.gz\">https://sourceforge.net/projects/erik1314/files/lanmp/freetype-2.4.10.tar.gz</a></p>\n<p> wget  <a href=\"https://sourceforge.net/projects/erik1314/files/lanmp/gd-2.0.35.tar.gz\">https://sourceforge.net/projects/erik1314/files/lanmp/gd-2.0.35.tar.gz</a></p>\n<p> wget  <a href=\"https://sourceforge.net/projects/erik1314/files/lanmp/httpd-2.2.27.tar.gz\">https://sourceforge.net/projects/erik1314/files/lanmp/httpd-2.2.27.tar.gz</a></p>\n<p> wget  <a href=\"https://sourceforge.net/projects/erik1314/files/lanmp/jpegsrc.v8b.tar.gz\">https://sourceforge.net/projects/erik1314/files/lanmp/jpegsrc.v8b.tar.gz</a></p>\n<p> wget  <a href=\"https://sourceforge.net/projects/erik1314/files/lanmp/libmcrypt-2.5.8.tar.gz\">https://sourceforge.net/projects/erik1314/files/lanmp/libmcrypt-2.5.8.tar.gz</a></p>\n<p> wget  <a href=\"https://sourceforge.net/projects/erik1314/files/lanmp/libpng-1.5.14.tar.gz\">https://sourceforge.net/projects/erik1314/files/lanmp/libpng-1.5.14.tar.gz</a></p>\n<p> wget  <a href=\"https://sourceforge.net/projects/erik1314/files/lanmp/libxml2-2.9.0.tar.gz\">https://sourceforge.net/projects/erik1314/files/lanmp/libxml2-2.9.0.tar.gz</a></p>\n<p> wget  <a href=\"https://sourceforge.net/projects/erik1314/files/lanmp/mysql-5.1.42.tar.gz\">https://sourceforge.net/projects/erik1314/files/lanmp/mysql-5.1.42.tar.gz</a></p>\n<p> wget  <a href=\"https://sourceforge.net/projects/erik1314/files/lanmp/ncurses-5.6.tar.gz\">https://sourceforge.net/projects/erik1314/files/lanmp/ncurses-5.6.tar.gz</a></p>\n<p> wget  h<a href=\"https://sourceforge.net/projects/erik1314/files/lanmp/phpMyAdmin-3.5.6-all-languages.tar.gz\">https://sourceforge.net/projects/erik1314/files/lanmp/phpMyAdmin-3.5.6-all-languages.tar.gz</a></p>\n<p> wget  <a href=\"https://sourceforge.net/projects/erik1314/files/lanmp/zlib-1.2.7.tar.gz\">https://sourceforge.net/projects/erik1314/files/lanmp/zlib-1.2.7.tar.gz</a></p>\n<p> wget  <a href=\"https://sourceforge.net/projects/erik1314/files/lanmp/php-5.2.17.tar.gz\">https://sourceforge.net/projects/erik1314/files/lanmp/php-5.2.17.tar.gz</a>     （可根据网站情况选择版本）</p>\n<p>wget  <a href=\"https://sourceforge.net/projects/erik1314/files/lanmp/php-5.3.29.tar.gz\">https://sourceforge.net/projects/erik1314/files/lanmp/php-5.3.29.tar.gz</a></p>\n<p>wget <a href=\"https://sourceforge.net/projects/erik1314/files/lanmp/php-5.4.11.tar.gz\">https://sourceforge.net/projects/erik1314/files/lanmp/php-5.4.11.tar.gz</a></p>\n<p>wget  <a href=\"https://sourceforge.net/projects/erik1314/files/lanmp/php-5.4.33.tar.gz\">https://sourceforge.net/projects/erik1314/files/lanmp/php-5.4.33.tar.gz</a></p>\n<p>wget  <a href=\"https://sourceforge.net/projects/erik1314/files/lanmp/php-5.5.17.tar.gz\">https://sourceforge.net/projects/erik1314/files/lanmp/php-5.5.17.tar.gz</a></p>\n<p>wget  <a href=\"https://sourceforge.net/projects/erik1314/files/lanmp/php-5.6.1.tar.gz\">https://sourceforge.net/projects/erik1314/files/lanmp/php-5.6.1.tar.gz</a></p>\n<p> wget  <a href=\"https://sourceforge.net/projects/erik1314/files/lanmp/ZendOptimizer-3.3.3-linux-glibc23-x86_64.tar.gz\">https://sourceforge.net/projects/erik1314/files/lanmp/ZendOptimizer-3.3.3-linux-glibc23-x86_64.tar.gz</a></p>\n<p>php5.3以上不支持zendoptimizer用ZendGuard替换</p>\n<p>wget  <a href=\"https://sourceforge.net/projects/erik1314/files/lanmp/ZendGuard-5\\_5\\_0.tar.gz\">https://sourceforge.net/projects/erik1314/files/lanmp/ZendGuard-5\\_5\\_0.tar.gz</a></p>\n<p>win系统直接下载，再用ftp上传到服务器 <a href=\"https://sourceforge.net/projects/erik1314/files/lanmp/autoconf-2.69.tar.gz\">autoconf-2.69.tar.gz</a> <a href=\"https://sourceforge.net/projects/erik1314/files/lanmp/freetype-2.4.10.tar.gz\">freetype-2.4.10.tar.gz</a> <a href=\"https://sourceforge.net/projects/erik1314/files/lanmp/gd-2.0.35.tar.gz\">gd-2.0.35.tar.gz</a> <a href=\"https://sourceforge.net/projects/erik1314/files/lanmp/httpd-2.2.27.tar.gz\">httpd-2.2.27.tar.gz</a> <a href=\"https://sourceforge.net/projects/erik1314/files/lanmp/jpegsrc.v8b.tar.gz\">jpegsrc.v8b.tar.gz</a> <a href=\"https://sourceforge.net/projects/erik1314/files/lanmp/libmcrypt-2.5.8.tar.gz\">libmcrypt-2.5.8.tar.gz</a> <a href=\"https://sourceforge.net/projects/erik1314/files/lanmp/libpng-1.5.14.tar.gz\">libpng-1.5.14.tar.gz</a> <a href=\"https://sourceforge.net/projects/erik1314/files/lanmp/libxml2-2.9.0.tar.gz\">libxml2-2.9.0.tar.gz</a> <a href=\"https://sourceforge.net/projects/erik1314/files/lanmp/mysql-5.1.42.tar.gz\">mysql-5.1.42.tar.gz</a> <a href=\"https://sourceforge.net/projects/erik1314/files/lanmp/ncurses-5.6.tar.gz\">ncurses-5.6.tar.gz</a> <a href=\"https://sourceforge.net/projects/erik1314/files/lanmp/phpMyAdmin-3.5.6-all-languages.tar.gz\">phpMyAdmin-3.5.6-all-languages.tar.gz</a> <a href=\"https://sourceforge.net/projects/erik1314/files/lanmp/zlib-1.2.7.tar.gz\">zlib-1.2.7.tar.gz</a> <a href=\"https://sourceforge.net/projects/erik1314/files/lanmp/php-5.2.17.tar.gz\">php-5.2.17.tar.gz</a> <a href=\"https://sourceforge.net/projects/erik1314/files/lanmp/php-5.3.29.tar.gz\">php-5.3.29.tar.gz</a> <a href=\"https://sourceforge.net/projects/erik1314/files/lanmp/php-5.4.11.tar.gz\">php-5.4.11.tar.gz</a> <a href=\"https://sourceforge.net/projects/erik1314/files/lanmp/php-5.4.33.tar.gz\">php-5.4.33.tar.gz</a> <a href=\"https://sourceforge.net/projects/erik1314/files/lanmp/php-5.5.17.tar.gz\">php-5.5.17.tar.gz</a> <a href=\"https://sourceforge.net/projects/erik1314/files/lanmp/php-5.6.1.tar.gz\">php-5.6.1.tar.gz</a> <a href=\"https://sourceforge.net/projects/erik1314/files/lanmp/ZendOptimizer-3.3.3-linux-glibc23-x86_64.tar.gz\">ZendOptimizer-3.3.3-linux-glibc23-x86_64.tar.gz</a> <a href=\"https://sourceforge.net/projects/erik1314/files/lanmp/ZendGuard-5_5_0.tar.gz\">ZendGuard-5_5_0.tar.gz</a> 依次解压文件</p>\n<p>(六)开始搭建lamp环境 安装三步走configure —-make —-make install configure 检测系统配置，检测软件安装所需要的软件。 make 编译二进制文件为可执行文件。 make install 安装软件。 1.编译安装xml2</p>\n<p>[root@delphi lamp]#cd libxml2-2.6.30<br>[root@delphi libxml2-2.6.30]# ./configure —prefix=/usr/local/libxml2/<br>[root@delphi libxml2-2.6.30]# make &amp;&amp; make install</p>\n<p>  2.同样的方法安装libmcrpyt</p>\n<p>[root@delphi lamp]# cd libmcrypt-2.5.8<br>[root@delphi libmcrypt-2.5.8]# ./configure —prefix=/usr/local/libmcrypt/<br>[root@delphi libmcrypt-2.5.8]# make &amp;&amp; make install</p>\n<p>  3.编译安装zlib （zlib是个库文件，这里为了防止后期出错，不用指定路径，如果是64位系统，请参见安装libpng排错的方法安装。）</p>\n<p>[root@delphi lamp]# cd zlib-1.2.3<br>[root@delphi zlib-1.2.3]# ./configure<br>[root@delphi zlib-1.2.3]# make &amp;&amp; make install</p>\n<p>  编译安装libpng如果出现如下错误，是应为你的环境是64位系统，匹配不了zlib库。 /usr/local/lib/libz.a: could not read symbols: Bad value collect2: ld returned 1 exit status make[1]: <strong><em> [libpng12.la] 错误 1 make[1]: Leaving directory `/root/packget/libpng-1.2.31’ make: </em></strong> [all] 错误 2 解决办法：重新新安装 zlib tar -zxvf zlib-1.2.3.tar.gz cd zlib-1.2.3 ./configure vi Makefile 找到 CFLAGS=-O3 -DUSE_MMAP 在后面加入-fPIC，即变成CFLAGS=-O3 -DUSE_MMAP -fPIC 接下面步骤 make make install   4.编译安装libpng</p>\n<p>[root@delphi lamp]# cd libpng-1.2.31<br>[root@delphi libpng-1.2.31]# ./configure -prefix=/usr/local/libpng/<br>[root@delphi libpng-1.2.31]# make &amp;&amp; make install</p>\n<p>  5.安装jpeg6 这源码包的安装相对复杂一点。因为其不会自动创建对应的目录，首先我们自己手动建立目录 /usr/local/jpeg6/ #创建安装目录 /usr/local/jpeg6/bin/ #创建可执行文件目录 /usr/local/jpeg6/lib/ #创建库文件爱你存放目录 /usr/local/jpeg6/include #创建头文件存放目录 /usr/local/jpeg6/man/man1 #创建man手册中的命令帮助，man1指的是命令帮助， man5配置文件的帮助。</p>\n<p>[root@delphi lamp]# cd jpeg-6b/<br>[root@delphi jpeg-6b]# mkdir /usr/local/jpeg6/ &amp;&amp; mkdir /usr/local/jpeg6/bin/ &amp;&amp; mkdir /usr/local/jpeg6/lib/ &amp;&amp; mkdir /usr/local/jpeg6/include<br>[root@delphi jpeg-6b]# mkdir -p /usr/local/jpeg6/man/man1</p>\n<p>[root@delphi jpeg-6b]# ./configure —prefix=/usr/local/jpeg6/ —enable-shared —enable-static<br>[root@delphi jpeg-6b]# make &amp;&amp; make install</p>\n<p>  ************************************************************************* ./libtool —mode=compile gcc -O2 -I. -c ./jcapimin.c make: ./libtool：命令未找到 make: <strong><em> [jcapimin.lo] 错误 127 出现以上错误的解决办法： [root@delphi jpeg-6b]# cp /usr/share/libtool/config/config.sub /root/packget/jpeg-6b/ [root@delphi jpeg-6b]# cp /usr/share/libtool/config/config.guess /root/packget/jpeg-6b/ 然后： [root@delphi jpeg-6b]# make clean 再执行： [root@delphi jpeg-6b]# make [root@delphi jpeg-6b]# make install <strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong>*</strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></em></strong>   6.编译安装freetype</p>\n<p>[root@delphi lamp]# cd freetype-2.3.5<br>[root@delphi freetype-2.3.5]# ./configure —prefix=/usr/local/freetype/<br>[root@delphi freetype-2.3.5]# make &amp;&amp; make install</p>\n<p>  7.编译安装autoconf</p>\n<p>[root@delphi lamp]# cd autoconf-2.61<br>[root@delphi autoconf-2.61]# ./configure<br>[root@delphi autoconf-2.61]# make &amp;&amp; make install</p>\n<p>  8.编译安装gd库：</p>\n<p>[root@delphi lamp]# cd gd-2.0.35<br>[root@delphi gd-2.0.35]# ./configure —prefix=/usr/local/gd2/ —with-jpeg=/usr/local/jpeg6/ —with-freetype=/usr/local/freetype/</p>\n<h1 id=\"备注一下：这里如果你的zlib库是指定路径，那么可以—with-zlib-PATH\"><a href=\"#备注一下：这里如果你的zlib库是指定路径，那么可以—with-zlib-PATH\" class=\"headerlink\" title=\"备注一下：这里如果你的zlib库是指定路径，那么可以—with-zlib=/$PATH\"></a>备注一下：这里如果你的zlib库是指定路径，那么可以—with-zlib=/$PATH</h1><p>[root@delphi gd-2.0.35]# make &amp;&amp; make install</p>\n<p>  9.编译安装apache:</p>\n<p>[root@delphi lamp]# cd httpd-2.2.9<br>[root@delphi httpd-2.2.9]# ./configure —prefix=/usr/local/apache2/ —sysconfdir=/etc/httpd/ —with-included-apr —disable-userdir —enable-so —enable-deflate=shared —enable-expires=shared —enable-rewrite=shared —enable-static-support<br>[root@delphi httpd-2.2.9]# make &amp;&amp; make install</p>\n<p>[root@delphi httpd-2.2.9]# /usr/local/apache2/bin/apachectl start<br>[root@delphi httpd-2.2.9]# pgrep httpd<br>27652<br>27653<br>27654<br>27655<br>27656<br>27657</p>\n<p>如果没有禁止selinux 那么使用如下命令开启模块权限： [root@delphi ~]# chcon -t texrel_shlib_t modulename 通过浏览器访问服务器，如果反回It‘s works ！ 表示安装成功。   10.编译安装mysql之前需要安装编译nourses:</p>\n<p>[root@delphi lamp]# cd ncurses-5.6<br>[root@delphi ncurses-5.6]# ./configure —with-shared —without-debug —without-ada —enable-overwrite<br>[root@delphi ncurses-5.6]# make &amp;&amp; make install</p>\n<p>  11.编译安装mysql： 首先创建mysql用户以及用户组：</p>\n<p>[root@delphi lamp]# cd mysql-5.0.41<br>[root@delphi mysql-5.0.41]# groupadd mysql<br>[root@delphi mysql-5.0.41]# grep mysql /etc/group<br>mysql:x:501:<br>[root@delphi mysql-5.0.41]# useradd -g mysql mysql</p>\n<p>[root@delphi mysql-5.0.41]# ./configure —prefix=/usr/local/mysql —with-extra-charsets=all<br>[root@delphi mysql-5.0.41]# make &amp;&amp; make instal<br>make报错的话就用</p>\n<p>make ZEND_EXTRA_LIBS=’-liconv’ &amp;&amp; make install</p>\n<p>  配置mysql：把源码包中的my-medium.cnf拷贝的/etc/下命名为my.cnf</p>\n<p>[root@delphi mysql-5.0.41]# cp support-files/my-medium.cnf /etc/my.cnf</p>\n<p>启动用户的授权表：</p>\n<p>[root@delphi mysql-5.0.41]# /usr/local/mysql/bin/mysql_install_db —user=mysql</p>\n<p>改变目录权限：</p>\n<p>[root@delphi mysql-5.0.41]# chown -R root /usr/local/mysql     #改变mysql所属用户<br>[root@delphi mysql-5.0.41]# chown -R mysql /usr/local/mysql/var     #改变mysql下var这个目录所属用户<br>[root@delphi mysql-5.0.41]# chgrp -R mysql /usr/local/mysql     #改变mysql的所属组，这里的-Ｒ是权限继承到子目录</p>\n<p>启动：mysql</p>\n<p>[root@delphi mysql-5.0.41]# /usr/local/mysql/bin/mysqld_safe —user=mysql &amp;<br>[1] 25856<br>[root@delphi mysql-5.0.41]# nohup: 忽略输入重定向错误到标准输出端<br>Starting mysqld daemon with databases from /usr/local/mysql/var     #表示数据存放路径。回车既可。</p>\n<p>查看mysql是否启动：</p>\n<p>[root@delphi mysql-5.0.41]# pgrep mysql</p>\n<p>查看mysql的版本：</p>\n<p>[root@delphi mysql-5.0.41]# /usr/local/mysql/bin/mysqladmin version</p>\n<p>查看mysql配置参数：</p>\n<p>[root@delphi mysql-5.0.41]# /usr/local/mysql/bin/mysqladmin variables</p>\n<p>  设置ｍｙｓｑｌ的用户密码：</p>\n<p>[root@delphi mysql-5.0.41]# /usr/local/mysql/bin/mysql -uroot<br>Welcome to the MySQL monitor. Commands end with ; or \\g.<br>Your MySQL connection id is 3<br>Server version: 5.0.41-log Source distribution</p>\n<p>Type ‘help;’ or ‘\\h’ for help. Type ‘\\c’ to clear the buffer.</p>\n<p>mysql&gt; set password for ‘root’@’localhost’=PASSWORD(‘123456’);<br>Query OK, 0 rows affected (0.00 sec)</p>\n<p>mysql&gt; flush privileges;<br>Query OK, 0 rows affected (0.00 sec)</p>\n<p>mysql&gt; exit<br>Bye</p>\n<p>  把apache和mysql 加入启动项</p>\n<p>[root@delphi mysql-5.0.41]# echo “/usr/local/apache2/bin/apachectl start” &gt;&gt;/etc/rc.d/rc.local<br>[root@delphi mysql-5.0.41]# echo “/usr/local/mysql/bin/mysqld_safe —user=mysql &amp;” &gt;&gt; /etc/rc.d/rc.local</p>\n<p>  或者：</p>\n<p>[root@delphi ~]# cd lamp/mysql-5.0.41<br>[root@delphi mysql-5.0.41]# cp support-files/mysql.server /etc/rc.d/init.d/mysqld<br>[root@delphi mysql-5.0.41]# chown root.root /etc/rc.d/init.d/mysqld<br>[root@delphi mysql-5.0.41]# chmod 755 /etc/rc.d/init.d/mysqld<br>[root@delphi mysql-5.0.41]# chkconfig —add mysqld<br>[root@delphi mysql-5.0.41]# chkconfig —list mysqld<br>mysqld 0:关闭1:关闭2:启用3:启用4:启用5:启用6:关闭<br>[root@delphi mysql-5.0.41]# chkconfig —levels 245 mysqld off　#设置运行级别启动项的方法．<br>[root@delphi mysql-5.0.41]# chkconfig —list mysqld　<br>mysqld 0:关闭1:关闭2:关闭3:启用4:关闭5:关闭6:关闭<br>[root@delphi mysql-5.0.41]# chkconfig —levels 245 mysqld on #更改回原来的运行级别</p>\n<p>  12.安装php:</p>\n<p>[root@delphi lamp]# cd php-5.2.6<br>[root@delphi php-5.2.6]# ./configure —prefix=/usr/local/php/ —with-config-file-path=/usr/local/php/etc —with-apxs2=/usr/local/apache/bin/apxs —with-mysql=/usr/local/mysql/ —with-libxml-dir=/usr/local/libxml2/ —with-jpeg-dir=/usr/local/jpeg8/ —with-freetype-dir=/usr/local/freetype/ —with-gd —with-mcrypt=/usr/local/libmcrypt/ —with-mysqli=/usr/local/mysql/bin/mysql_config –with-curl=/usr/local/curl<br>—with-zlib-dir=/usr/local/zlib/ —with-png-dir=/usr/local/libpng/ —with-mysql —enable-soap —enable-mbstring=all—enable-sockets<br>或者<br>直接生成curl，后面就不用重新编译生成了<br>./configure —prefix=/usr/local/php/ —with-apxs2=/usr/local/apache/bin/apxs —with-curl=/usr/local/curl/bin —with-libxml-dir=/usr/local/libxml2/ —with-jpeg-dir=/usr/local/jpeg/ —with-freetype-dir=/usr/local/freetype/—with-gd-dir=/usr/local/gd/—with-zlib-dir=/usr/local/zlib/—with-mcrypt=/usr/local/libmcrypt/—with-mysqli=/usr/local/mysql/bin/mysql_config —enable-soap —enable-mbstring=all —enable-sockets<br> [root@delphi php-5.2.6]# make &amp;&amp; make install<br>这边make instal后回报错，原作者没给我给个答案<br>类似以下错误<br>/opt/php-5.2.17/ext/dom/node.c -o ext/dom/node.lo<br>/opt/php-5.2.17/ext/dom/node.c: In function â€کdom_canonicalizationâ€™:<br>/opt/php-5.2.17/ext/dom/node.c:1953: error: dereferencing pointer to incomplete type<br>/opt/php-5.2.17/ext/dom/node.c:1955: error: dereferencing pointer to incomplete type<br>make: <em>*</em> [ext/dom/node.lo] Error 1</p>\n<p>可用<br># curl -o php-5.2.17.patch <a href=\"https://mail.gnome.org/archives/xml/2012-August/txtbgxGXAvz4N.txt\">https://mail.gnome.org/archives/xml/2012-August/txtbgxGXAvz4N.txt</a></p>\n<h1 id=\"cd-php-5-2-17\"><a href=\"#cd-php-5-2-17\" class=\"headerlink\" title=\"cd php-5.2.17\"></a>cd php-5.2.17</h1><p># patch -p0 -b &lt; ./php-5.2.17.patch<br>   patching file ext/dom/node.c<br>   patching file<br>   ext/dom/documenttype.c<br>   patching file ext/simplexml/simplexml.c<br>然后重新编译，安装，记得make clean 一下<br>出现</p>\n<p>make: <em>*</em> [sapi/cli/php] 错误 1</p>\n<p>在make时改为 make ZEND_EXTRA_LIBS=’-liconv’ &amp;&amp; make install<br>  [root@delphi php-5.2.6]# cp php.ini-dist /usr/local/php/etc/php.ini[root@delphi php-5.2.6]# echo “Addtype application/x-httpd-php .php .phtml” &gt;&gt; /etc/httpd/httpd.conf[root@delphi php-5.2.6]# /usr/local/apache2/bin/apachectl restart</p>\n<p>cp php.ini-dist /usr/local/php/etc/php.ini</p>\n<p>vi /usr/local/apache/conf/httpd.conf</p>\n<p>在 AddType application/x-compress .Z</p>\n<pre><code> AddType application/x-gzip .gz .tgz\n</code></pre><p> 后面添加 Addtype application/x-httpd-php .php .phtml</p>\n<pre><code> Addtype application/x-httpd-php-source .phps\n</code></pre><p>13.安装Zend加速器</p>\n<p>[root@delphi lamp]# cd ZendOptimizer-3.2.6-linux-glibc21-i386<br>[root@delphi ZendOptimizer-3.2.6-linux-glibc21-i386]# ./install.sh</p>\n<p>  安装过程选择正确的 php.ini 文件所在目录 和 apache控制命令所在目录   14.安装 phpmyadmin 方便管理mysql数据库</p>\n<p>[root@delphi lamp]# mv phpMyAdmin-3.0.0-rc1-all-languages /usr/local/apache2/htdocs/phpmyadmin</p>\n<p>笔者在编译php时遇到诸多问题，也是一步步百度查询找到答案的，刚配置的centos是不完善的。</p>\n",
            "tags": [
                "php",
                "php服务器",
                "centos",
                "lanmp",
                "php环境独立配置",
                "服务器"
            ]
        }
    ]
}