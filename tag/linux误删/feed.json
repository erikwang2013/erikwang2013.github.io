{
    "version": "https://jsonfeed.org/version/1",
    "title": "艾瑞可erik • All posts by \"linux误删\" tag • All posts by \"undefined\" categories",
    "description": "一只PHP开发的程序猿，偶尔做做运维、Goland、Python、Java、摄影、画画、写作、顺便睡觉，反正整站都搞过。",
    "home_page_url": "https://erik.xyz",
    "items": [
        {
            "id": "https://erik.xyz/2020/08/04/inux-delete-restore/",
            "url": "https://erik.xyz/2020/08/04/inux-delete-restore/",
            "title": "linux上恢复误删除的文件或目录",
            "date_published": "2020-08-04T03:23:00.000Z",
            "content_html": "<p>Linux不像windows有那么显眼的回收站，不是简单的还原就可以了。 linux删除文件还原可以分为两种情况，一种是删除以后在进程存在删除信息，一种是删除以后进程都找不到，只有借助于工具还原，这里分别检查介绍下。</p>\n<p>一、误删除文件进程还在的情况。</p>\n<p>这种一般是有活动的进程存在持续标准输入或输出，到时文件被删除后，进程PID还是存在。这也就是有些服务器删除一些文件但是磁盘不释放的原因。比如当前举例说明： 通过一个shell终端对一个测试文件做cat追加操作：<br><span id=\"more\"></span></p>\n<pre><code>[root@21yunwei_backup ~]# echo  &quot;hello  py&quot; &gt; testdelete.py\n\n[root@21yunwei_backup ~]# cat  &gt;&gt; testdelete.py \nhello delete\n</code></pre><p>另外一个终端查看这个文件可以清楚看到内容：</p>\n<pre><code>[root@21yunwei_backup ~]# cat testdelete.py \n\nhello  py\n\nhello delete\n</code></pre><p>此时，在当前服务器删除文件rm -f ./testdelete.py</p>\n<p>命令查看这个目录，文件已经不存在了，那么现在我们将其恢复出来。</p>\n<p>lsof查看删除的文件进程是否还存在。<br>这里用到一个命令lsof，如没有安装请自行yum或者apt-get。类似这种情况，我们可以先lsof查看删除的文件 是否还在：</p>\n<pre><code>[root@21yunwei_backup ~]# lsof | grep deleted\nmysqld     1512   mysql    5u      REG              252,3          0    6312397 /tmp/ibzW3Lot (deleted)\ncat       20464    root    1w      REG              252,3         23    1310722 /root/testdelete.py (deleted)\n</code></pre><p>幸运的是这种情况进程还存在 ，那么开始进行恢复 操作。</p>\n<p>恢复。<br>恢复命令：</p>\n<p>cp /proc/pid/fd/1 /指定目录/文件名</p>\n<p>进入 进程目录，一般是进入/proc/pid/fd/,针对当前情况：</p>\n<pre><code>[root@21yunwei_backup ~]# cd   /proc/20464/fd\n[root@21yunwei_backup fd]# ll\ntotal 0\nlrwx------ 1 root root 64 Nov 15 18:12 0 &gt; /dev/pts/1\nl-wx------ 1 root root 64 Nov 15 18:12 1 &gt; /root/testdelete.py (deleted)\nlrwx------ 1 root root 64 Nov 15 18:12 2 &gt; /dev/pts/1\n</code></pre><p>恢复操作：</p>\n<pre><code>cp 1 /tmp/testdelete.py\n</code></pre><p>查看文件：</p>\n<pre><code>[root@21yunwei_backup fd]# cat  /tmp/testdelete.py\nhello  py\nhello delete\n</code></pre><p>恢复完成。</p>\n<p>二、误删除的文件进程已经不存在，借助于工具还原。</p>\n<p>创建准备删除的目录并echo一个 带有内容的文件：</p>\n<pre><code>[root@21yunwei_backup 21yunwei]# tree\n.\n├── deletetest\n│   └── mail\n│       └── test.py\n├── lost+found\n└── passwd\n3 directories, 2 files\n[root@21yunwei_backup 21yunwei]# cat /21yunwei/deletetest/mail/test.py \nhello Dj\n[root@21yunwei_backup 21yunwei]# tail  -2  passwd \nhaproxy:x:500:502::/home/haproxy:/bin/bash\ntcpdump:x:72:72::/:/sbin/nologin\n</code></pre><p>执行删除操作：</p>\n<pre><code>[root@21yunwei_backup 21yunwei]# rm  -rf    ./*\n[root@21yunwei_backup 21yunwei]# ll\ntotal 0\n</code></pre><p>现在开始进行误删除文件的恢复。这种情况一般是没有守护进程或者后台进程对其持续输入，所以删除就删除了，lsof也看不到。就要借助于工具。这里我们采用的工具是extundelete第三方工具。恢复步骤如下：</p>\n<p>1.停止对当前分区做任何操作，防止inode被覆盖。inode被覆盖基本就告别恢复了。比如停止所在分区的服务，卸载目录所在的设备，有必要的情况下都可以断网。</p>\n<p>2.通过dd命令对当前分区进行备份，防止第三方软件恢复失败导致数据丢失。适合数据非常重要的情况，这里测试，就没有备份，如备份可以考虑如下方式：</p>\n<p>dd if=/path/filename of=/dev/vdc1</p>\n<p>1.通过umount命令，对当前设备分区卸载。或者fuser 命令。</p>\n<p>umount /dev/vdb1 或者 umount /21yunwei</p>\n<p>如果提示设备busy，可以用fuser命令强制卸载：</p>\n<p>fuser -m -v -i -k /21yunwei</p>\n<p>1.下载第三方工具extundelete安装，搜索误删除的文件进行还原。</p>\n<pre><code>wget  http://nchc.dl.sourceforge.net/project/extundelete/extundelete/0.2.4/extundelete-0.2.4.tar.bz2\ntar jxvf extundelete-0.2.4.tar.bz2\ncd  extundelete-0.2.4\n./configure \nmake\nmake  install\n</code></pre><p>扫描误删除的文件：</p>\n<pre><code>[root@21yunwei_backup extundelete-0.2.4]# extundelete  --inode 2 /dev/vdb1\nNOTICE: Extended attributes are not restored.\nLoading filesystem metadata ... 8 groups loaded.\nGroup: 0\nContents of inode 2:\n.\n.省略N行\nFile name                                       | Inode number | Deleted status\n.                                                 2\n..                                                2\nlost+found                                        11             Deleted\ndeletetest                                        12             Deleted\npasswd                                            14             Deleted\n</code></pre><p>通过扫描发现了我们删除的文件夹，现在执行恢复操作。</p>\n<p>1.恢复单一文件passwd</p>\n<pre><code>[root@21yunwei_backup /]# extundelete /dev/vdb1 --restore-file passwd   \nNOTICE: Extended attributes are not restored.\nLoading filesystem metadata ... 8 groups loaded.\nLoading journal descriptors ... 46 descriptors loaded.\nSuccessfully restored file passwd\n</code></pre><p>恢复文件是放到了当前目录RECOVERED_FILES。 查看恢复的文件：</p>\n<pre><code>[root@21yunwei_backup /]# tail  -5  RECOVERED_FILES/passwd \nmysql:x:497:500::/home/mysql:/bin/false\nnginx:x:496:501::/home/nginx:/sbin/nologin\nzabbix:x:495:497:Zabbix Monitoring System:/var/lib/zabbix:/sbin/nologin\nhaproxy:x:500:502::/home/haproxy:/bin/bash\ntcpdump:x:72:72::/:/sbin/nologin\n</code></pre><p>2.恢复目录deletetest</p>\n<pre><code>[root@21yunwei_backup /]# extundelete /dev/vdb1 --restore-directory  deletetest \nNOTICE: Extended attributes are not restored.\nLoading filesystem metadata ... 8 groups loaded.\nLoading journal descriptors ... 46 descriptors loaded.\nSearching for recoverable inodes in directory deletetest ... \n5 recoverable inodes found.\nLooking through the directory structure for deleted files ... \n[root@21yunwei_backup /]# cat  RECOVERED_FILES/deletetest/mail/test.py \nhello Dj\n</code></pre><p>3.恢复所有</p>\n<pre><code>[root@21yunwei_backup /]# extundelete /dev/vdb1 --restore-all\nNOTICE: Extended attributes are not restored.\nLoading filesystem metadata ... 8 groups loaded.\nLoading journal descriptors ... 46 descriptors loaded.\nSearching for recoverable inodes in directory / ... \n5 recoverable inodes found.\nLooking through the directory structure for deleted files ... \n0 recoverable inodes still lost. \n[root@21yunwei_backup /]# cd RECOVERED_FILES/\n[root@21yunwei_backup RECOVERED_FILES]# tree\n.\n├── deletetest\n│   └── mail\n│       └── test.py\n└── passwd\n2 directories, 2 files\n</code></pre><p>4.恢复指定inode</p>\n<pre><code>[root@21yunwei_backup /]# extundelete /dev/vdb1 --restore-inode 14\nNOTICE: Extended attributes are not restored.\nLoading filesystem metadata ... 8 groups loaded.\nLoading journal descriptors ... 46 descriptors loaded.\n[root@21yunwei_backup /]# tail  -5   /RECOVERED_FILES/file.14 \nmysql:x:497:500::/home/mysql:/bin/false\nnginx:x:496:501::/home/nginx:/sbin/nologin\nzabbix:x:495:497:Zabbix Monitoring System:/var/lib/zabbix:/sbin/nologin\nhaproxy:x:500:502::/home/haproxy:/bin/bash\ntcpdump:x:72:72::/:/sbin/nologin\n</code></pre><p>注意恢复inode的时候，恢复 出来的文件名和之前不一样，需要单独进行改名。内容是没问题的。</p>\n<p>更多的extundelete用法请参考extundelete –help选项参数说明，当前恢复所有的操作完成。</p>\n",
            "tags": [
                "linux恢复",
                "linux误删"
            ]
        }
    ]
}