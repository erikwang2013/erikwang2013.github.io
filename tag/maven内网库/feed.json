{
    "version": "https://jsonfeed.org/version/1",
    "title": "艾瑞可erik • All posts by \"maven内网库\" tag • All posts by \"undefined\" categories",
    "description": "一只PHP开发的程序猿，偶尔做做运维、Goland、Python、Java、摄影、画画、写作、顺便睡觉，反正整站都搞过。",
    "home_page_url": "https://erik.xyz",
    "items": [
        {
            "id": "https://erik.xyz/2024/12/18/maven-intranet-library/",
            "url": "https://erik.xyz/2024/12/18/maven-intranet-library/",
            "title": "maven内网库",
            "date_published": "2024-12-18T12:55:00.000Z",
            "content_html": "<h4 id=\"1-搭建-Maven-私有仓库\"><a href=\"#1-搭建-Maven-私有仓库\" class=\"headerlink\" title=\"1. 搭建 Maven 私有仓库\"></a>1. 搭建 Maven 私有仓库</h4><p>首先，需要在内网环境中搭建一个 Maven 仓库，常用的私有 Maven 仓库工具有：</p>\n<ul>\n<li>Nexus Repository：Sonatype Nexus 是最流行的私有 Maven 仓库管理工具。</li>\n<li>Artifactory：JFrog Artifactory 是另一种流行的构建管理工具，提供了私有仓库的支持。</li>\n<li>Apache Archiva：Apache Archiva 也是一个支持 Maven 的仓库管理工具。</li>\n</ul>\n<p>以下是搭建 Nexus Repository 的简单步骤：<br><span id=\"more\"></span></p>\n<p>1.1 安装 Nexus Repository</p>\n<ul>\n<li><p>下载 Nexus： 访问 Nexus Repository 下载页面 下载 Nexus OSS 版本。</p>\n</li>\n<li><p>解压并启动： 解压下载的压缩包并启动 Nexus。</p>\n</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">cd /opt/nexus/bin</span><br><span class=\"line\">./nexus start</span><br></pre></td></tr></table></figure>\n<ul>\n<li>访问 Nexus UI： 打开浏览器，访问 Nexus 的默认地址：</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://localhost:8081</span><br></pre></td></tr></table></figure>\n<p>默认用户名为 admin，密码为 admin123，可以在首次登录后修改密码。</p>\n<p>1.2 配置 Maven 仓库</p>\n<p>在 Nexus UI 中，你可以创建一个新的 Maven 仓库。创建仓库后，你可以上传公司的内部依赖、插件和构建工件。</p>\n<h4 id=\"2-配置-Maven-使用内网仓库\"><a href=\"#2-配置-Maven-使用内网仓库\" class=\"headerlink\" title=\"2. 配置 Maven 使用内网仓库\"></a>2. 配置 Maven 使用内网仓库</h4><p>配置 Maven 使用内网仓库需要修改 settings.xml 文件。</p>\n<p>2.1 修改 settings.xml</p>\n<p>在 Maven 的 settings.xml 文件中，配置私有仓库的地址和认证信息。settings.xml 文件通常位于 ~/.m2/ 目录下（用户级别配置）或者 ${MAVEN_HOME}/conf/ 目录下（全局配置）。</p>\n<p>以下是配置内网 Maven 仓库的示例：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;settings xmlns=&quot;http://maven.apache.org/SETTINGS/1.0.0&quot;</span><br><span class=\"line\">          xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span><br><span class=\"line\">          xsi:schemaLocation=&quot;http://maven.apache.org/SETTINGS/1.0.0 http://maven.apache.org/xsd/settings-1.0.0.xsd&quot;&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;mirrors&gt;</span><br><span class=\"line\">        &lt;!-- 配置私有仓库镜像 --&gt;</span><br><span class=\"line\">        &lt;mirror&gt;</span><br><span class=\"line\">            &lt;id&gt;nexus&lt;/id&gt;</span><br><span class=\"line\">            &lt;mirrorOf&gt;external:http://central&lt;/mirrorOf&gt;</span><br><span class=\"line\">            &lt;url&gt;http://your-nexus-server:8081/repository/maven-public/&lt;/url&gt;</span><br><span class=\"line\">            &lt;blocked&gt;false&lt;/blocked&gt;</span><br><span class=\"line\">        &lt;/mirror&gt;</span><br><span class=\"line\">    &lt;/mirrors&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;repositories&gt;</span><br><span class=\"line\">        &lt;repository&gt;</span><br><span class=\"line\">            &lt;id&gt;internal-repo&lt;/id&gt;</span><br><span class=\"line\">            &lt;url&gt;http://your-nexus-server:8081/repository/maven-releases/&lt;/url&gt;</span><br><span class=\"line\">            &lt;snapshots&gt;</span><br><span class=\"line\">                &lt;enabled&gt;false&lt;/enabled&gt;</span><br><span class=\"line\">            &lt;/snapshots&gt;</span><br><span class=\"line\">        &lt;/repository&gt;</span><br><span class=\"line\">    &lt;/repositories&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;pluginRepositories&gt;</span><br><span class=\"line\">        &lt;pluginRepository&gt;</span><br><span class=\"line\">            &lt;id&gt;internal-plugins&lt;/id&gt;</span><br><span class=\"line\">            &lt;url&gt;http://your-nexus-server:8081/repository/maven-plugins/&lt;/url&gt;</span><br><span class=\"line\">        &lt;/pluginRepository&gt;</span><br><span class=\"line\">    &lt;/pluginRepositories&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;servers&gt;</span><br><span class=\"line\">        &lt;!-- 配置 Maven 仓库认证 --&gt;</span><br><span class=\"line\">        &lt;server&gt;</span><br><span class=\"line\">            &lt;id&gt;nexus&lt;/id&gt;</span><br><span class=\"line\">            &lt;username&gt;your-nexus-username&lt;/username&gt;</span><br><span class=\"line\">            &lt;password&gt;your-nexus-password&lt;/password&gt;</span><br><span class=\"line\">        &lt;/server&gt;</span><br><span class=\"line\">    &lt;/servers&gt;</span><br><span class=\"line\">&lt;/settings&gt;</span><br></pre></td></tr></table></figure>\n<p>2.2 配置镜像和仓库</p>\n<ul>\n<li><p>镜像（Mirror）：在 <mirrors> 标签中配置私有仓库的 URL，将 Maven 的中央仓库或其他公共仓库的请求代理到私有仓库中。通过 mirrorOf 配置来选择代理哪些仓库（external:<a href=\"http://central\">http://central</a> 表示代理所有外部仓库）。</p>\n</li>\n<li><p>仓库（Repository）：在 <repositories> 和 <pluginRepositories> 标签中配置你的内网仓库的 URL。</p>\n</li>\n<li><p>认证（Server Authentication）：在 <servers> 标签中配置内网仓库的认证信息（如果仓库需要认证）。</p>\n</li>\n</ul>\n<h4 id=\"3-配置项目使用内网仓库\"><a href=\"#3-配置项目使用内网仓库\" class=\"headerlink\" title=\"3. 配置项目使用内网仓库\"></a>3. 配置项目使用内网仓库</h4><p>在项目的 pom.xml 文件中，通常不需要额外配置仓库，因为 Maven 会使用 settings.xml 中配置的内网仓库。但是如果需要强制指定某个仓库，可以在 pom.xml 中配置 <repositories> 标签：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;repositories&gt;</span><br><span class=\"line\">    &lt;repository&gt;</span><br><span class=\"line\">        &lt;id&gt;nexus-repo&lt;/id&gt;</span><br><span class=\"line\">        &lt;url&gt;http://your-nexus-server:8081/repository/maven-releases/&lt;/url&gt;</span><br><span class=\"line\">    &lt;/repository&gt;</span><br><span class=\"line\">&lt;/repositories&gt;</span><br></pre></td></tr></table></figure>\n<h4 id=\"4-上传和下载依赖\"><a href=\"#4-上传和下载依赖\" class=\"headerlink\" title=\"4. 上传和下载依赖\"></a>4. 上传和下载依赖</h4><p>4.1 上传依赖到内网仓库<br>你可以通过 Maven 命令将本地构建的 JAR 文件上传到内网仓库。例如，将某个 JAR 上传到 Nexus：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mvn deploy:deploy-file \\</span><br><span class=\"line\">    -DgroupId=com.example \\</span><br><span class=\"line\">    -DartifactId=my-artifact \\</span><br><span class=\"line\">    -Dversion=1.0.0 \\</span><br><span class=\"line\">    -Dpackaging=jar \\</span><br><span class=\"line\">    -Dfile=path/to/your-artifact.jar \\</span><br><span class=\"line\">    -DrepositoryId=nexus \\</span><br><span class=\"line\">    -Durl=http://your-nexus-server:8081/repository/maven-releases/</span><br></pre></td></tr></table></figure>\n<p>4.2 从内网仓库下载依赖</p>\n<p>配置好内网仓库后，Maven 会自动从内网仓库下载依赖。如果仓库中没有该依赖，Maven 会尝试从其他配置的仓库下载。</p>\n<h4 id=\"5-使用私有仓库中的依赖\"><a href=\"#5-使用私有仓库中的依赖\" class=\"headerlink\" title=\"5. 使用私有仓库中的依赖\"></a>5. 使用私有仓库中的依赖</h4><p>一旦仓库配置好，Maven 将会从配置的内网仓库下载依赖。你可以在项目的 pom.xml 中正常引用依赖，Maven 会自动从私有仓库中拉取。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;dependencies&gt;</span><br><span class=\"line\">    &lt;dependency&gt;</span><br><span class=\"line\">        &lt;groupId&gt;com.example&lt;/groupId&gt;</span><br><span class=\"line\">        &lt;artifactId&gt;my-artifact&lt;/artifactId&gt;</span><br><span class=\"line\">        &lt;version&gt;1.0.0&lt;/version&gt;</span><br><span class=\"line\">    &lt;/dependency&gt;</span><br><span class=\"line\">&lt;/dependencies&gt;</span><br></pre></td></tr></table></figure>\n<h4 id=\"6-配置镜像以提高构建速度（可选）\"><a href=\"#6-配置镜像以提高构建速度（可选）\" class=\"headerlink\" title=\"6. 配置镜像以提高构建速度（可选）\"></a>6. 配置镜像以提高构建速度（可选）</h4><p>为了提高构建速度，你可以配置 settings.xml 来使用私有仓库作为 Maven 的默认镜像，确保所有的构建依赖都从私有仓库中拉取，避免每次访问外部仓库，降低构建时间。</p>\n",
            "tags": [
                "maven搭建库",
                "maven",
                "maven内网库"
            ]
        }
    ]
}