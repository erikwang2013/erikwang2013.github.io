{
    "version": "https://jsonfeed.org/version/1",
    "title": "艾瑞可erik • All posts by \"php项目\" tag • All posts by \"undefined\" categories",
    "description": "一只PHP开发的程序猿，偶尔做做运维、Goland、Python、Java、摄影、画画、写作、顺便睡觉，反正整站都搞过。",
    "home_page_url": "https://erik.xyz",
    "items": [
        {
            "id": "https://erik.xyz/2025/07/09/php-architecture03/",
            "url": "https://erik.xyz/2025/07/09/php-architecture03/",
            "title": "php架构方面的设计与思考（三）",
            "date_published": "2025-07-08T17:37:00.000Z",
            "content_html": "<p>PHP微服务架构终极整合方案:<br><span id=\"more\"></span></p>\n  <pre class=\"mermaid\">  graph TD\n      A[客户端] --> B{Kong网关}\n      B -->|路由| C[用户服务]\n      B -->|路由| D[订单服务]\n      B -->|路由| E[支付服务]\n\n      C -->|注册| F[Consul集群]\n      D -->|注册| F\n      E -->|注册| F\n\n      C -->|配置| G[Apollo]\n      D -->|配置| G\n      E -->|配置| G\n\n      D -->|消息| H[RabbitMQ集群]\n      H --> E\n      H --> I[通知服务]\n\n      F --> J[Prometheus]\n      G --> J\n      H --> J\n      J --> K[Grafana]\n\n      L[Jaeger] --> M[服务追踪]</pre>\n\n<ol>\n<li><p>基础设施快速部署<br>Docker Compose 全栈配置</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">version: &#x27;3.8&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">services:</span><br><span class=\"line\">  # 注册中心</span><br><span class=\"line\">  consul-server:</span><br><span class=\"line\">    image: consul:1.15</span><br><span class=\"line\">    ports: [&quot;8500:8500&quot;]</span><br><span class=\"line\">    command: &quot;agent -server -bootstrap-expect=1 -ui -client 0.0.0.0&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">  # API网关</span><br><span class=\"line\">  kong:</span><br><span class=\"line\">    image: kong:3.4</span><br><span class=\"line\">    depends_on: [consul-server]</span><br><span class=\"line\">    environment:</span><br><span class=\"line\">      KONG_DATABASE: &quot;off&quot;</span><br><span class=\"line\">      KONG_DECLARATIVE_CONFIG: &quot;/etc/kong/kong.yml&quot;</span><br><span class=\"line\">      KONG_PROXY_ACCESS_LOG: &quot;/dev/stdout&quot;</span><br><span class=\"line\">      KONG_ADMIN_ACCESS_LOG: &quot;/dev/stdout&quot;</span><br><span class=\"line\">      KONG_PROXY_ERROR_LOG: &quot;/dev/stderr&quot;</span><br><span class=\"line\">    ports: [&quot;8000:8000&quot;, &quot;8001:8001&quot;]</span><br><span class=\"line\">    volumes:</span><br><span class=\"line\">      - ./kong:/etc/kong</span><br><span class=\"line\"></span><br><span class=\"line\">  # 配置中心</span><br><span class=\"line\">  apollo:</span><br><span class=\"line\">    image: apolloconfig/apollo-portal:2.1.0</span><br><span class=\"line\">    ports: [&quot;8070:8070&quot;]</span><br><span class=\"line\">    environment:</span><br><span class=\"line\">      SPRING_DATASOURCE_URL: &quot;jdbc:mysql://apollo-db:3306/ApolloPortalDB&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">  # 消息队列</span><br><span class=\"line\">  rabbitmq:</span><br><span class=\"line\">    image: rabbitmq:3.11-management</span><br><span class=\"line\">    ports: [&quot;5672:5672&quot;, &quot;15672:15672&quot;]</span><br><span class=\"line\">    environment:</span><br><span class=\"line\">      RABBITMQ_DEFAULT_USER: &quot;admin&quot;</span><br><span class=\"line\">      RABBITMQ_DEFAULT_PASS: &quot;secret&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">  # 监控系统</span><br><span class=\"line\">  prometheus:</span><br><span class=\"line\">    image: prom/prometheus:v2.47</span><br><span class=\"line\">    ports: [&quot;9090:9090&quot;]</span><br><span class=\"line\">    volumes:</span><br><span class=\"line\">      - ./prometheus.yml:/etc/prometheus/prometheus.yml</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>核心服务PHP实现包</p>\n<p> composer.json 关键依赖</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  &quot;require&quot;: &#123;</span><br><span class=\"line\">    &quot;php&quot;: &quot;&gt;=8.2&quot;,</span><br><span class=\"line\">    &quot;ext-swoole&quot;: &quot;*&quot;,</span><br><span class=\"line\">    &quot;ext-redis&quot;: &quot;*&quot;,</span><br><span class=\"line\">    &quot;ext-amqp&quot;: &quot;*&quot;,</span><br><span class=\"line\"></span><br><span class=\"line\">    &quot;sensiolabs/consul-php-sdk&quot;: &quot;^2.0&quot;,</span><br><span class=\"line\">    &quot;guzzlehttp/guzzle&quot;: &quot;^7.8&quot;,</span><br><span class=\"line\">    &quot;php-amqplib/php-amqplib&quot;: &quot;^3.2&quot;,</span><br><span class=\"line\">    &quot;resilience-php/resilience-php&quot;: &quot;^1.3&quot;,</span><br><span class=\"line\">    &quot;apolloconfig/apollo-client&quot;: &quot;^2.0&quot;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li><p>服务注册与发现完整实现</p>\n<p> 服务注册（bootstrap.php）</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">use SensioLabs\\Consul\\ServiceFactory;</span><br><span class=\"line\"></span><br><span class=\"line\">$consul = new ServiceFactory([&#x27;base_uri&#x27; =&gt; &#x27;http://consul-server:8500&#x27;]);</span><br><span class=\"line\"></span><br><span class=\"line\">// 自动获取本机IP</span><br><span class=\"line\">$ip = trim(shell_exec(&quot;hostname -i&quot;));</span><br><span class=\"line\"></span><br><span class=\"line\">// 注册服务</span><br><span class=\"line\">$consul-&gt;get(AgentInterface::class)-&gt;registerService([</span><br><span class=\"line\">    &#x27;ID&#x27; =&gt; &#x27;order-service-&#x27;.gethostname(),</span><br><span class=\"line\">    &#x27;Name&#x27; =&gt; &#x27;order-service&#x27;,</span><br><span class=\"line\">    &#x27;Address&#x27; =&gt; $ip,</span><br><span class=\"line\">    &#x27;Port&#x27; =&gt; 8000,</span><br><span class=\"line\">    &#x27;Check&#x27; =&gt; [</span><br><span class=\"line\">        &#x27;HTTP&#x27; =&gt; &quot;http://&#123;$ip&#125;:8000/health&quot;,</span><br><span class=\"line\">        &#x27;Interval&#x27; =&gt; &#x27;5s&#x27;,</span><br><span class=\"line\">        &#x27;Timeout&#x27; =&gt; &#x27;2s&#x27;,</span><br><span class=\"line\">        &#x27;DeregisterCriticalServiceAfter&#x27; =&gt; &#x27;30s&#x27;</span><br><span class=\"line\">    ],</span><br><span class=\"line\">    &#x27;Tags&#x27; =&gt; [&#x27;v2&#x27;, &#x27;primary&#x27;]</span><br><span class=\"line\">]);</span><br><span class=\"line\"></span><br><span class=\"line\">// 健康检查端点</span><br><span class=\"line\">$app-&gt;get(&#x27;/health&#x27;, function() &#123;</span><br><span class=\"line\">    check_database();</span><br><span class=\"line\">    check_redis();</span><br><span class=\"line\">    return json_response([&#x27;status&#x27; =&gt; &#x27;UP&#x27;]);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>服务发现与负载均衡</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">class ServiceDiscovery &#123;</span><br><span class=\"line\">    private static $cache = [];</span><br><span class=\"line\">    private static $ttl = 5; // 缓存5秒</span><br><span class=\"line\"></span><br><span class=\"line\">    public static function getInstance(string $service): string &#123;</span><br><span class=\"line\">        $now = time();</span><br><span class=\"line\"></span><br><span class=\"line\">        // 缓存有效期内直接返回</span><br><span class=\"line\">        if (isset(self::$cache[$service]) &amp;&amp; </span><br><span class=\"line\">            $now - self::$cache[$service][&#x27;timestamp&#x27;] &lt; self::$ttl) &#123;</span><br><span class=\"line\">            return self::selectInstance(self::$cache[$service][&#x27;instances&#x27;]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        // 从Consul获取新实例</span><br><span class=\"line\">        $instances = $consul-&gt;getCatalog()-&gt;service($service)-&gt;json();</span><br><span class=\"line\">        self::$cache[$service] = [</span><br><span class=\"line\">            &#x27;instances&#x27; =&gt; $instances,</span><br><span class=\"line\">            &#x27;timestamp&#x27; =&gt; $now</span><br><span class=\"line\">        ];</span><br><span class=\"line\"></span><br><span class=\"line\">        return self::selectInstance($instances);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    private static function selectInstance(array $instances): string &#123;</span><br><span class=\"line\">        // 加权随机算法</span><br><span class=\"line\">        $total = array_sum(array_column($instances, &#x27;Weight&#x27;));</span><br><span class=\"line\">        $rand = mt_rand(1, $total);</span><br><span class=\"line\">        $current = 0;</span><br><span class=\"line\"></span><br><span class=\"line\">        foreach ($instances as $instance) &#123;</span><br><span class=\"line\">            $current += $instance[&#x27;Weight&#x27;];</span><br><span class=\"line\">            if ($rand &lt;= $current) &#123;</span><br><span class=\"line\">                return &quot;http://&#123;$instance[&#x27;ServiceAddress&#x27;]&#125;:&#123;$instance[&#x27;ServicePort&#x27;]&#125;&quot;;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>统一配置中心接入</p>\n<p>Apollo配置监听</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$apollo = new \\ApolloClient\\Client([</span><br><span class=\"line\">    &#x27;config_server&#x27; =&gt; &#x27;http://apollo:8070&#x27;,</span><br><span class=\"line\">    &#x27;app_id&#x27; =&gt; &#x27;order-service&#x27;,</span><br><span class=\"line\">    &#x27;cluster&#x27; =&gt; &#x27;default&#x27;</span><br><span class=\"line\">]);</span><br><span class=\"line\"></span><br><span class=\"line\">// 初始化配置</span><br><span class=\"line\">$mysqlConfig = $apollo-&gt;get(&#x27;mysql&#x27;);</span><br><span class=\"line\">DB::connect($mysqlConfig);</span><br><span class=\"line\"></span><br><span class=\"line\">// 动态监听</span><br><span class=\"line\">$apollo-&gt;listen([&#x27;mysql&#x27;, &#x27;redis&#x27;], function($namespace, $config) &#123;</span><br><span class=\"line\">    switch ($namespace) &#123;</span><br><span class=\"line\">        case &#x27;mysql&#x27;:</span><br><span class=\"line\">            DB::reconnect($config);</span><br><span class=\"line\">            break;</span><br><span class=\"line\">        case &#x27;redis&#x27;:</span><br><span class=\"line\">            Redis::setConfig($config);</span><br><span class=\"line\">            break;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    Logger::info(&quot;Config updated: $namespace&quot;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></li>\n<li><p>服务通信完整方案</p>\n<p>同步调用（HTTP）</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">class HttpServiceClient &#123;</span><br><span class=\"line\">    use CircuitBreaker;</span><br><span class=\"line\"></span><br><span class=\"line\">    public function call(string $service, string $endpoint, array $data) &#123;</span><br><span class=\"line\">        return $this-&gt;protect(function() use ($service, $endpoint, $data) &#123;</span><br><span class=\"line\">            $baseUrl = ServiceDiscovery::getInstance($service);</span><br><span class=\"line\">            $client = new GuzzleHttp\\Client([</span><br><span class=\"line\">                &#x27;base_uri&#x27; =&gt; $baseUrl,</span><br><span class=\"line\">                &#x27;timeout&#x27; =&gt; 2.0</span><br><span class=\"line\">            ]);</span><br><span class=\"line\"></span><br><span class=\"line\">            return $client-&gt;post($endpoint, [</span><br><span class=\"line\">                &#x27;json&#x27; =&gt; $data,</span><br><span class=\"line\">                &#x27;headers&#x27; =&gt; [</span><br><span class=\"line\">                    &#x27;X-Trace-Id&#x27; =&gt; Trace::getId()</span><br><span class=\"line\">                ]</span><br><span class=\"line\">            ]);</span><br><span class=\"line\">        &#125;, function() &#123; // 降级处理</span><br><span class=\"line\">            return [&#x27;status&#x27; =&gt; &#x27;degraded&#x27;];</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>异步通信（RabbitMQ）</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">class EventPublisher &#123;</span><br><span class=\"line\">    private $channel;</span><br><span class=\"line\"></span><br><span class=\"line\">    public function __construct() &#123;</span><br><span class=\"line\">        $conn = new AMQPStreamConnection(&#x27;rabbitmq&#x27;, 5672, &#x27;admin&#x27;, &#x27;secret&#x27;);</span><br><span class=\"line\">        $this-&gt;channel = $conn-&gt;channel();</span><br><span class=\"line\"></span><br><span class=\"line\">        // 声明死信交换器</span><br><span class=\"line\">        $this-&gt;channel-&gt;exchange_declare(&#x27;dlx&#x27;, &#x27;direct&#x27;, false, true);</span><br><span class=\"line\">        $this-&gt;channel-&gt;queue_declare(&#x27;dlq&#x27;, false, true);</span><br><span class=\"line\">        $this-&gt;channel-&gt;queue_bind(&#x27;dlq&#x27;, &#x27;dlx&#x27;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    public function publish(string $event, array $data) &#123;</span><br><span class=\"line\">        $this-&gt;channel-&gt;tx_select();</span><br><span class=\"line\"></span><br><span class=\"line\">        try &#123;</span><br><span class=\"line\">            $message = new AMQPMessage(json_encode($data), [</span><br><span class=\"line\">                &#x27;delivery_mode&#x27; =&gt; AMQPMessage::DELIVERY_MODE_PERSISTENT,</span><br><span class=\"line\">                &#x27;message_id&#x27; =&gt; Uuid::uuid4(),</span><br><span class=\"line\">                &#x27;timestamp&#x27; =&gt; time()</span><br><span class=\"line\">            ]);</span><br><span class=\"line\"></span><br><span class=\"line\">            $this-&gt;channel-&gt;basic_publish($message, &#x27;events&#x27;, $event);</span><br><span class=\"line\">            DB::table(&#x27;outbox&#x27;)-&gt;insert([&#x27;message_id&#x27; =&gt; $message-&gt;get(&#x27;message_id&#x27;)]);</span><br><span class=\"line\">            $this-&gt;channel-&gt;tx_commit();</span><br><span class=\"line\">        &#125; catch (Exception $e) &#123;</span><br><span class=\"line\">            $this-&gt;channel-&gt;tx_rollback();</span><br><span class=\"line\">            throw $e;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>服务降级熔断策略</p>\n<p>多级降级配置</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">class DegradeManager &#123;</span><br><span class=\"line\">    private static $levels = [</span><br><span class=\"line\">        &#x27;order-service&#x27; =&gt; [</span><br><span class=\"line\">            &#x27;full&#x27; =&gt; [&#x27;threshold&#x27; =&gt; 0.95, &#x27;fallback&#x27; =&gt; &#x27;cache&#x27;],</span><br><span class=\"line\">            &#x27;cache&#x27; =&gt; [&#x27;threshold&#x27; =&gt; 0.8, &#x27;fallback&#x27; =&gt; &#x27;readonly&#x27;],</span><br><span class=\"line\">            &#x27;readonly&#x27; =&gt; [&#x27;threshold&#x27; =&gt; 0.5, &#x27;fallback&#x27; =&gt; &#x27;static&#x27;]</span><br><span class=\"line\">        ]</span><br><span class=\"line\">    ];</span><br><span class=\"line\"></span><br><span class=\"line\">    public static function handle(string $service, callable $func) &#123;</span><br><span class=\"line\">        $status = self::getServiceStatus($service);</span><br><span class=\"line\"></span><br><span class=\"line\">        try &#123;</span><br><span class=\"line\">            switch ($status) &#123;</span><br><span class=\"line\">                case &#x27;full&#x27;:</span><br><span class=\"line\">                    return $func();</span><br><span class=\"line\">                case &#x27;cache&#x27;:</span><br><span class=\"line\">                    return Cache::remember(&quot;fallback:$service&quot;, 60, $func);</span><br><span class=\"line\">                case &#x27;readonly&#x27;:</span><br><span class=\"line\">                    if ($_SERVER[&#x27;REQUEST_METHOD&#x27;] === &#x27;GET&#x27;) &#123;</span><br><span class=\"line\">                        return $func();</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    throw new DegradeException(&#x27;只读模式&#x27;);</span><br><span class=\"line\">                case &#x27;static&#x27;:</span><br><span class=\"line\">                    return [&#x27;status&#x27; =&gt; &#x27;degraded&#x27;];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; catch (Exception $e) &#123;</span><br><span class=\"line\">            self::recordFailure($service);</span><br><span class=\"line\">            return self::handle($service, $func); // 自动降级</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    private static function getServiceStatus(string $service): string &#123;</span><br><span class=\"line\">        $failureRate = Prometheus::getFailureRate($service);</span><br><span class=\"line\"></span><br><span class=\"line\">        foreach (self::$levels[$service] as $level =&gt; $config) &#123;</span><br><span class=\"line\">            if ($failureRate &lt;= $config[&#x27;threshold&#x27;]) &#123;</span><br><span class=\"line\">                return $level;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        return &#x27;static&#x27;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>监控与告警配置</p>\n<p>Prometheus指标收集</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">class Metrics &#123;</span><br><span class=\"line\">    private static $counter;</span><br><span class=\"line\"></span><br><span class=\"line\">    public static function init() &#123;</span><br><span class=\"line\">        $registry = new CollectorRegistry(new InMemory());</span><br><span class=\"line\"></span><br><span class=\"line\">        self::$counter = $registry-&gt;registerCounter(</span><br><span class=\"line\">            &#x27;php&#x27;, </span><br><span class=\"line\">            &#x27;http_requests_total&#x27;, </span><br><span class=\"line\">            &#x27;Total HTTP requests&#x27;,</span><br><span class=\"line\">            [&#x27;method&#x27;, &#x27;endpoint&#x27;, &#x27;status&#x27;]</span><br><span class=\"line\">        );</span><br><span class=\"line\"></span><br><span class=\"line\">        // 暴露指标端点</span><br><span class=\"line\">        $app-&gt;get(&#x27;/metrics&#x27;, function() use ($registry) &#123;</span><br><span class=\"line\">            $renderer = new RenderTextFormat();</span><br><span class=\"line\">            return $renderer-&gt;render($registry-&gt;getMetricFamilySamples());</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    public static function countRequest($method, $path, $status) &#123;</span><br><span class=\"line\">        self::$counter-&gt;inc([</span><br><span class=\"line\">            $method, </span><br><span class=\"line\">            preg_replace(&#x27;/\\d+/&#x27;, &#x27;&#123;id&#125;&#x27;, $path),</span><br><span class=\"line\">            $status</span><br><span class=\"line\">        ]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">// 在中间件中调用</span><br><span class=\"line\">$app-&gt;addMiddleware(function($req, $handler) &#123;</span><br><span class=\"line\">    $start = microtime(true);</span><br><span class=\"line\">    $response = $handler-&gt;handle($req);</span><br><span class=\"line\">    $duration = microtime(true) - $start;</span><br><span class=\"line\"></span><br><span class=\"line\">    Metrics::countRequest(</span><br><span class=\"line\">        $req-&gt;getMethod(),</span><br><span class=\"line\">        $req-&gt;getUri()-&gt;getPath(),</span><br><span class=\"line\">        $response-&gt;getStatusCode()</span><br><span class=\"line\">    );</span><br><span class=\"line\"></span><br><span class=\"line\">    return $response;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>生产环境部署建议</p>\n</li>\n</ol>\n<ol>\n<li><p>服务注册中心：</p>\n<ul>\n<li><p>部署3节点Consul集群</p>\n</li>\n<li><p>启用ACL和TLS加密</p>\n</li>\n<li><p>设置自动备份策略</p>\n</li>\n</ul>\n</li>\n</ol>\n<ul>\n<li><p>API网关：</p>\n<ul>\n<li><p>Kong集群 + Nginx负载均衡</p>\n</li>\n<li><p>启用JWT插件和速率限制</p>\n</li>\n<li><p>配置WAF规则防止攻击</p>\n</li>\n</ul>\n</li>\n<li><p>配置中心：</p>\n<ul>\n<li><p>Apollo多环境隔离（DEV/TEST/PROD）</p>\n</li>\n<li><p>敏感配置加密存储</p>\n</li>\n<li><p>设置配置变更审批流程</p>\n</li>\n</ul>\n</li>\n<li><p>消息队列：</p>\n<ul>\n<li><p>RabbitMQ镜像队列</p>\n</li>\n<li><p>设置合理的TTL和死信策略</p>\n</li>\n<li><p>监控队列积压情况</p>\n</li>\n</ul>\n</li>\n<li><p>监控系统：</p>\n<ul>\n<li><p>Prometheus联邦集群</p>\n</li>\n<li><p>Grafana统一看板</p>\n</li>\n<li><p>关键指标告警（P99延迟&gt;500ms，错误率&gt;1%）</p>\n</li>\n</ul>\n</li>\n</ul>\n<h5 id=\"完整架构调用流程示例\"><a href=\"#完整架构调用流程示例\" class=\"headerlink\" title=\"完整架构调用流程示例\"></a>完整架构调用流程示例</h5><ol>\n<li>客户端请求 → Kong网关（认证+限流）</li>\n</ol>\n<ul>\n<li><p>网关查询Consul获取订单服务实例</p>\n</li>\n<li><p>订单服务处理时：</p>\n<ul>\n<li><p>从Apollo获取当前配置</p>\n</li>\n<li><p>通过HTTP调用支付服务（带熔断）</p>\n</li>\n<li><p>发送消息到RabbitMQ</p>\n</li>\n</ul>\n</li>\n<li><p>支付服务消费消息后：</p>\n<ul>\n<li><p>更新数据库</p>\n</li>\n<li><p>记录Prometheus指标</p>\n</li>\n<li><p>推送结果到通知服务</p>\n</li>\n</ul>\n</li>\n<li><p>全链路追踪数据上报Jaeger</p>\n</li>\n</ul>\n",
            "tags": [
                "php架构",
                "php项目",
                "php架构设计"
            ]
        },
        {
            "id": "https://erik.xyz/2025/07/06/php-architecture02/",
            "url": "https://erik.xyz/2025/07/06/php-architecture02/",
            "title": "php 架构方面的设计与思考（二）",
            "date_published": "2025-07-06T15:45:22.000Z",
            "content_html": "<p>基于之前的架构设计，进一步提供完整的可落地方案：</p>\n<h4 id=\"一、服务注册中心增强实现（Consul-PHP）\"><a href=\"#一、服务注册中心增强实现（Consul-PHP）\" class=\"headerlink\" title=\"一、服务注册中心增强实现（Consul + PHP）\"></a>一、服务注册中心增强实现（Consul + PHP）</h4><ol>\n<li>健康检查与自动注销</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 服务注册时增加健康检查端点</span><br><span class=\"line\">$consul-&gt;get(AgentInterface::class)-&gt;registerService([</span><br><span class=\"line\">    &#x27;ID&#x27; =&gt; &#x27;payment-service-&#x27;.uniqid(),</span><br><span class=\"line\">    &#x27;Name&#x27; =&gt; &#x27;payment-service&#x27;,</span><br><span class=\"line\">    &#x27;Tags&#x27; =&gt; [&#x27;primary&#x27;, &#x27;v2&#x27;],</span><br><span class=\"line\">    &#x27;Address&#x27; =&gt; get_current_ip(),</span><br><span class=\"line\">    &#x27;Port&#x27; =&gt; 8000,</span><br><span class=\"line\">    &#x27;Check&#x27; =&gt; [</span><br><span class=\"line\">        &#x27;HTTP&#x27; =&gt; &#x27;http://&#x27;.get_current_ip().&#x27;:8000/health&#x27;,</span><br><span class=\"line\">        &#x27;Interval&#x27; =&gt; &#x27;5s&#x27;,</span><br><span class=\"line\">        &#x27;Timeout&#x27; =&gt; &#x27;2s&#x27;,</span><br><span class=\"line\">        &#x27;DeregisterCriticalServiceAfter&#x27; =&gt; &#x27;30s&#x27;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">]);</span><br><span class=\"line\"></span><br><span class=\"line\">// PHP健康检查端点实现</span><br><span class=\"line\">$app-&gt;get(&#x27;/health&#x27;, function() &#123;</span><br><span class=\"line\">    return json_encode([</span><br><span class=\"line\">        &#x27;status&#x27; =&gt; &#x27;UP&#x27;,</span><br><span class=\"line\">        &#x27;db_connected&#x27; =&gt; DB::connection()-&gt;getPdo() ? true : false,</span><br><span class=\"line\">        &#x27;redis_connected&#x27; =&gt; Redis::ping() ? true : false,</span><br><span class=\"line\">        &#x27;load&#x27; =&gt; sys_getloadavg()[0]</span><br><span class=\"line\">    ]);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<span id=\"more\"></span>\n<ol>\n<li>服务发现负载均衡</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">class ServiceLocator &#123;</span><br><span class=\"line\">    private static $services = [];</span><br><span class=\"line\"></span><br><span class=\"line\">    public static function getInstance($serviceName) &#123;</span><br><span class=\"line\">        if (!isset(self::$services[$serviceName]) || count(self::$services[$serviceName]) == 0) &#123;</span><br><span class=\"line\">            $instances = $consul-&gt;getCatalog()-&gt;service($serviceName)-&gt;json();</span><br><span class=\"line\">            self::$services[$serviceName] = array_map(</span><br><span class=\"line\">                fn($s) =&gt; new Instance($s[&#x27;ServiceAddress&#x27;], $s[&#x27;ServicePort&#x27;]),</span><br><span class=\"line\">                $instances</span><br><span class=\"line\">            );</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        // 使用加权随机算法选择实例</span><br><span class=\"line\">        $totalWeight = array_sum(array_map(fn($i) =&gt; $i-&gt;weight, self::$services[$serviceName]));</span><br><span class=\"line\">        $rand = mt_rand(1, $totalWeight);</span><br><span class=\"line\"></span><br><span class=\"line\">        foreach (self::$services[$serviceName] as $instance) &#123;</span><br><span class=\"line\">            $rand -= $instance-&gt;weight;</span><br><span class=\"line\">            if ($rand &lt;= 0) &#123;</span><br><span class=\"line\">                return $instance;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    // 定时刷新服务列表</span><br><span class=\"line\">    public static function refresh() &#123;</span><br><span class=\"line\">        swoole_timer_tick(30000, function() &#123;</span><br><span class=\"line\">            foreach (array_keys(self::$services) as $name) &#123;</span><br><span class=\"line\">                $instances = $consul-&gt;getCatalog()-&gt;service($name)-&gt;json();</span><br><span class=\"line\">                self::$services[$name] = $instances;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"二、API-网关深度集成（Kong-OpenResty）\"><a href=\"#二、API-网关深度集成（Kong-OpenResty）\" class=\"headerlink\" title=\"二、API 网关深度集成（Kong + OpenResty）\"></a>二、API 网关深度集成（Kong + OpenResty）</h3><ol>\n<li>动态路由配置</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#lua</span><br><span class=\"line\">-- kong/plugins/dynamic-router/handler.lua</span><br><span class=\"line\">local DynamicRouterHandler = &#123;</span><br><span class=\"line\">    PRIORITY = 1000,</span><br><span class=\"line\">    VERSION = &quot;1.0&quot;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">function DynamicRouterHandler:access(conf)</span><br><span class=\"line\">    -- 从Consul获取最新服务实例</span><br><span class=\"line\">    local res, err = kong.request.make(&#123;</span><br><span class=\"line\">        method = &quot;GET&quot;,</span><br><span class=\"line\">        url = &quot;http://consul:8500/v1/catalog/service/&quot; .. kong.request.get_header(&quot;X-Service-Name&quot;)</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">    if not res then</span><br><span class=\"line\">        kong.log.err(&quot;Consul request failed: &quot;, err)</span><br><span class=\"line\">        return kong.response.exit(503)</span><br><span class=\"line\">    end</span><br><span class=\"line\"></span><br><span class=\"line\">    local instances = cjson.decode(res.body)</span><br><span class=\"line\">    if #instances == 0 then</span><br><span class=\"line\">        return kong.response.exit(404, &#123; message = &quot;Service unavailable&quot; &#125;)</span><br><span class=\"line\">    end</span><br><span class=\"line\"></span><br><span class=\"line\">    -- 更新上游目标</span><br><span class=\"line\">    local ok, err = kong.admin_api.post(&quot;/upstreams/service-&quot;..conf.service_name..&quot;/targets&quot;, &#123;</span><br><span class=\"line\">        target = instances[1].ServiceAddress..&quot;:&quot;..instances[1].ServicePort,</span><br><span class=\"line\">        weight = 100</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">end</span><br><span class=\"line\"></span><br><span class=\"line\">return DynamicRouterHandler</span><br></pre></td></tr></table></figure>\n<ol>\n<li>PHP 插件开发示例（JWT 验证）</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// kong/plugins/jwt-validator/validate.php</span><br><span class=\"line\">&lt;?php</span><br><span class=\"line\"></span><br><span class=\"line\">$token = $_SERVER[&#x27;HTTP_AUTHORIZATION&#x27;] ?? &#x27;&#x27;;</span><br><span class=\"line\">if (!preg_match(&#x27;/Bearer\\s+(.*)$/i&#x27;, $token, $matches)) &#123;</span><br><span class=\"line\">    header(&#x27;HTTP/1.1 401 Unauthorized&#x27;);</span><br><span class=\"line\">    exit;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">$jwt = $matches[1];</span><br><span class=\"line\">$userInfo = AuthService::validateJWT($jwt);</span><br><span class=\"line\"></span><br><span class=\"line\">if (!$userInfo) &#123;</span><br><span class=\"line\">    header(&#x27;HTTP/1.1 403 Forbidden&#x27;);</span><br><span class=\"line\">    exit;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">// 将用户信息传递给上游服务</span><br><span class=\"line\">header(&#x27;X-User-Id: &#x27; . $userInfo[&#x27;id&#x27;]);</span><br><span class=\"line\">header(&#x27;X-User-Roles: &#x27; . implode(&#x27;,&#x27;, $userInfo[&#x27;roles&#x27;]));</span><br></pre></td></tr></table></figure>\n<h4 id=\"三、配置中心完整方案（Apollo-PHP）\"><a href=\"#三、配置中心完整方案（Apollo-PHP）\" class=\"headerlink\" title=\"三、配置中心完整方案（Apollo + PHP）\"></a>三、配置中心完整方案（Apollo + PHP）</h4><ol>\n<li>配置监听长轮询</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">class ApolloWatcher &#123;</span><br><span class=\"line\">    private $client;</span><br><span class=\"line\">    private $callbacks = [];</span><br><span class=\"line\"></span><br><span class=\"line\">    public function __construct() &#123;</span><br><span class=\"line\">        $this-&gt;client = new \\ApolloClient\\Client([...]);</span><br><span class=\"line\">        $this-&gt;startWatch();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    public function watch($namespace, callable $callback) &#123;</span><br><span class=\"line\">        $this-&gt;callbacks[$namespace][] = $callback;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    private function startWatch() &#123;</span><br><span class=\"line\">        swoole_timer_tick(1000, function() &#123;</span><br><span class=\"line\">            foreach ($this-&gt;callbacks as $namespace =&gt; $cbs) &#123;</span><br><span class=\"line\">                $notifications = $this-&gt;client-&gt;getNotifications([$namespace]);</span><br><span class=\"line\"></span><br><span class=\"line\">                if ($notifications[$namespace] &gt; $this-&gt;versions[$namespace] ?? 0) &#123;</span><br><span class=\"line\">                    $config = $this-&gt;client-&gt;getConfig($namespace);</span><br><span class=\"line\"></span><br><span class=\"line\">                    foreach ($cbs as $cb) &#123;</span><br><span class=\"line\">                        $cb($config);</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                    $this-&gt;versions[$namespace] = $notifications[$namespace];</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">// 使用示例</span><br><span class=\"line\">$watcher = new ApolloWatcher();</span><br><span class=\"line\">$watcher-&gt;watch(&#x27;application&#x27;, function($config) &#123;</span><br><span class=\"line\">    Redis::set(&#x27;app_config&#x27;, json_encode($config));</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<ol>\n<li>配置加密存储</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">class SecureConfig &#123;</span><br><span class=\"line\">    private $key;</span><br><span class=\"line\"></span><br><span class=\"line\">    public function __construct() &#123;</span><br><span class=\"line\">        $this-&gt;key = file_get_contents(&#x27;/etc/apollo/key.pem&#x27;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    public function get($key) &#123;</span><br><span class=\"line\">        $encrypted = Apollo::get($key);</span><br><span class=\"line\">        return openssl_decrypt(</span><br><span class=\"line\">            base64_decode($encrypted),</span><br><span class=\"line\">            &#x27;aes-256-cbc&#x27;,</span><br><span class=\"line\">            $this-&gt;key,</span><br><span class=\"line\">            0,</span><br><span class=\"line\">            substr($this-&gt;key, 0, 16)</span><br><span class=\"line\">        );</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"四、服务总线可靠消息方案（RabbitMQ）\"><a href=\"#四、服务总线可靠消息方案（RabbitMQ）\" class=\"headerlink\" title=\"四、服务总线可靠消息方案（RabbitMQ）\"></a>四、服务总线可靠消息方案（RabbitMQ）</h4><ol>\n<li>消息事务与确认</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 生产者端</span><br><span class=\"line\">$channel-&gt;tx_select();</span><br><span class=\"line\">try &#123;</span><br><span class=\"line\">    $msg = new AMQPMessage($data, [</span><br><span class=\"line\">        &#x27;delivery_mode&#x27; =&gt; AMQPMessage::DELIVERY_MODE_PERSISTENT,</span><br><span class=\"line\">        &#x27;message_id&#x27; =&gt; uniqid()</span><br><span class=\"line\">    ]);</span><br><span class=\"line\"></span><br><span class=\"line\">    $channel-&gt;basic_publish($msg, &#x27;orders&#x27;);</span><br><span class=\"line\">    DB::table(&#x27;outbox&#x27;)-&gt;insert([&#x27;message_id&#x27; =&gt; $msg-&gt;get(&#x27;message_id&#x27;)]);</span><br><span class=\"line\">    $channel-&gt;tx_commit();</span><br><span class=\"line\">&#125; catch (Exception $e) &#123;</span><br><span class=\"line\">    $channel-&gt;tx_rollback();</span><br><span class=\"line\">    Metrics::counter(&#x27;publish_failed&#x27;)-&gt;inc();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">// 消费者端</span><br><span class=\"line\">$channel-&gt;basic_consume(&#x27;orders&#x27;, &#x27;&#x27;, false, false, false, false,</span><br><span class=\"line\">    function($msg) &#123;</span><br><span class=\"line\">        try &#123;</span><br><span class=\"line\">            processOrder($msg-&gt;body);</span><br><span class=\"line\">            $msg-&gt;ack();</span><br><span class=\"line\"></span><br><span class=\"line\">            // 幂等处理</span><br><span class=\"line\">            if (!DB::table(&#x27;processed_messages&#x27;)-&gt;where(&#x27;msg_id&#x27;, $msg-&gt;get(&#x27;message_id&#x27;))-&gt;exists()) &#123;</span><br><span class=\"line\">                DB::table(&#x27;processed_messages&#x27;)-&gt;insert([</span><br><span class=\"line\">                    &#x27;msg_id&#x27; =&gt; $msg-&gt;get(&#x27;message_id&#x27;),</span><br><span class=\"line\">                    &#x27;processed_at&#x27; =&gt; now()</span><br><span class=\"line\">                ]);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; catch (Exception $e) &#123;</span><br><span class=\"line\">            $msg-&gt;nack(true); // 重新入队</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n<ol>\n<li>死信队列配置</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 声明死信交换器</span><br><span class=\"line\">$channel-&gt;exchange_declare(&#x27;dlx&#x27;, &#x27;direct&#x27;, false, true, false);</span><br><span class=\"line\">$channel-&gt;queue_declare(&#x27;dlq&#x27;, false, true, false, false);</span><br><span class=\"line\">$channel-&gt;queue_bind(&#x27;dlq&#x27;, &#x27;dlx&#x27;, &#x27;dead&#x27;);</span><br><span class=\"line\"></span><br><span class=\"line\">// 主队列配置</span><br><span class=\"line\">$channel-&gt;queue_declare(&#x27;orders&#x27;, false, true, false, false, false, [</span><br><span class=\"line\">    &#x27;x-dead-letter-exchange&#x27; =&gt; &#x27;dlx&#x27;,</span><br><span class=\"line\">    &#x27;x-dead-letter-routing-key&#x27; =&gt; &#x27;dead&#x27;,</span><br><span class=\"line\">    &#x27;x-message-ttl&#x27; =&gt; 600000 // 10分钟后进入DLQ</span><br><span class=\"line\">]);</span><br></pre></td></tr></table></figure>\n<h4 id=\"五、服务降级完整策略\"><a href=\"#五、服务降级完整策略\" class=\"headerlink\" title=\"五、服务降级完整策略\"></a>五、服务降级完整策略</h4><ol>\n<li><p>多级降级方案</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">class OrderService &#123;</span><br><span class=\"line\">    const DEGRADE_LEVELS = [</span><br><span class=\"line\">        &#x27;full&#x27; =&gt; 0,    // 正常服务</span><br><span class=\"line\">        &#x27;readonly&#x27; =&gt; 1, // 只读模式</span><br><span class=\"line\">        &#x27;cache&#x27; =&gt; 2,    // 返回缓存数据</span><br><span class=\"line\">        &#x27;static&#x27; =&gt; 3    // 返回静态页面</span><br><span class=\"line\">    ];</span><br><span class=\"line\"></span><br><span class=\"line\">    public function getOrder($id) &#123;</span><br><span class=\"line\">        $level = CircuitBreaker::getStatus(&#x27;order-service&#x27;);</span><br><span class=\"line\"></span><br><span class=\"line\">        switch ($level) &#123;</span><br><span class=\"line\">            case self::DEGRADE_LEVELS[&#x27;full&#x27;]:</span><br><span class=\"line\">                return DB::table(&#x27;orders&#x27;)-&gt;find($id);</span><br><span class=\"line\"></span><br><span class=\"line\">            case self::DEGRADE_LEVELS[&#x27;readonly&#x27;]:</span><br><span class=\"line\">                if (request()-&gt;isMethod(&#x27;GET&#x27;)) &#123;</span><br><span class=\"line\">                    return DB::table(&#x27;orders&#x27;)-&gt;find($id);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                throw new DegradeException(&#x27;只读模式&#x27;);</span><br><span class=\"line\"></span><br><span class=\"line\">            case self::DEGRADE_LEVELS[&#x27;cache&#x27;]:</span><br><span class=\"line\">                return Cache::remember(&quot;order:$id&quot;, 60, function() use ($id) &#123;</span><br><span class=\"line\">                    return DB::table(&#x27;orders&#x27;)-&gt;find($id) ?? [];</span><br><span class=\"line\">                &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">            case self::DEGRADE_LEVELS[&#x27;static&#x27;]:</span><br><span class=\"line\">                return [</span><br><span class=\"line\">                    &#x27;id&#x27; =&gt; $id,</span><br><span class=\"line\">                    &#x27;status&#x27; =&gt; &#x27;degraded&#x27;,</span><br><span class=\"line\">                    &#x27;message&#x27; =&gt; &#x27;系统繁忙，请稍后查看订单状态&#x27;</span><br><span class=\"line\">                ];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>自动降级规则配置</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># degradation-rules.yaml</span><br><span class=\"line\">services:</span><br><span class=\"line\">  order-service:</span><br><span class=\"line\">    failure_threshold: 50%  # 失败率阈值</span><br><span class=\"line\">    slow_call_threshold: 2000ms  # 慢调用阈值</span><br><span class=\"line\">    minimum_calls: 20  # 最小调用量</span><br><span class=\"line\">    sliding_window: 60s  # 统计窗口</span><br><span class=\"line\">    wait_duration: 300s  # 半开状态等待时间</span><br><span class=\"line\"></span><br><span class=\"line\">    fallbacks:</span><br><span class=\"line\">      - condition: &quot;error instanceof TimeoutException&quot;</span><br><span class=\"line\">        action: &quot;return cachedData()&quot;</span><br><span class=\"line\">      - condition: &quot;error instanceof DBException&quot;</span><br><span class=\"line\">        action: &quot;switchToReadonlyMode()&quot;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h4 id=\"六、部署架构优化方案\"><a href=\"#六、部署架构优化方案\" class=\"headerlink\" title=\"六、部署架构优化方案\"></a>六、部署架构优化方案</h4><ol>\n<li><p>Kubernetes 部署模板</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># deployment.yaml</span><br><span class=\"line\">apiVersion: apps/v1</span><br><span class=\"line\">kind: Deployment</span><br><span class=\"line\">metadata:</span><br><span class=\"line\">  name: order-service</span><br><span class=\"line\">spec:</span><br><span class=\"line\">  replicas: 3</span><br><span class=\"line\">  strategy:</span><br><span class=\"line\">    rollingUpdate:</span><br><span class=\"line\">      maxSurge: 1</span><br><span class=\"line\">      maxUnavailable: 0</span><br><span class=\"line\">  template:</span><br><span class=\"line\">    spec:</span><br><span class=\"line\">      containers:</span><br><span class=\"line\">      - name: php</span><br><span class=\"line\">        image: my-registry/order-service:v1.2</span><br><span class=\"line\">        ports:</span><br><span class=\"line\">        - containerPort: 8000</span><br><span class=\"line\">        livenessProbe:</span><br><span class=\"line\">          httpGet:</span><br><span class=\"line\">            path: /health</span><br><span class=\"line\">            port: 8000</span><br><span class=\"line\">          initialDelaySeconds: 30</span><br><span class=\"line\">          periodSeconds: 10</span><br><span class=\"line\">        readinessProbe:</span><br><span class=\"line\">          httpGet:</span><br><span class=\"line\">            path: /ready</span><br><span class=\"line\">            port: 8000</span><br><span class=\"line\">          initialDelaySeconds: 5</span><br><span class=\"line\">          periodSeconds: 5</span><br><span class=\"line\">        envFrom:</span><br><span class=\"line\">        - configMapRef:</span><br><span class=\"line\">            name: apollo-config</span><br><span class=\"line\">---</span><br><span class=\"line\"># service.yaml</span><br><span class=\"line\">apiVersion: v1</span><br><span class=\"line\">kind: Service</span><br><span class=\"line\">metadata:</span><br><span class=\"line\">  name: order-service</span><br><span class=\"line\">  annotations:</span><br><span class=\"line\">    consul.hashicorp.com/service-name: order-service</span><br><span class=\"line\">spec:</span><br><span class=\"line\">  ports:</span><br><span class=\"line\">  - port: 8000</span><br><span class=\"line\">    targetPort: 8000</span><br><span class=\"line\">  selector:</span><br><span class=\"line\">    app: order-service</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>监控告警配置</p>\n</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># prometheus-rules.yml</span><br><span class=\"line\">groups:</span><br><span class=\"line\">- name: php-services</span><br><span class=\"line\">  rules:</span><br><span class=\"line\">  - alert: HighErrorRate</span><br><span class=\"line\">    expr: sum(rate(http_requests_total&#123;status=~&quot;5..&quot;&#125;[1m])) by (service) / sum(rate(http_requests_total[1m])) by (service) &gt; 0.05</span><br><span class=\"line\">    for: 5m</span><br><span class=\"line\">    labels:</span><br><span class=\"line\">      severity: critical</span><br><span class=\"line\">    annotations:</span><br><span class=\"line\">      summary: &quot;High error rate on &#123;&#123; $labels.service &#125;&#125;&quot;</span><br><span class=\"line\">      description: &quot;Error rate is &#123;&#123; $value &#125;&#125;&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">  - alert: ServiceDown</span><br><span class=\"line\">    expr: up&#123;job=&quot;php-services&quot;&#125; == 0</span><br><span class=\"line\">    for: 1m</span><br><span class=\"line\">    labels:</span><br><span class=\"line\">      severity: critical</span><br><span class=\"line\">    annotations:</span><br><span class=\"line\">      summary: &quot;&#123;&#123; $labels.instance &#125;&#125; is down&quot;</span><br></pre></td></tr></table></figure>\n<p>七、开发环境工具链</p>\n<ol>\n<li>本地调试方案：</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 使用docker-compose启动依赖服务</span><br><span class=\"line\">docker-compose -f dev-env.yml up consul rabbitmq apollo</span><br><span class=\"line\"></span><br><span class=\"line\"># 使用Xdebug远程调试</span><br><span class=\"line\">PHP_IDE_CONFIG=&quot;serverName=my-service&quot; php -dxdebug.mode=debug \\</span><br><span class=\"line\">-dxdebug.client_host=host.docker.internal \\</span><br><span class=\"line\">-dxdebug.client_port=9003 \\</span><br><span class=\"line\">-dxdebug.start_with_request=yes \\</span><br><span class=\"line\">artisan serve</span><br></pre></td></tr></table></figure>\n<ol>\n<li>API 文档生成：</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/**</span><br><span class=\"line\"> * @OA\\Post(</span><br><span class=\"line\"> *     path=&quot;/orders&quot;,</span><br><span class=\"line\"> *     tags=&#123;&quot;Orders&quot;&#125;,</span><br><span class=\"line\"> *     @OA\\RequestBody(</span><br><span class=\"line\"> *         @OA\\JsonContent(ref=&quot;#/components/schemas/OrderRequest&quot;)</span><br><span class=\"line\"> *     ),</span><br><span class=\"line\"> *     @OA\\Response(</span><br><span class=\"line\"> *         response=201,</span><br><span class=\"line\"> *         description=&quot;Order created&quot;,</span><br><span class=\"line\"> *         @OA\\JsonContent(ref=&quot;#/components/schemas/Order&quot;)</span><br><span class=\"line\"> *     ),</span><br><span class=\"line\"> *     @OA\\Response(</span><br><span class=\"line\"> *         response=503,</span><br><span class=\"line\"> *         description=&quot;Service degraded&quot;,</span><br><span class=\"line\"> *         @OA\\JsonContent(ref=&quot;#/components/schemas/Error&quot;)</span><br><span class=\"line\"> *     )</span><br><span class=\"line\"> * )</span><br><span class=\"line\"> */</span><br><span class=\"line\">public function createOrder(Request $request) &#123;</span><br><span class=\"line\">    // ...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ol>\n<li>性能测试工具：</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 使用wrk进行压力测试</span><br><span class=\"line\">wrk -t4 -c100 -d60s --latency http://localhost:8000/api/orders</span><br><span class=\"line\"></span><br><span class=\"line\"># 生成火焰图</span><br><span class=\"line\">php -dxdebug.profiler_enable=1 -dxdebug.profiler_output_dir=/tmp \\</span><br><span class=\"line\">-dxdebug.profiler_output_name=cachegrind.out.%p artisan serve</span><br></pre></td></tr></table></figure>\n<p>关键优化点总结</p>\n<ol>\n<li>服务发现：采用 Consul 集群+健康检查+客户端缓存，实现秒级服务状态更新</li>\n</ol>\n<ul>\n<li><p>消息可靠：通过事务消息+死信队列+幂等处理保障消息不丢失</p>\n</li>\n<li><p>配置管理：Apollo 长轮询+加密存储+版本回溯实现安全配置中心</p>\n</li>\n<li><p>降级策略：多级降级（全功能 → 只读 → 缓存 → 静态）保障核心链路</p>\n</li>\n<li><p>可观测性：Prometheus 指标+Jaeger 追踪+ELK 日志三位一体监控</p>\n</li>\n</ul>\n",
            "tags": [
                "php架构",
                "php项目",
                "php架构设计"
            ]
        }
    ]
}