{
    "version": "https://jsonfeed.org/version/1",
    "title": "艾瑞可erik • All posts by \"工具\" tag • All posts by \"undefined\" categories",
    "description": "一只PHP开发的程序猿，偶尔做做运维、Goland、Python、Java、摄影、画画、写作、顺便睡觉，反正整站都搞过。",
    "home_page_url": "https://erik.xyz",
    "items": [
        {
            "id": "https://erik.xyz/2025/02/13/open-source-esktop-sharing-tool/",
            "url": "https://erik.xyz/2025/02/13/open-source-esktop-sharing-tool/",
            "title": "开源桌面共享工具",
            "date_published": "2025-02-13T13:35:00.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><h2 id=\"1-xrdp\"><a href=\"#1-xrdp\" class=\"headerlink\" title=\"1. xrdp\"></a>1. <a href=\"https://github.com/neutrinolabs/xrdp\">xrdp</a></h2><ul>\n<li><strong>功能</strong>：xrdp 是一个开源的远程桌面协议 (RDP) 服务器，允许 Linux 系统通过 Windows 的 RDP 客户端远程访问。它与 Microsoft RDP 协议兼容，能够让你从 Windows 客户端连接到 Linux 系统。</li>\n<li><strong>安装</strong>：通常可以通过 Linux 的包管理器安装，例如在 Ubuntu 上使用命令：<span id=\"more\"></span>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt install xrdp</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"2-VNC-Virtual-Network-Computing\"><a href=\"#2-VNC-Virtual-Network-Computing\" class=\"headerlink\" title=\"2. VNC (Virtual Network Computing)\"></a>2. VNC (Virtual Network Computing)</h2><ul>\n<li><strong>功能</strong>：VNC 是一种图形桌面共享系统，支持跨平台远程访问。常见的开源 VNC 实现有：<ul>\n<li><strong>TightVNC</strong>：轻量级且性能优化。</li>\n<li><strong>TigerVNC</strong>：增强了性能和安全性。</li>\n<li><strong>RealVNC</strong>：提供商业和开源版本。</li>\n</ul>\n</li>\n<li><strong>安装</strong>：可以通过包管理器（如 <code>apt</code>）安装，或通过下载其源代码来安装。</li>\n</ul>\n<h2 id=\"3-NoMachine\"><a href=\"#3-NoMachine\" class=\"headerlink\" title=\"3. NoMachine\"></a>3. <a href=\"https://www.nomachine.com/\">NoMachine</a></h2><ul>\n<li><strong>功能</strong>：NoMachine 是一款开源远程桌面解决方案，支持跨平台远程访问。它具有高性能和较低延迟，支持音视频流和文件传输等功能。</li>\n<li><strong>安装</strong>：可以直接从官网下载安装包，也可以通过官方的开源版本进行安装。</li>\n</ul>\n<h2 id=\"4-Remmina\"><a href=\"#4-Remmina\" class=\"headerlink\" title=\"4. Remmina\"></a>4. <a href=\"https://github.com/FreeRDP/Remmina\">Remmina</a></h2><ul>\n<li><strong>功能</strong>：Remmina 是一个支持多种远程桌面协议的客户端，支持 RDP、VNC、SSH 等多种协议。它的设计非常适合 Linux 用户，但也支持其他操作系统。</li>\n<li><strong>安装</strong>：大多数 Linux 发行版都可以通过包管理器安装，例如：<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">sudo</span> apt install remmina</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"5-FreeRDP\"><a href=\"#5-FreeRDP\" class=\"headerlink\" title=\"5. FreeRDP\"></a>5. <a href=\"https://github.com/FreeRDP/FreeRDP\">FreeRDP</a></h2><ul>\n<li><strong>功能</strong>：FreeRDP 是一个开源的远程桌面协议实现，可以用作 RDP 客户端和服务器。它支持 Windows 和 Linux 系统之间的远程访问，并且非常轻量级。</li>\n<li><strong>安装</strong>：可以通过包管理器进行安装，例如：<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">sudo</span> apt install freerdp2-x11</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"6-WayVNC\"><a href=\"#6-WayVNC\" class=\"headerlink\" title=\"6. WayVNC\"></a>6. WayVNC</h2><ul>\n<li><strong>功能</strong>：WayVNC 是专门为 Wayland 兼容的 Linux 系统设计的 VNC 服务器，适用于那些使用 Wayland 显示服务器的系统。</li>\n<li><strong>安装</strong>：可以通过源码编译安装，或查找相关的 Linux 包。</li>\n</ul>\n<h2 id=\"7-Guacamole\"><a href=\"#7-Guacamole\" class=\"headerlink\" title=\"7. Guacamole\"></a>7. <a href=\"http://guacamole.apache.org/\">Guacamole</a></h2><ul>\n<li><strong>功能</strong>：Guacamole 是一个基于 Web 的远程桌面客户端，支持 RDP、VNC 和 SSH。你可以通过浏览器访问并远程控制计算机，安装较为复杂，通常需要配置 Web 服务器。</li>\n<li><strong>安装</strong>：需要在服务器端安装 Guacamole，并配置相应的 Web 服务器。它支持各种操作系统。</li>\n</ul>\n",
            "tags": [
                "工具",
                "开源工具",
                "桌面共享工具"
            ]
        },
        {
            "id": "https://erik.xyz/2021/08/22/10-logs-tools-total/",
            "url": "https://erik.xyz/2021/08/22/10-logs-tools-total/",
            "title": "10个Web日志安全性分析工具",
            "date_published": "2021-08-22T13:30:00.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p>首先，我们应该清楚的是，日志文件不仅可以帮助我们追踪入侵者的来源并找到其攻击路径，而且在正常的操作和维护中，日志还可以反映出许多安全攻击。<br>一个简单易用的Web日志分析工具可以大大提高效率。当前，行业中有许多日志分析工具。今天，我们推荐十种易于使用的Web日志安全性分析工具。</p>\n<span id=\"more\"></span>\n<p>1.360星图</p>\n<p>一个非常易于使用的网站访问日志分析工具，可以有效地识别Web漏洞攻击，CC攻击，恶意爬网程序扫描，异常访问和其他行为。一键式自动分析，输出安全性分析报告，支持iis / apache / nginx日志，支持自定义格式。</p>\n<p>2.LogForensics</p>\n<p>TSRC提供的日志分析工具可以从单个可疑线索开始，并遍历所有可疑URL（CGI）和源IP。</p>\n<p>3.GoAccess</p>\n<p>可视化Web日志分析工具，可通过* nix系统下的Web浏览器或终端程序进行访问。它可以为系统管理员提供快速而有价值的HTTP统计信息，并以在线可视化服务器的形式显示它们。</p>\n<p>4.AWStats</p>\n<p>强大的开源日志分析系统，可以图形方式生成高级Web，流媒体，ftp或邮件服务器统计信息。</p>\n<p>5.Logstalgia</p>\n<p>一个非常酷的可视化日志分析工具，可以直观地显示CC攻击和网站的日志分析，并以可视化的3D效果显示它。</p>\n<p>6.FinderWeb</p>\n<p>程序员用于监视日志的工具，支持tail，less，grep，并支持大文本文件。从几个M到几十个G的日志文件都是平滑且免费的。</p>\n<p>7.web-log-parser</p>\n<p>使用python语言开发的开源Web日志分析工具，具有灵活的日志格式配置。</p>\n<p>8.ELK</p>\n<p>用于开源实时日志分析的ELK平台包含三个开源项目，即ElasticSearch，Logstash和Kiabana，在企业级日志管理平台中非常常见。</p>\n<p>9.Splunk</p>\n<p>顶级日志分析软件，如果您经常使用grep，awk，sed，sort，uniq，tail，head来分析日志，则可以轻松过渡到Splunk。</p>\n<p>10.IBM QRadar</p>\n<p>Qradar具有免费的社区版本，其功能与商业版本没有太大区别，适用于小型日志和流量分析。</p>\n<p>文章转载：乌云安全</p>\n",
            "tags": [
                "日志",
                "工具"
            ]
        },
        {
            "id": "https://erik.xyz/2021/07/15/linux-tools-system/",
            "url": "https://erik.xyz/2021/07/15/linux-tools-system/",
            "title": "Linux 运维必备的13款实用工具",
            "date_published": "2021-07-15T13:15:00.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p>1、查看进程占用带宽情况-Nethogs</p>\n<p>Nethogs 是一个终端下的网络流量监控工具可以直观的显示每个进程占用的带宽。<br>下载：<a href=\"http://sourceforge.net/projects/nethogs/files/nethogs/0.8/nethogs-0.8.0.tar.gz/download\">http://sourceforge.net/projects/nethogs/files/nethogs/0.8/nethogs-0.8.0.tar.gz/download</a></p>\n<pre><code>yum -y install libpcap-devel ncurses-devel\ntar zxvf nethogs-0.8.0.tar.gz\ncd nethogs\nmake &amp;&amp; make install\nnethogs eth0\n</code></pre><span id=\"more\"></span>\n<p>2、硬盘读取性能测试-IOZone</p>\n<p>IOZone是一款Linux文件系统性能测试工具 可以测试不同的操作系统中文件系统的读写性能。<br>下载：<a href=\"http://www.iozone.org/src/current/\">http://www.iozone.org/src/current/</a></p>\n<pre><code>tar xvf iozone3_420.tar\ncd iozone3_420/src/current/\nmake linux\n./iozone -a -n 512m -g 16g -i 0 -i 1 -i 5 -f /mnt/iozone -Rb ./iozone.xls\n</code></pre><ul>\n<li>a使用全自动模式</li>\n<li>n为自动模式设置最小文件大小(Kbytes)。</li>\n<li>g设置自动模式可使用的最大文件大小Kbytes。</li>\n<li>i用来指定运行哪个测试。</li>\n<li>f指定测试文件的名字完成后自动删除</li>\n<li>R产生Excel到标准输出</li>\n<li>b指定输出到指定文件上</li>\n</ul>\n<p>3、实时监控磁盘IO-IOTop</p>\n<p>IOTop命令是专门显示硬盘IO的命令,界面风格类似top命令。</p>\n<pre><code>    yum -y install iotop\n</code></pre><p>4、网络流量监控-IPtraf</p>\n<p>IPtraf是一个运行在Linux下的简单的网络状况分析工具。</p>\n<pre><code>yum -y install iptraf\n</code></pre><p>5、网络流量监控-IFTop</p>\n<p>iftop是类似于linux下面top的实时流量监控工具。比iptraf直观些。<br>下载：<a href=\"http://www.ex-parrot.com/~pdw/iftop/\">http://www.ex-parrot.com/~pdw/iftop/</a></p>\n<pre><code>tar zxvf iftop-0.17.tar.gz\ncd iftop-0.17\n./configure\nmake &amp;&amp; make install\n\niftop \niftop -i eth0 \n</code></pre><h1 id=\"指定监控网卡接口\"><a href=\"#指定监控网卡接口\" class=\"headerlink\" title=\"指定监控网卡接口\"></a>指定监控网卡接口</h1><ul>\n<li>TX：发送流量</li>\n<li>RX：接收流量</li>\n<li>TOTAL：总流量</li>\n<li>Cumm：运行iftop到目前时间的总流量</li>\n<li>peak：流量峰值</li>\n<li>rates：分别表示过去 2s 10s 40s 的平均流量</li>\n</ul>\n<p>6、进程实时监控-HTop</p>\n<p>HTop是一个 Linux 下的交互式的进程浏览器可以用来替换Linux下的top命令。<br>rpm -ivh <a href=\"http://pkgs.repoforge.org/rpmforge-release/rpmforge-release-0.5.2-2.el6.rf.x86_64.rpm（安装第三方YUM源）\">http://pkgs.repoforge.org/rpmforge-release/rpmforge-release-0.5.2-2.el6.rf.x86_64.rpm（安装第三方YUM源）</a></p>\n<pre><code>yum -y install htop\n</code></pre><p>7、系统资源监控-NMON</p>\n<p>NMON是一种在AIX与各种Linux操作系统上广泛使用的监控与分析工具<br>下载：<a href=\"http://sourceforge.jp/projects/sfnet_nmon/releases/\">http://sourceforge.jp/projects/sfnet_nmon/releases/</a></p>\n<pre><code>chmod +x nmon_x86_64_rhel6\nmv nmon_x86_64_rhel6 /usr/sbin/nmon\nnmon\n</code></pre><p>8、监控多个日志-MultiTail</p>\n<p>MultiTail是在控制台打开多个窗口用来实现同时监控多个日志文档、类似tail命令的功能的软件。<br>rpm -ivh <a href=\"http://pkgs.repoforge.org/rpmforge-release/rpmforge-release-0.5.2-2.el6.rf.x86_64.rpm\">http://pkgs.repoforge.org/rpmforge-release/rpmforge-release-0.5.2-2.el6.rf.x86_64.rpm</a> （安装第三方YUM源）</p>\n<pre><code>  yum -y install multitail\n  multitail -e &quot;fail&quot; /var/log/secure #筛选关键字进行监控\n  multitail -l &quot;ping baidu.com&quot; #监控后面的命令-l将要执行的命令\n  multitail -i /var/log/messages -i /var/log/secure #-i指定一个文件名\n</code></pre><p>9、SSH暴力破解防护-Fail2ban</p>\n<p>Fail2ban可以监视你的系统日志然后匹配日志的错误信息正则式匹配执行相应的屏蔽动作一般情况下是调用防火墙屏蔽<br>下载：<a href=\"http://www.fail2ban.org/wiki/index.php/Downloads\">http://www.fail2ban.org/wiki/index.php/Downloads</a></p>\n<pre><code>cd fail2ban-0.8.11\npython setup.py install\ncd files/\ncp ./redhat-initd /etc/init.d/fail2ban\nservice fail2ban start\nchkconfig --add fail2ban\nchkconfig fail2ban on\n</code></pre><p>注：需要配置iptables实用，如果重启iptables了也要重启fail2ban，因为fail2ban的原理是调用iptables实时阻挡外界的攻击。</p>\n<pre><code>grep -v &quot;^#&quot; /etc/fail2ban/jail.conf | grep -v &quot;^$&quot; [DEFAULT]\nignoreip = 127.0.0.1/8#忽略本机IP\nbantime = 600   #符合规则后封锁时间\nfindtime = 600  #在多长时间内符合规则执行封锁如600秒达到3次则执行\nmaxretry = 3    #最大尝试次数\nbackend = auto #日志修改检测日志gamin、polling和auto这三种\nusedns = warn [ssh-iptables]\nenabled = true#默认是禁用\nfalse filter = sshd action = iptables[name=SSH, port=ssh, protocol=tcp] # sendmail-whois[name=SSH,dest=收件人邮箱, sender=发件人邮箱, sendername=&quot;Fail2Ban&quot;] logpath = /var/log/sshd.log #响应的错误日志一般在/var/log/secure maxretry = 5 #尝试错误次数覆盖全局中的maxretry\n</code></pre><p>注：默认所有的应用防护都是关闭的，需要我们手动开启。fail2ban.conf文件是日志信息，jail.conf文件是保护的具体服务和动作配置信息。</p>\n<pre><code>touch /var/log/sshd.log\nservice fail2ban restart\nfail2ban-client status #查看监控已经开启 Status |- Number of jail: 1 `- Jail list: ssh-iptables\niptables -L #iptables过滤表有fail2ban一条规则 fail2ban-SSH tcp -- anywhere anywhere tcp dpt:ssh\n</code></pre><p>10、连接会话终端持续化-Tmux</p>\n<p>Tmux是一个优秀的终端复用软件类似GNU Screen比Screen更加方面、灵活和高效。为了确保连接SSH时掉线不影响任务运行。<br>rpm -ivh <a href=\"http://pkgs.repoforge.org/rpmforge-release/rpmforge-release-0.5.2-2.el6.rf.x86_64.rpm（安装第三方YUM源）\">http://pkgs.repoforge.org/rpmforge-release/rpmforge-release-0.5.2-2.el6.rf.x86_64.rpm（安装第三方YUM源）</a></p>\n<p>11、页面显示磁盘空间使用情况-Agedu</p>\n<p>下载：<a href=\"http://www.chiark.greenend.org.uk/~sgtatham/agedu/\">http://www.chiark.greenend.org.uk/~sgtatham/agedu/</a></p>\n<pre><code>tar zxvf agedu-r9723.tar.gz\ncd agedu-r9723\n./configure\nmake &amp;&amp; make install\nagedu -s / #-s扫描\nagedu -w --address 192.168.0.10:80 #-w输入一个网页链接\nagedu -w --address 192.168.0.108080 --auth none #--auth关闭认证如果不加端口号会生成一个随机的用浏览器访问\n</code></pre><p>12、安全扫描工具-NMap</p>\n<p>NMap是Linux下的网络连接扫描和嗅探工具包用来扫描网上电脑开放的网络连接端。<br>下载：<a href=\"http://nmap.org/download.html\">http://nmap.org/download.html</a></p>\n<pre><code>tar jxvf nmap-6.40.tar.bz2\n./configure\nmake &amp;&amp; make install\nnmap 192.168.0.10 #获取基本信息\nnmap -O 192.168.0.10 #获取系统版本信息\nnmap -A 192.168.0.10 #获取系统综合信息\nnmap 192.168.0.0/24 #获取一个网段工作设备基本信息\n</code></pre><ul>\n<li><p>-sSTCP扫描</p>\n</li>\n<li><p>-sV系统版本检测</p>\n</li>\n</ul>\n<p>13、Web压力测试-Httperf</p>\n<p>Httperf比ab更强大，能测试出web服务能承载的最大服务量及发现潜在问题；比如：内存使用、稳定性。最大优势：可以指定规律进行压力测试，模拟真实环境。<br>下载：<a href=\"http://code.google.com/p/httperf/downloads/list\">http://code.google.com/p/httperf/downloads/list</a></p>\n<pre><code>tar zxvf httperf-0.9.0.tar.gz\ncd httperf-0.9.0\n./configure\nmake &amp;&amp; make install\nhttperf --hog --server=192.168.0.202 --uri=/index.html --num-conns=10000 --wsess=10,10,0.1\n</code></pre><p>参数说明：    </p>\n<ul>\n<li><p>—hog：让httperf尽可能多产生连接，httperf会根据硬件配置，有规律的产生访问连接；</p>\n</li>\n<li><p>—num-conns：连接数量，总发起10000请求；</p>\n</li>\n<li><p>—wsess： 用户打开网页时间规律模拟，第一个10表示产生10个会话连接，第二个10表示每个会话连接进行10次请求，0.1表示每个会话连接请求之间的间隔时间/s。</p>\n</li>\n</ul>\n<p>转载自：<a href=\"https://mp.weixin.qq.com/s/g7BksCQuTbwUorspGR7mcQ\">https://mp.weixin.qq.com/s/g7BksCQuTbwUorspGR7mcQ</a></p>\n",
            "tags": [
                "工具"
            ]
        },
        {
            "id": "https://erik.xyz/2019/10/20/jenks-install/",
            "url": "https://erik.xyz/2019/10/20/jenks-install/",
            "title": "Jenkins安装及使用",
            "date_published": "2019-10-20T13:54:00.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p>作者：回首笑人间，高级Java工程师一枚，热爱研究开源技术，架构师社区合伙人！<br>目录</p>\n<p>什么是持续集成<br>Jenkins简介<br>Jenkins安装与启动<br>Jenkins插件安装<br>全局工具配置<br>自动安装<br>本地安装<br>代码上传至Git服务器<br>任务的创建与执行<br>Go项目<br>JAVA项目<br>什么是持续集成<span id=\"more\"></span><br>持续集成 Continuous integration ，简称CI</p>\n<p>随着软件开发复杂度的不断提高，团队开发成员间如何更好地协同工作以确保软件开发的质量已经慢慢成为开发过程中不可回避的问题。尤其是近些年来，敏捷（Agile） 在软件工程领域越来越红火，如何能在不断变化的需求中快速适应和保证软件的质量也显得尤其的重要。</p>\n<p>持续集成正是针对这一类问题的一种软件开发实践。它倡导团队开发成员必须经常集成他们的工作，甚至每天都可能发生多次集成。而每次的集成都是通过自动化的构建来验证，包括自动编译、发布和测试，从而尽快地发现集成错误，让团队能够更快的开发内聚的软件。</p>\n<p>持续集成具有的特点：</p>\n<p>它是一个自动化的周期性的集成测试过程，从检出代码、编译构建、运行测试、结果记录、测试统计等都是自动完成的，无需人工干预；<br>需要有专门的集成服务器来执行集成构建；<br>需要有代码托管工具支持，例如Git以及可视化界面Gogs的使用<br>持续集成的作用：</p>\n<p>保证团队开发人员提交代码的质量，减轻了软件发布时的压力；<br>持续集成中的任何一个环节都是自动完成的，无需太多的人工干预，有利于减少重复过程以节省时间、费用和工作量；<br>Jenkins简介<br>Jenkins，原名Hudson，2011年改为现在的名字，它 是一个开源的实现持续集成的软件工具。官方网站：<a href=\"http://jenkins-ci.org/。\">http://jenkins-ci.org/。</a></p>\n<p>Jenkins 能实施监控集成中存在的错误，提供详细的日志文件和提醒功能，还能用图表的形式形象地展示项目构建的趋势和稳定性。</p>\n<p>特点：</p>\n<p>易安装：仅仅两个docker命令即可从官网下载直接运行，无需额外的安装，更无需安装数据库；<br>易配置：提供友好的GUI配置界面；<br>变更支持：Jenkins能从代码仓库（Subversion/CVS）中获取并产生代码更新列表并输出到编译输出信息中；<br>支持永久链接：用户是通过web来访问Jenkins的，而这些web页面的链接地址都是永久链接地址，因此，你可以在各种文档中直接使用该链接；<br>集成E-Mail/RSS/IM：当完成一次集成时，可通过这些工具实时告诉你集成结果（据我所知，构建一次集成需要花费一定时间，有了这个功能，你就可以在等待结果过程中，干别的事情）；<br>JUnit/TestNG测试报告：也就是用以图表等形式提供详细的测试报表功能；<br>支持分布式构建：Jenkins可以把集成构建等工作分发到多台计算机中完成；<br>文件指纹信息：Jenkins会保存哪次集成构建产生了哪些jars文件，哪一次集成构建使用了哪个版本的jars文件等构建记录；<br>支持第三方插件：使得 Jenkins 变得越来越强大<br>Jenkins安装与启动<br>（1）执行安装命令,下载jenkins</p>\n<p>docker pull jenkins/jenkins<br>（2）启动服务</p>\n<p>docker run -p 8080:8080 -p 50000:50000 -v /mnt/data/jenkins:/var/jenkins_home —name “jenkins” jenkins/jenkins</p>\n<p>若报错如下:</p>\n<p>touch: cannot touch ‘/var/jenkins_home/copy_reference_file.log’: Permission denied<br>Can not write to /var/jenkins_home/copy_reference_file.log. Wrong volume permissions?<br>需要修改下目录权限, 因为当映射本地数据卷时，/mnt/data/jenkins目录的拥有者为root用户，而容器中jenkins user的uid为1000</p>\n<p>sudo chown -R 1000:1000 /mnt/data/jenkins<br>（3）访问链接 <a href=\"http://10.20.29.151:8080\">http://10.20.29.151:8080</a></p>\n<p>若密码忘记，可进入容器，执行cat /var/lib/jenkins/secrets/initialAdminPassword获取初始密码串。<br>若目录不存在，可使用find / -name “initialAdminPassword” -depth -print命令查找。</p>\n<p>（4）安装插件</p>\n<p>（5）新建用户</p>\n<p>完成安装进入主界面</p>\n<p>Jenkins插件安装<br>我们以安装maven插件为例，演示插件的安装</p>\n<p>（1）点击左侧的“系统管理”菜单 ,然后点击</p>\n<p>（2）选择“可选插件”选项卡，搜索maven，在列表中选择Maven Integration ，点击“直接安装”按钮</p>\n<p>看到如下图时，表示已经完成</p>\n<p>注:如果你的项目是GitHub、GitLib或是Go语言等项目，那么我想你都需要这么一个对应的插件来帮你干活。<br>全局工具配置<br>选择系统管理，全局工具配置</p>\n<p>自动安装</p>\n<p>Jenkins提供了两种工具配置的方式，我们还是以maven为例</p>\n<p>第一种如上图，只需要选择自动安装和版本号就可以，同时Jenkins在右上角给出了一个解疑按键，可以通过该键看到说明和示例。</p>\n<p>本地安装</p>\n<p>相较于第一种方式，第二种方式相对麻烦一些，但好处是可以在以后打包的时候不必重新下载，缩短打包的时间。</p>\n<p>下面就来教大家如何安装Maven与本地仓库：</p>\n<p>（1）将Maven压缩包上传至服务器（虚拟机）</p>\n<p>（2）解压</p>\n<p>tar zxvf apache-maven-3.5.4-bin.tar.gz<br>（3）移动目录</p>\n<p>mv apache-maven-3.5.4 /usr/local/maven<br>（4）编辑setting.xml配置文件vi /usr/local/maven/conf/settings.xml，配置本地仓库目录,内容如下</p>\n<p><localRepository>/usr/local/repository</localRepository><br>（5）将开发环境的本地仓库上传至服务器（虚拟机）并移动到/usr/local/repository 。</p>\n<p>mv reponsitory_boot /usr/local/repository<br>其他示例:</p>\n<p>（1）JDK配置</p>\n<p>设置javahome为 /usr/java/jdk1.8.0_171-amd64</p>\n<p>（2）Git配置 （本地已经安装了Git软件）</p>\n<p>（3）Maven配置</p>\n<p>代码上传至Git服务器<br>步骤：</p>\n<p>（1）在本地安装git(Windows版本)</p>\n<p>（2）在IDEA中选择菜单 : File — settings , 在窗口中选择Version Control — Git</p>\n<p>（3）选择菜单VCS —&gt; Enable Version Control Integration…</p>\n<p>选择Git</p>\n<p>（4）设置远程地址: 右键点击工程选择菜单 Git —&gt; Repository —&gt;Remotes…</p>\n<p>（5）右键点击工程选择菜单 Git —&gt; Add</p>\n<p>（6）右键点击工程选择菜单 Git —&gt; Commit Directory…</p>\n<p>（7）右键点击工程选择菜单 Git —&gt; Repository —&gt; Push …</p>\n<p>任务的创建与执行<br>我们以最火的Java项目和Go项目为例，给大家分别演示如何构建项目和执行</p>\n<p>Go项目</p>\n<p>（1）回到首页，点击新建按钮 .如下图，输入名称，选择创建一个自由风格的项目，点击OK</p>\n<p>（2）General管理，可以添加项目描述和GitHub项目路径，以及一些配置</p>\n<p>（3）源码管理，选择GitHub</p>\n<p>（4）构建触发器，配置触发规则，这里以定时和轮询为示例，配别设置为</p>\n<p>定时构建：定时构建1次任务</p>\n<p>轮询SCM:定时查看源码管理的代码是否更新，有更新则构建，否则不会构建</p>\n<p>如图所示，定时构建为每间隔10分钟定时构建一次，轮询SCM为每5分钟轮询检测一次。</p>\n<p>时间*号规则为: 分 时 日 月 周<br>（5）构建环境，配置控制台输出时间戳和指定Go语言版本</p>\n<p>（6）构建，使用Shell脚本测试代码上传后的项目是否有效</p>\n<p>Shell如下:</p>\n<p>export GOPATH=$WORKSPACE/../                    # 指定GOPATH路径，Go语言执行必须有GOPATH路径<br>export GOWORK=$GOPATH/src/github.com/Jenkins    # 创建项目执行时的目录依赖结构<br>cp -rf $WORKSPACE/* $GOWORK/                    # 使测试运行数据和源数据隔离<br>cd $GOWORK &amp;&amp; go build                          # 进入项目目录并执行<br>命令解说：</p>\n<p>$GOPATH Go 运行需要指定 GOPATH 也即项目运行路径<br>$WORKSPACE /var/jenkins_home/workspace/Jenkins<br>GOWORK 创建符合代码依赖的执行目录<br>注:下载Go的插件在构建时，会自动为我们设置GOROOT,但不会指定GOPATH，因此需要指定<br>最后点击“保存”按钮</p>\n<p>（7）执行构建，控制台查看输出</p>\n<p>构建成功，也输出了WORKSPACE、GOPATH、GOROOT目录，说明配置生效。进入docker容器或是挂载目录查看是否有可执行文件：</p>\n<p>除了上述方法，也可以通过shell配置docker等方式构建、部署、运行项目，还可以将项目配置到当前/其他服务器运行，更多配置方式就不一一陈述了，请自行挖掘。</p>\n<p>JAVA项目</p>\n<p>（1）回到首页，点击新建按钮 .如下图，输入名称，选择创建一个Maven项目，点击OK</p>\n<p>（2）源码管理，选择Git</p>\n<p>（3）Build</p>\n<p>命令:</p>\n<p>clean package docker:build -DpushImage<br>用于清除、打包，构建docker镜像</p>\n<p>最后点击“保存”按钮</p>\n<p>（4）执行任务</p>\n<p>后续请参照Go项目的执行步骤。<br>原创地址：<a href=\"https://mp.weixin.qq.com/s/PEupc5YIKuctZO1Tivy_ug\">https://mp.weixin.qq.com/s/PEupc5YIKuctZO1Tivy_ug</a></p>\n",
            "tags": [
                "工具",
                "jenkins"
            ]
        },
        {
            "id": "https://erik.xyz/2019/10/01/jetbrains-code-plugin/",
            "url": "https://erik.xyz/2019/10/01/jetbrains-code-plugin/",
            "title": "jetbrains全系列，激活使用",
            "date_published": "2019-09-30T16:23:00.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p>通用破解永久版本，安装插件即可，支持2019.2版本的大部分ide</p>\n<p>pycharm2019.2  phpstorm2019.2 intelli2019.2 gloand2019.2 clion2019.2 webstorm2019.2</p>\n<p>注意，不要用于商业用途，个人使用练习即可。</p>\n<p>下载平破解插件jetbrainsCrack.jar放到已安装的ide工具目录下的bin目录<span id=\"more\"></span></p>\n<p>链接: <a href=\"https://pan.baidu.com/s/16KTQF7pOJUhEGnA9EYQbQA\">https://pan.baidu.com/s/16KTQF7pOJUhEGnA9EYQbQA</a>  密码: 3h5e</p>\n<p>在bin目录中编辑<em>.vmoptions和</em>64.vmoptions文件，引入插件<br>-javaagent:插件地址</p>\n<p>例如我的linux系统格式如下：<br>-javaagent:/opt/phpstorm/bin/jetbrainsCrack.jar</p>\n<p>如果之前有填过激活码就需要删除激活码，还有hosts的地址也删除。<br>linux系统需要直接删除当前用户目录下的已生成ide缓存文件</p>\n<p>启动ide工具后填入下面激活码即可。</p>\n<p>激活一</p>\n<div style=\"overflow:scroll\">\n\n     KNBB2QUUR1-eyJsaWNlbnNlSWQiOiJLTkJCMlFVVVIxIiwibGljZW5zZWVOYW1lIjoiZ2hib2tlIiwiYXNzaWduZWVOYW1lIjoiIiwiYXNzaWduZWVFbWFpbCI6IiIsImxpY2Vuc2VSZXN0cmljdGlvbiI6IiIsImNoZWNrQ29uY3VycmVudFVzZSI6ZmFsc2UsInByb2R1Y3RzIjpbeyJjb2RlIjoiSUkiLCJmYWxsYmFja0RhdGUiOiIyMDg5LTA3LTA3IiwicGFpZFVwVG8iOiIyMDg5LTA3LTA3In0seyJjb2RlIjoiQUMiLCJmYWxsYmFja0RhdGUiOiIyMDg5LTA3LTA3IiwicGFpZFVwVG8iOiIyMDg5LTA3LTA3In0seyJjb2RlIjoiRFBOIiwiZmFsbGJhY2tEYXRlIjoiMjA4OS0wNy0wNyIsInBhaWRVcFRvIjoiMjA4OS0wNy0wNyJ9LHsiY29kZSI6IlBTIiwiZmFsbGJhY2tEYXRlIjoiMjA4OS0wNy0wNyIsInBhaWRVcFRvIjoiMjA4OS0wNy0wNyJ9LHsiY29kZSI6IkdPIiwiZmFsbGJhY2tEYXRlIjoiMjA4OS0wNy0wNyIsInBhaWRVcFRvIjoiMjA4OS0wNy0wNyJ9LHsiY29kZSI6IkRNIiwiZmFsbGJhY2tEYXRlIjoiMjA4OS0wNy0wNyIsInBhaWRVcFRvIjoiMjA4OS0wNy0wNyJ9LHsiY29kZSI6IkNMIiwiZmFsbGJhY2tEYXRlIjoiMjA4OS0wNy0wNyIsInBhaWRVcFRvIjoiMjA4OS0wNy0wNyJ9LHsiY29kZSI6IlJTMCIsImZhbGxiYWNrRGF0ZSI6IjIwODktMDctMDciLCJwYWlkVXBUbyI6IjIwODktMDctMDcifSx7ImNvZGUiOiJSQyIsImZhbGxiYWNrRGF0ZSI6IjIwODktMDctMDciLCJwYWlkVXBUbyI6IjIwODktMDctMDcifSx7ImNvZGUiOiJSRCIsImZhbGxiYWNrRGF0ZSI6IjIwODktMDctMDciLCJwYWlkVXBUbyI6IjIwODktMDctMDcifSx7ImNvZGUiOiJQQyIsImZhbGxiYWNrRGF0ZSI6IjIwODktMDctMDciLCJwYWlkVXBUbyI6IjIwODktMDctMDcifSx7ImNvZGUiOiJSTSIsImZhbGxiYWNrRGF0ZSI6IjIwODktMDctMDciLCJwYWlkVXBUbyI6IjIwODktMDctMDcifSx7ImNvZGUiOiJXUyIsImZhbGxiYWNrRGF0ZSI6IjIwODktMDctMDciLCJwYWlkVXBUbyI6IjIwODktMDctMDcifSx7ImNvZGUiOiJEQiIsImZhbGxiYWNrRGF0ZSI6IjIwODktMDctMDciLCJwYWlkVXBUbyI6IjIwODktMDctMDcifSx7ImNvZGUiOiJEQyIsImZhbGxiYWNrRGF0ZSI6IjIwODktMDctMDciLCJwYWlkVXBUbyI6IjIwODktMDctMDcifSx7ImNvZGUiOiJSU1UiLCJmYWxsYmFja0RhdGUiOiIyMDg5LTA3LTA3IiwicGFpZFVwVG8iOiIyMDg5LTA3LTA3In1dLCJoYXNoIjoiMTI3OTY4NzcvMCIsImdyYWNlUGVyaW9kRGF5cyI6NywiYXV0b1Byb2xvbmdhdGVkIjpmYWxzZSwiaXNBdXRvUHJvbG9uZ2F0ZWQiOmZhbHNlfQ==-1iV7BA/baNqv0Q5yUnAphUmh66QhkDRX+qPL09ICuEicBqiPOBxmVLLCVUpkxhrNyfmOtat2LcHwcX/NHkYXdoW+6aS0S388xe1PV2oodiPBhFlEaOac42UQLgP4EidfGQSvKwC9tR1zL5b2CJPQKZ7iiHh/iKBQxP6OBMUP1T7j3Fe1rlxfYPc92HRZf6cO+C0+buJP5ERZkyIn5ZrVM4TEnWrRHbpL8SVNq4yqfc+NwoRzRSNC++81VDS3AXv9c91YeZJz6JXO7AokIk54wltr42FLNuKbozvB/HCxV9PA5vIiM+kZY1K0w5ytgxEYKqA87adA7R5xL/crpaMxHQ==-MIIElTCCAn2gAwIBAgIBCTANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBMB4XDTE4MTEwMTEyMjk0NloXDTIwMTEwMjEyMjk0NlowaDELMAkGA1UEBhMCQ1oxDjAMBgNVBAgMBU51c2xlMQ8wDQYDVQQHDAZQcmFndWUxGTAXBgNVBAoMEEpldEJyYWlucyBzLnIuby4xHTAbBgNVBAMMFHByb2QzeS1mcm9tLTIwMTgxMTAxMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA5ndaik1GD0nyTdqkZgURQZGW+RGxCdBITPXIwpjhhaD0SXGa4XSZBEBoiPdY6XV6pOfUJeyfi9dXsY4MmT0D+sKoST3rSw96xaf9FXPvOjn4prMTdj3Ji3CyQrGWeQU2nzYqFrp1QYNLAbaViHRKuJrYHI6GCvqCbJe0LQ8qqUiVMA9wG/PQwScpNmTF9Kp2Iej+Z5OUxF33zzm+vg/nYV31HLF7fJUAplI/1nM+ZG8K+AXWgYKChtknl3sW9PCQa3a3imPL9GVToUNxc0wcuTil8mqveWcSQCHYxsIaUajWLpFzoO2AhK4mfYBSStAqEjoXRTuj17mo8Q6M2SHOcwIDAQABo4GZMIGWMAkGA1UdEwQCMAAwHQYDVR0OBBYEFGEpG9oZGcfLMGNBkY7SgHiMGgTcMEgGA1UdIwRBMD+AFKOetkhnQhI2Qb1t4Lm0oFKLl/GzoRykGjAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBggkA0myxg7KDeeEwEwYDVR0lBAwwCgYIKwYBBQUHAwEwCwYDVR0PBAQDAgWgMA0GCSqGSIb3DQEBCwUAA4ICAQBonMu8oa3vmNAa4RQP8gPGlX3SQaA3WCRUAj6Zrlk8AesKV1YSkh5D2l+yUk6njysgzfr1bIR5xF8eup5xXc4/G7NtVYRSMvrd6rfQcHOyK5UFJLm+8utmyMIDrZOzLQuTsT8NxFpbCVCfV5wNRu4rChrCuArYVGaKbmp9ymkw1PU6+HoO5i2wU3ikTmRv8IRjrlSStyNzXpnPTwt7bja19ousk56r40SmlmC04GdDHErr0ei2UbjUua5kw71Qn9g02tL9fERI2sSRjQrvPbn9INwRWl5+k05mlKekbtbu2ev2woJFZK4WEXAd/GaAdeZZdumv8T2idDFL7cAirJwcrbfpawPeXr52oKTPnXfi0l5+g9Gnt/wfiXCrPElX6ycTR6iL3GC2VR4jTz6YatT4Ntz59/THOT7NJQhr6AyLkhhJCdkzE2cob/KouVp4ivV7Q3Fc6HX7eepHAAF/DpxwgOrg9smX6coXLgfp0b1RU2u/tUNID04rpNxTMueTtrT8WSskqvaJd3RH8r7cnRj6Y2hltkja82HlpDURDxDTRvv+krbwMr26SB/40BjpMUrDRCeKuiBahC0DCoU/4+ze1l94wVUhdkCfL0GpJrMSCDEK+XEurU18Hb7WT+ThXbkdl6VpFdHsRvqAnhR2g4b+Qzgidmuky5NUZVfEaZqV/g==\n</div>\n激活二\n<div style=\"overflow:scroll\">\n\n     3AGXEJXFK9-eyJsaWNlbnNlSWQiOiIzQUdYRUpYRks5IiwibGljZW5zZWVOYW1lIjoiaHR0cHM6Ly96aGlsZS5pbyIsImFzc2lnbmVlTmFtZSI6IiIsImFzc2lnbmVlRW1haWwiOiIiLCJsaWNlbnNlUmVzdHJpY3Rpb24iOiIiLCJjaGVja0NvbmN1cnJlbnRVc2UiOmZhbHNlLCJwcm9kdWN0cyI6W3siY29kZSI6IklJIiwiZmFsbGJhY2tEYXRlIjoiMjA4OS0wNy0wNyIsInBhaWRVcFRvIjoiMjA4OS0wNy0wNyJ9LHsiY29kZSI6IkFDIiwiZmFsbGJhY2tEYXRlIjoiMjA4OS0wNy0wNyIsInBhaWRVcFRvIjoiMjA4OS0wNy0wNyJ9LHsiY29kZSI6IkRQTiIsImZhbGxiYWNrRGF0ZSI6IjIwODktMDctMDciLCJwYWlkVXBUbyI6IjIwODktMDctMDcifSx7ImNvZGUiOiJQUyIsImZhbGxiYWNrRGF0ZSI6IjIwODktMDctMDciLCJwYWlkVXBUbyI6IjIwODktMDctMDcifSx7ImNvZGUiOiJHTyIsImZhbGxiYWNrRGF0ZSI6IjIwODktMDctMDciLCJwYWlkVXBUbyI6IjIwODktMDctMDcifSx7ImNvZGUiOiJETSIsImZhbGxiYWNrRGF0ZSI6IjIwODktMDctMDciLCJwYWlkVXBUbyI6IjIwODktMDctMDcifSx7ImNvZGUiOiJDTCIsImZhbGxiYWNrRGF0ZSI6IjIwODktMDctMDciLCJwYWlkVXBUbyI6IjIwODktMDctMDcifSx7ImNvZGUiOiJSUzAiLCJmYWxsYmFja0RhdGUiOiIyMDg5LTA3LTA3IiwicGFpZFVwVG8iOiIyMDg5LTA3LTA3In0seyJjb2RlIjoiUkMiLCJmYWxsYmFja0RhdGUiOiIyMDg5LTA3LTA3IiwicGFpZFVwVG8iOiIyMDg5LTA3LTA3In0seyJjb2RlIjoiUkQiLCJmYWxsYmFja0RhdGUiOiIyMDg5LTA3LTA3IiwicGFpZFVwVG8iOiIyMDg5LTA3LTA3In0seyJjb2RlIjoiUEMiLCJmYWxsYmFja0RhdGUiOiIyMDg5LTA3LTA3IiwicGFpZFVwVG8iOiIyMDg5LTA3LTA3In0seyJjb2RlIjoiUk0iLCJmYWxsYmFja0RhdGUiOiIyMDg5LTA3LTA3IiwicGFpZFVwVG8iOiIyMDg5LTA3LTA3In0seyJjb2RlIjoiV1MiLCJmYWxsYmFja0RhdGUiOiIyMDg5LTA3LTA3IiwicGFpZFVwVG8iOiIyMDg5LTA3LTA3In0seyJjb2RlIjoiREIiLCJmYWxsYmFja0RhdGUiOiIyMDg5LTA3LTA3IiwicGFpZFVwVG8iOiIyMDg5LTA3LTA3In0seyJjb2RlIjoiREMiLCJmYWxsYmFja0RhdGUiOiIyMDg5LTA3LTA3IiwicGFpZFVwVG8iOiIyMDg5LTA3LTA3In0seyJjb2RlIjoiUlNVIiwiZmFsbGJhY2tEYXRlIjoiMjA4OS0wNy0wNyIsInBhaWRVcFRvIjoiMjA4OS0wNy0wNyJ9XSwiaGFzaCI6IjEyNzk2ODc3LzAiLCJncmFjZVBlcmlvZERheXMiOjcsImF1dG9Qcm9sb25nYXRlZCI6ZmFsc2UsImlzQXV0b1Byb2xvbmdhdGVkIjpmYWxzZX0=-WGTHs6XpDhr+uumvbwQPOdlxWnQwgnGaL4eRnlpGKApEEkJyYvNEuPWBSrQkPmVpim/8Sab6HV04Dw3IzkJT0yTc29sPEXBf69+7y6Jv718FaJu4MWfsAk/ZGtNIUOczUQ0iGKKnSSsfQ/3UoMv0q/yJcfvj+me5Zd/gfaisCCMUaGjB/lWIPpEPzblDtVJbRexB1MALrLCEoDv3ujcPAZ7xWb54DiZwjYhQvQ+CvpNNF2jeTku7lbm5v+BoDsdeRq7YBt9ANLUKPr2DahcaZ4gctpHZXhG96IyKx232jYq9jQrFDbQMtVr3E+GsCekMEWSD//dLT+HuZdc1sAIYrw==-MIIElTCCAn2gAwIBAgIBCTANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBMB4XDTE4MTEwMTEyMjk0NloXDTIwMTEwMjEyMjk0NlowaDELMAkGA1UEBhMCQ1oxDjAMBgNVBAgMBU51c2xlMQ8wDQYDVQQHDAZQcmFndWUxGTAXBgNVBAoMEEpldEJyYWlucyBzLnIuby4xHTAbBgNVBAMMFHByb2QzeS1mcm9tLTIwMTgxMTAxMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA5ndaik1GD0nyTdqkZgURQZGW+RGxCdBITPXIwpjhhaD0SXGa4XSZBEBoiPdY6XV6pOfUJeyfi9dXsY4MmT0D+sKoST3rSw96xaf9FXPvOjn4prMTdj3Ji3CyQrGWeQU2nzYqFrp1QYNLAbaViHRKuJrYHI6GCvqCbJe0LQ8qqUiVMA9wG/PQwScpNmTF9Kp2Iej+Z5OUxF33zzm+vg/nYV31HLF7fJUAplI/1nM+ZG8K+AXWgYKChtknl3sW9PCQa3a3imPL9GVToUNxc0wcuTil8mqveWcSQCHYxsIaUajWLpFzoO2AhK4mfYBSStAqEjoXRTuj17mo8Q6M2SHOcwIDAQABo4GZMIGWMAkGA1UdEwQCMAAwHQYDVR0OBBYEFGEpG9oZGcfLMGNBkY7SgHiMGgTcMEgGA1UdIwRBMD+AFKOetkhnQhI2Qb1t4Lm0oFKLl/GzoRykGjAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBggkA0myxg7KDeeEwEwYDVR0lBAwwCgYIKwYBBQUHAwEwCwYDVR0PBAQDAgWgMA0GCSqGSIb3DQEBCwUAA4ICAQBonMu8oa3vmNAa4RQP8gPGlX3SQaA3WCRUAj6Zrlk8AesKV1YSkh5D2l+yUk6njysgzfr1bIR5xF8eup5xXc4/G7NtVYRSMvrd6rfQcHOyK5UFJLm+8utmyMIDrZOzLQuTsT8NxFpbCVCfV5wNRu4rChrCuArYVGaKbmp9ymkw1PU6+HoO5i2wU3ikTmRv8IRjrlSStyNzXpnPTwt7bja19ousk56r40SmlmC04GdDHErr0ei2UbjUua5kw71Qn9g02tL9fERI2sSRjQrvPbn9INwRWl5+k05mlKekbtbu2ev2woJFZK4WEXAd/GaAdeZZdumv8T2idDFL7cAirJwcrbfpawPeXr52oKTPnXfi0l5+g9Gnt/wfiXCrPElX6ycTR6iL3GC2VR4jTz6YatT4Ntz59/THOT7NJQhr6AyLkhhJCdkzE2cob/KouVp4ivV7Q3Fc6HX7eepHAAF/DpxwgOrg9smX6coXLgfp0b1RU2u/tUNID04rpNxTMueTtrT8WSskqvaJd3RH8r7cnRj6Y2hltkja82HlpDURDxDTRvv+krbwMr26SB/40BjpMUrDRCeKuiBahC0DCoU/4+ze1l94wVUhdkCfL0GpJrMSCDEK+XEurU18Hb7WT+ThXbkdl6VpFdHsRvqAnhR2g4b+Qzgidmuky5NUZVfEaZqV/g==\n</div>\n\n<p>激活三</p>\n<div style=\"overflow:scroll\">\n\n    A82DEE284F-eyJsaWNlbnNlSWQiOiJBODJERUUyODRGIiwibGljZW5zZWVOYW1lIjoiaHR0cHM6Ly96aGlsZS5pbyIsImFzc2lnbmVlTmFtZSI6IiIsImFzc2lnbmVlRW1haWwiOiIiLCJsaWNlbnNlUmVzdHJpY3Rpb24iOiJVbmxpbWl0ZWQgbGljZW5zZSB0aWxsIGVuZCBvZiB0aGUgY2VudHVyeS4iLCJjaGVja0NvbmN1cnJlbnRVc2UiOmZhbHNlLCJwcm9kdWN0cyI6W3siY29kZSI6IklJIiwicGFpZFVwVG8iOiIyMDg5LTA3LTA3In0seyJjb2RlIjoiUlMwIiwicGFpZFVwVG8iOiIyMDg5LTA3LTA3In0seyJjb2RlIjoiV1MiLCJwYWlkVXBUbyI6IjIwODktMDctMDcifSx7ImNvZGUiOiJSRCIsInBhaWRVcFRvIjoiMjA4OS0wNy0wNyJ9LHsiY29kZSI6IlJDIiwicGFpZFVwVG8iOiIyMDg5LTA3LTA3In0seyJjb2RlIjoiREMiLCJwYWlkVXBUbyI6IjIwODktMDctMDcifSx7ImNvZGUiOiJEQiIsInBhaWRVcFRvIjoiMjA4OS0wNy0wNyJ9LHsiY29kZSI6IlJNIiwicGFpZFVwVG8iOiIyMDg5LTA3LTA3In0seyJjb2RlIjoiRE0iLCJwYWlkVXBUbyI6IjIwODktMDctMDcifSx7ImNvZGUiOiJBQyIsInBhaWRVcFRvIjoiMjA4OS0wNy0wNyJ9LHsiY29kZSI6IkRQTiIsInBhaWRVcFRvIjoiMjA4OS0wNy0wNyJ9LHsiY29kZSI6IkdPIiwicGFpZFVwVG8iOiIyMDg5LTA3LTA3In0seyJjb2RlIjoiUFMiLCJwYWlkVXBUbyI6IjIwODktMDctMDcifSx7ImNvZGUiOiJDTCIsInBhaWRVcFRvIjoiMjA4OS0wNy0wNyJ9LHsiY29kZSI6IlBDIiwicGFpZFVwVG8iOiIyMDg5LTA3LTA3In0seyJjb2RlIjoiUlNVIiwicGFpZFVwVG8iOiIyMDg5LTA3LTA3In1dLCJoYXNoIjoiODkwNzA3MC8wIiwiZ3JhY2VQZXJpb2REYXlzIjowLCJhdXRvUHJvbG9uZ2F0ZWQiOmZhbHNlLCJpc0F1dG9Qcm9sb25nYXRlZCI6ZmFsc2V9-5epo90Xs7KIIBb8ckoxnB/AZQ8Ev7rFrNqwFhBAsQYsQyhvqf1FcYdmlecFWJBHSWZU9b41kvsN4bwAHT5PiznOTmfvGv1MuOzMO0VOXZlc+edepemgpt+t3GUHvfGtzWFYeKeyCk+CLA9BqUzHRTgl2uBoIMNqh5izlDmejIwUHLl39QOyzHiTYNehnVN7GW5+QUeimTr/koVUgK8xofu59Tv8rcdiwIXwTo71LcU2z2P+T3R81fwKkt34evy7kRch4NIQUQUno//Pl3V0rInm3B2oFq9YBygPUdBUbdH/KHROyohZRD8SaZJO6kUT0BNvtDPKF4mCT1saWM38jkw==-MIIElTCCAn2gAwIBAgIBCTANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBMB4XDTE4MTEwMTEyMjk0NloXDTIwMTEwMjEyMjk0NlowaDELMAkGA1UEBhMCQ1oxDjAMBgNVBAgMBU51c2xlMQ8wDQYDVQQHDAZQcmFndWUxGTAXBgNVBAoMEEpldEJyYWlucyBzLnIuby4xHTAbBgNVBAMMFHByb2QzeS1mcm9tLTIwMTgxMTAxMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA5ndaik1GD0nyTdqkZgURQZGW+RGxCdBITPXIwpjhhaD0SXGa4XSZBEBoiPdY6XV6pOfUJeyfi9dXsY4MmT0D+sKoST3rSw96xaf9FXPvOjn4prMTdj3Ji3CyQrGWeQU2nzYqFrp1QYNLAbaViHRKuJrYHI6GCvqCbJe0LQ8qqUiVMA9wG/PQwScpNmTF9Kp2Iej+Z5OUxF33zzm+vg/nYV31HLF7fJUAplI/1nM+ZG8K+AXWgYKChtknl3sW9PCQa3a3imPL9GVToUNxc0wcuTil8mqveWcSQCHYxsIaUajWLpFzoO2AhK4mfYBSStAqEjoXRTuj17mo8Q6M2SHOcwIDAQABo4GZMIGWMAkGA1UdEwQCMAAwHQYDVR0OBBYEFGEpG9oZGcfLMGNBkY7SgHiMGgTcMEgGA1UdIwRBMD+AFKOetkhnQhI2Qb1t4Lm0oFKLl/GzoRykGjAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBggkA0myxg7KDeeEwEwYDVR0lBAwwCgYIKwYBBQUHAwEwCwYDVR0PBAQDAgWgMA0GCSqGSIb3DQEBCwUAA4ICAQBonMu8oa3vmNAa4RQP8gPGlX3SQaA3WCRUAj6Zrlk8AesKV1YSkh5D2l+yUk6njysgzfr1bIR5xF8eup5xXc4/G7NtVYRSMvrd6rfQcHOyK5UFJLm+8utmyMIDrZOzLQuTsT8NxFpbCVCfV5wNRu4rChrCuArYVGaKbmp9ymkw1PU6+HoO5i2wU3ikTmRv8IRjrlSStyNzXpnPTwt7bja19ousk56r40SmlmC04GdDHErr0ei2UbjUua5kw71Qn9g02tL9fERI2sSRjQrvPbn9INwRWl5+k05mlKekbtbu2ev2woJFZK4WEXAd/GaAdeZZdumv8T2idDFL7cAirJwcrbfpawPeXr52oKTPnXfi0l5+g9Gnt/wfiXCrPElX6ycTR6iL3GC2VR4jTz6YatT4Ntz59/THOT7NJQhr6AyLkhhJCdkzE2cob/KouVp4ivV7Q3Fc6HX7eepHAAF/DpxwgOrg9smX6coXLgfp0b1RU2u/tUNID04rpNxTMueTtrT8WSskqvaJd3RH8r7cnRj6Y2hltkja82HlpDURDxDTRvv+krbwMr26SB/40BjpMUrDRCeKuiBahC0DCoU/4+ze1l94wVUhdkCfL0GpJrMSCDEK+XEurU18Hb7WT+ThXbkdl6VpFdHsRvqAnhR2g4b+Qzgidmuky5NUZVfEaZqV/g==\n</div>\n\n\n<p>以上方法禁止</p>\n",
            "tags": [
                "工具",
                "jetbtrains",
                "phpstorm"
            ]
        },
        {
            "id": "https://erik.xyz/2018/03/26/6-ge-kai-yuan-de-jia-ting-zi-dong-hua-gong-ju/",
            "url": "https://erik.xyz/2018/03/26/6-ge-kai-yuan-de-jia-ting-zi-dong-hua-gong-ju/",
            "title": "6 个开源的家庭自动化工具 | Linux 中国",
            "date_published": "2018-03-26T11:08:00.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p><img src=\"http://mmbiz.qpic.cn/mmbiz_jpg/W9DqKgFsc68kmQVHxs2R2utqYWLOiaHYDEddFzdT4eicGgUKvt59X7syh7JNtwDmB0V0WUG1aNRbPhlUMBEsDkfg/640?wx_fmt=jpeg&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1\" alt=\"\"></p>\n<p>用这些开源软件解决方案构建一个更智能的家庭。</p>\n<p>— Jason Baker</p>\n<p>有用的原文链接</p>\n<p>请访问文末的“原文链接”获得可点击的文内链接、全尺寸原图和相关文章。</p>\n<p>致谢<br><span id=\"more\"></span></p>\n<p>编译自　|　<a href=\"https://opensource.com/life/17/12/home-automation-tools\">https://opensource.com/life/17/12/home-automation-tools</a> 作者　|　Jason Baker 译者　|　qhwdw ? ? ? ? ? 共计翻译：87 篇 贡献时间：124 天</p>\n<blockquote>\n<p>用这些开源软件解决方案构建一个更智能的家庭。</p>\n</blockquote>\n<p>物联网[1] 不仅是一个时髦词，在现实中，自 2016 年我们发布了一篇关于家庭自动化工具的评论文章以来，它也在迅速占领着我们的生活。在 2017，26.5% 的美国家庭[2] 已经使用了一些智能家居技术；预计五年内，这一数字还将翻倍。 随着这些数量持续增加的各种设备的使用，可以帮助你实现对家庭的自动化管理、安保、和监视，在家庭自动化方面，从来没有像现在这样容易和更加吸引人过。不论你是要远程控制你的 HVAC 系统，集成一个家庭影院，保护你的家免受盗窃、火灾、或是其它威胁，还是节省能源或只是控制几盏灯，现在都有无数的设备可以帮到你。 但同时，还有许多用户担心安装在他们家庭中的新设备带来的安全和隐私问题 —— 这是一个很现实也很 严肃的问题[3]。他们想要去控制有谁可以接触到这个重要的系统，这个系统管理着他们的应用程序，记录了他们生活中的点点滴滴。这种想法是可以理解的：毕竟在一个连你的冰箱都是智能设备的今天，你不想要一个基本的保证吗？甚至是如果你授权了设备可以与外界通讯，它是否是仅被授权的人访问它呢？ 对安全的担心[4] 是为什么开源对我们将来使用的互联设备至关重要的众多理由之一。由于源代码运行在他们自己的设备上，完全可以去搞明白控制你的家庭的程序，也就是说你可以查看它的代码，如果必要的话甚至可以去修改它。 虽然联网设备通常都包含它们专有的组件，但是将开源引入家庭自动化的第一步是确保你的设备和这些设备可以共同工作 —— 它们为你提供一个接口 —— 并且是开源的。幸运的是，现在有许多解决方案可供选择，从 PC 到树莓派，你可以在它们上做任何事情。 这里有几个我比较喜欢的。</p>\n<p>Calaos</p>\n<p>Calaos[5] 是一个设计为全栈的家庭自动化平台，包含一个服务器应用程序、触摸屏界面、Web 应用程序、支持 iOS 和 Android 的原生移动应用、以及一个运行在底层的预配置好的 Linux 操作系统。Calaos 项目出自一个法国公司，因此它的支持论坛以法语为主，不过大量的介绍资料和文档都已经翻译为英语了。 Calaos 使用的是 GPL[6] v3 的许可证，你可以在 GitHub 上查看它的源代码。</p>\n<p>Domoticz</p>\n<p>Domoticz[8] 是一个有大量设备库支持的家庭自动化系统，在它的项目网站上有大量的文档，从气象站到远程控制的烟雾探测器，以及大量的第三方 集成软件[9] 。它使用一个 HTML5 前端，可以从桌面浏览器或者大多数现代的智能手机上访问它，它是一个轻量级的应用，可以运行在像树莓派这样的低功耗设备上。 Domoticz 是用 C++ 写的，使用 GPLv3[10] 许可证。它的 源代码[11] 在 GitHub 上。</p>\n<p>Home Assistant</p>\n<p>Home Assistant[12] 是一个开源的家庭自动化平台，它可以轻松部署在任何能运行 Python 3 的机器上，从树莓派到网络存储（NAS），甚至可以使用 Docker 容器轻松地部署到其它系统上。它集成了大量的开源和商业的产品，允许你去连接它们，比如，IFTTT、天气信息、或者你的 Amazon Echo 设备，去控制从锁到灯的各种硬件。 Home Assistant 以 MIT 许可证[13] 发布，它的源代码可以从 GitHub[14] 上下载。</p>\n<p>MisterHouse</p>\n<p>从 2016 年起，MisterHouse[15] 取得了很多的进展，我们把它作为一个“可以考虑的另外选择”列在这个清单上。它使用 Perl 脚本去监视任何东西，它可以通过一台计算机来查询或者控制任何可以远程控制的东西。它可以响应语音命令，查询当前时间、天气、位置、以及其它事件，比如去打开灯、唤醒你、记下你喜欢的电视节目、通报呼入的来电、开门报警、记录你儿子上了多长时间的网、如果你女儿汽车超速它也可以告诉你等等。它可以运行在 Linux、macOS、以及 Windows 计算机上，它可以读/写很多的设备，包括安全系统、气象站、来电显示、路由器、机动车位置系统等等。 MisterHouse 使用 GPLv2[16] 许可证，你可以在 GitHub[17] 上查看它的源代码。</p>\n<p>OpenHAB</p>\n<p>OpenHAB[18]（开放家庭自动化总线的简称）是在开源爱好者中所熟知的家庭自动化工具，它拥有大量用户的社区以及支持和集成了大量的设备。它是用 Java 写的，OpenHAB 非常轻便，可以跨大多数主流操作系统使用，它甚至在树莓派上也运行的很好。支持成百上千的设备，OpenHAB 被设计为与设备无关的，这使开发者在系统中添加他们的设备或者插件很容易。OpenHAB 也支持通过 iOS 和 Android 应用来控制设备以及设计工具，因此，你可以为你的家庭系统创建你自己的 UI。 你可以在 GitHub 上找到 OpenHAB 的 源代码[19]，它使用 Eclipse 公共许可证[20]。</p>\n<p>OpenMotics</p>\n<p>OpenMotics[21] 是一个开源的硬件和软件家庭自动化系统。它的设计目标是为控制设备提供一个综合的系统，而不是从不同的供应商处将各种设备拼接在一起。不像其它的系统主要是为了方便改装而设计的，OpenMotics 专注于硬件解决方案。更多资料请查阅来自 OpenMotics 的后端开发者 Frederick Ryckbosch的 完整文章[22] 。 OpenMotics 使用 GPLv2[16] 许可证，它的源代码可以从 GitHub 上下载。 当然了，我们的选择不仅有这些。许多家庭自动化爱好者使用不同的解决方案，甚至是他们自己动手做。其它用户选择使用单独的智能家庭设备而无需集成它们到一个单一的综合系统中。 如果上面的解决方案并不能满足你的需求，下面还有一些潜在的替代者可以去考虑：</p>\n<p>◈ EventGhost[24] 是一个开源的（GPL v2[25]）家庭影院自动化工具，它只能运行在 Microsoft Windows PC 上。它允许用户去控制多媒体电脑和连接的硬件，它通过触发宏指令的插件或者定制的 Python 脚本来使用。</p>\n<p>◈ ioBroker[26] 是一个基于 JavaScript 的物联网平台，它能够控制灯、锁、空调、多媒体、网络摄像头等等。它可以运行在任何可以运行 Node.js 的硬件上，包括 Windows、Linux、以及 macOS，它使用 MIT 许可证[27]。</p>\n<p>◈ Jeedom[28] 是一个由开源软件（GPL v2[25]）构成的家庭自动化平台，它可以控制灯、锁、多媒体等等。它包含一个移动应用程序（Android 和 iOS），并且可以运行在 Linux PC 上；该公司也销售 hub，它为配置家庭自动化提供一个现成的解决方案。</p>\n<p>◈ LinuxMCE[29] 标称它是你的多媒体与电子设备之间的“数字粘合剂”。它运行在 Linux（包括树莓派）上，它基于 Pluto 开源 许可证[30] 发布，它可以用于家庭安全、电话（VoIP 和语音信箱）、A/V 设备、家庭自动化、以及玩视频游戏。</p>\n<p>◈ OpenNetHome[31]，和这一类中的其它解决方案一样，是一个控制灯、报警、应用程序等等的一个开源软件。它基于 Java 和 Apache Maven，可以运行在 Windows、macOS、以及 Linux —— 包括树莓派，它以 GPLv3[32] 许可证发布。</p>\n<p>◈ Smarthomatic[33] 是一个专注于硬件设备和软件的开源家庭自动化框架，而不仅是用户界面。它基于 GPLv3[34] 许可证，它可用于控制灯、电器、以及空调、检测温度、提醒给植物浇水。</p>\n<p>现在该轮到你了：你已经准备好家庭自动化系统了吗？或者正在研究去设计一个。你对家庭自动化的新手有什么建议，你会推荐什么样的系统</p>\n",
            "tags": [
                "工具",
                "转载"
            ]
        },
        {
            "id": "https://erik.xyz/2014/11/27/zui-xin-ban-fan-qiang-liu-lan-qi/",
            "url": "https://erik.xyz/2014/11/27/zui-xin-ban-fan-qiang-liu-lan-qi/",
            "title": "最新版翻墙浏览器",
            "date_published": "2014-11-27T06:58:00.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p>最近一直在弄谷歌收录和解决网站被浏览器屏蔽问题，无奈得用到谷歌站长工具，国内无法登陆，只有翻墙。有了这款浏览器可以做谷歌推广，去国外网站查询资料，登录谷歌邮箱……   翻墙浏览器工具最新版，下载 <a href=\"http://sourceforge.net/projects/erik1314/files/win_all/GAEChrome.zip/download\" title=\"翻墙浏览器工具\">翻墙浏览器工具</a></p>\n",
            "tags": [
                "工具",
                "翻墙",
                "谷歌",
                "谷歌搜索"
            ]
        },
        {
            "id": "https://erik.xyz/2014/11/15/fang-ke-tong-ji-ji-shu-qi/",
            "url": "https://erik.xyz/2014/11/15/fang-ke-tong-ji-ji-shu-qi/",
            "title": "访客统计计数器",
            "date_published": "2014-11-15T05:48:00.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt; &lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt; &lt;head&gt; </span><br><span class=\"line\">&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=UTF-8&quot; /&gt; </span><br><span class=\"line\">&lt;title&gt;访客统计&lt;/title&gt; </span><br><span class=\"line\">&lt;/head&gt; &lt;body&gt; </span><br><span class=\"line\">  &lt;?php </span><br><span class=\"line\">  if (!@$fp=fopen(&quot;count.txt&quot;, &quot;r&quot;))&#123; //以只读的方式打开文件，这步可要可不要根据实际情况来确定。</span><br><span class=\"line\">  \t\techo &quot;count.txt文件创建成功！&lt;br /&gt;&quot;; </span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  @$num=fgets($fp,12);//读取11位数字 </span><br><span class=\"line\">  if ($num==&quot;&quot;)$num=0;//如果文件count.txt内容为空，则初始化为0 $num++; //浏览次数加1 </span><br><span class=\"line\">  @fclose($fp); $fp=fopen(&quot;count.txt&quot;, &quot;w&quot;);//以只读的方式打开文件 </span><br><span class=\"line\">  fwrite($fp, $num); //写入加1后结果 </span><br><span class=\"line\">  fclose($fp); //关闭文件 echo &quot;您是第&quot;.$num.&quot;位浏览者！&quot;; </span><br><span class=\"line\">  ?&gt; </span><br><span class=\"line\">&lt;/body&gt; </span><br><span class=\"line\">&lt;/html&gt;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>",
            "tags": [
                "工具",
                "php",
                "代码"
            ]
        },
        {
            "id": "https://erik.xyz/2014/11/10/zend-studio-11-0-0-11-0-0-10-6-1-po-jie-bu-ding/",
            "url": "https://erik.xyz/2014/11/10/zend-studio-11-0-0-11-0-0-10-6-1-po-jie-bu-ding/",
            "title": "zend studio 11.0.0/11.0.0/10.6.1 补丁",
            "date_published": "2014-11-10T03:41:00.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p>无意间把我的zend studio 10.6.1升级成11.0.2了，又要重新破解。 悲催，只好百度求助，竟然让我找到了，在此分享一下。 补丁地址：<a href=\"http://download.csdn.net/download/w15875510692/8140777\">http://download.csdn.net/download/w15875510692/8140777</a></p>\n",
            "tags": [
                "工具"
            ]
        },
        {
            "id": "https://erik.xyz/2014/11/01/filezilla-an-zhuang-de-wen-ti-glibcxx-3-4-15/",
            "url": "https://erik.xyz/2014/11/01/filezilla-an-zhuang-de-wen-ti-glibcxx-3-4-15/",
            "title": "filezilla安装的问题GLIBCXX_3.4.15",
            "date_published": "2014-11-01T04:35:00.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p>运行filezilla时，出现如下错误的提示信息： ./filezilla: /usr/lib/libstdc++.so.6: version `GLIBCXX_3.4.15’ not found (required by ./filezilla) 如果是64位系统报错信息如下： ./filezilla: /usr/lib64/libstdc++.so.6: version `GLIBCXX_3.4.15’ not found (required by ./filezilla) 原因是没有GLIBCXX_3.4.15版本，或是更高的版本。<br>输入命令查询一下结果：<br>[root@localhost ~]# strings /usr/lib/libstdc++.so.6 | grep GLIBCXX GLIBCXX_3.4 GLIBCXX_3.4.1 GLIBCXX_3.4.2 GLIBCXX_3.4.3 GLIBCXX_3.4.4 GLIBCXX_3.4.5 GLIBCXX_3.4.6 GLIBCXX_3.4.7 GLIBCXX_3.4.8 GLIBCXX_3.4.9 GLIBCXX_3.4.10 GLIBCXX_3.4.11 GLIBCXX_3.4.12 GLIBCXX_3.4.13 GLIBCXX_FORCE_NEW GLIBCXX_DEBUG_MESSAGE_LENGTH 我们看到当前GCC版本中的确没有GLIBCXX_3.4.15。<br><span id=\"more\"></span><br>64位系统命令为： [root@localhost ~]# strings /usr/lib64/libstdc++.so.6 | grep GLIBCXX 下载新版本，地址：<a href=\"http://ftp.de.debian.org/debian/pool/main/g/gcc-4.7/libstdc++6_4.7.2-5_i386.deb\">http://ftp.de.debian.org/debian/pool/main/g/gcc-4.7/libstdc++6_4.7.2-5_i386.deb</a> 或<a href=\"http://download.csdn.net/download/w15875510692/8481469\">http://download.csdn.net/download/w15875510692/8481469</a> 64位系统： <a href=\"http://ftp.de.debian.org/debian/pool/main/g/gcc-4.7/libstdc++6_4.7.2-5_amd64.deb\">http://ftp.de.debian.org/debian/pool/main/g/gcc-4.7/libstdc++6_4.7.2-5_amd64.deb</a> 或<a href=\"http://download.csdn.net/download/w15875510692/8471575\">http://download.csdn.net/download/w15875510692/8471575</a><br>假设下载的文件放在/data0/software/。<br>解压：<br>[root@localhost software]# ar -x libstdc++6_4.7.2-5_i386.deb &amp;&amp; tar xvf data.tar.gz<br>解压后出现/data0/software/usr目录；<br>[root@localhost software]# cd  /data0/software/usr/lib/i380-linux-gun<br>[root@localhost i386-linux-gnu]# cp libstdc++.so.6.0.17 /usr/lib<br>[root@localhost i386-linux-gnu]# /usr/lib<br>[root@localhost lib]# rm libstdc++.so.6<br>[root@localhost lib]# ln libstdc++.so.6.0.17 libstdc++.so.6<br>注意64位系统为<br>[root@localhost software]# cd  /data0/software/usr/lib/x86_64-linux-gnu<br>[root@localhost x86_64-linux-gnu]# cp libstdc++.so.6.0.17 /usr/lib64<br>[root@localhost x86_64-linux-gnu]#cd /usr/lib64<br>[root@localhost lib]# rm libstdc++.so.6<br>[root@localhost lib]# ln libstdc++.so.6.0.17 libstdc++.so.6<br>重新建立软连接，我们再输入命令查询一下结果：<br>[root@localhost lib]# strings /usr/lib/libstdc++.so.6 | grep GLIBCXX GLIBCXX_3.4 GLIBCXX_3.4.1 GLIBCXX_3.4.2 GLIBCXX_3.4.3 GLIBCXX_3.4.4 GLIBCXX_3.4.5 GLIBCXX_3.4.6 GLIBCXX_3.4.7 GLIBCXX_3.4.8 GLIBCXX_3.4.9 GLIBCXX_3.4.10 GLIBCXX_3.4.11 GLIBCXX_3.4.12 GLIBCXX_3.4.13 GLIBCXX_3.4.14 GLIBCXX_3.4.15 GLIBCXX_3.4.16 GLIBCXX_3.4.17 GLIBCXX_DEBUG_MESSAGE_LENGTH 已经安装好GLIBCXX_3.4.15啦。 重新切换到filezilla目录并运行，正常啦！./filezilla: /usr/lib/libstdc++.so.6: version `GLIBCXX_3.4.15’ not found (required by ./filezilla)已经解决。</p>\n",
            "tags": [
                "工具",
                "免费"
            ]
        },
        {
            "id": "https://erik.xyz/2014/10/23/fan-qiang-liu-lan-qi/",
            "url": "https://erik.xyz/2014/10/23/fan-qiang-liu-lan-qi/",
            "title": "翻墙浏览器",
            "date_published": "2014-10-23T08:29:00.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p><a href=\"http://img03.taobaocdn.com/imgextra/i3/809419769/TB2jEpVaVXXXXbSXXXXXXXXXXXX_!!809419769.jpg\"><img src=\"http://img03.taobaocdn.com/imgextra/i3/809419769/TB2jEpVaVXXXXbSXXXXXXXXXXXX_!!809419769.jpg\" alt=\"艾瑞可erik\"></a>最近发现老版本的ChromeGAE不能翻墙了，很郁闷，谷歌站长又不能用了。 无奈百度了一下，找到最新的翻墙软件，感觉还可以吧。在这分享一下。 效果还是不错的 O(∩<em>∩)O哈哈~ [![艾瑞可erik](<a href=\"http://img03.taobaocdn.com/imgextra/i3/809419769/TB2sOtWaVXXXXbmXXXXXXXXXXXX\">http://img03.taobaocdn.com/imgextra/i3/809419769/TB2sOtWaVXXXXbmXXXXXXXXXXXX</a></em>!!809419769.jpg)](<a href=\"http://img03.taobaocdn.com/imgextra/i3/809419769/TB2sOtWaVXXXXbmXXXXXXXXXXXX_!!809419769.jpg\">http://img03.taobaocdn.com/imgextra/i3/809419769/TB2sOtWaVXXXXbmXXXXXXXXXXXX_!!809419769.jpg</a>) 下载地址：<a href=\"http://pan.baidu.com/s/1hqy1KaS\">http://pan.baidu.com/s/1hqy1KaS</a></p>\n",
            "tags": [
                "工具",
                "软件"
            ]
        },
        {
            "id": "https://erik.xyz/2014/10/06/chang-yong-gong-ju/",
            "url": "https://erik.xyz/2014/10/06/chang-yong-gong-ju/",
            "title": "常用工具",
            "date_published": "2014-10-06T10:12:00.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p>memcached 高速缓存工具（linux） wget <a href=\"https://sourceforge.net/projects/erik1314/files/memcache/libevent-1.4.14b-stable.tar.gz\">https://sourceforge.net/projects/erik1314/files/memcache/libevent-1.4.14b-stable.tar.gz</a> wget <a href=\"https://sourceforge.net/projects/erik1314/files/memcache/memcached-1.4.20.tar.gz\">https://sourceforge.net/projects/erik1314/files/memcache/memcached-1.4.20.tar.gz</a> wget <a href=\"https://sourceforge.net/projects/erik1314/files/memcache/memcache-2.2.1.tgz\">https://sourceforge.net/projects/erik1314/files/memcache/memcache-2.2.1.tgz</a> <a href=\"https://sourceforge.net/projects/erik1314/files/memcache/libevent-1.4.14b-stable.tar.gz\">libevent-1.4.14b-stable.tar.gz</a> <a href=\"https://sourceforge.net/projects/erik1314/files/memcache/memcached-1.4.20.tar.gz\">memcached-1.4.20.tar.gz</a> <a href=\"https://sourceforge.net/projects/erik1314/files/memcache/memcache-2.2.1.tgz\">memcache-2.2.1.tgz</a></p>\n",
            "tags": [
                "工具",
                "软件",
                "memcache",
                "memcached"
            ]
        }
    ]
}