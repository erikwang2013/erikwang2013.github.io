{
    "version": "https://jsonfeed.org/version/1",
    "title": "艾瑞可erik • All posts by \"lanmp\" tag • All posts by \"undefined\" categories",
    "description": "一只PHP开发的程序猿，偶尔做做运维、Goland、Python、Java、摄影、画画、写作、顺便睡觉，反正整站都搞过。",
    "home_page_url": "https://erik.xyz",
    "items": [
        {
            "id": "https://erik.xyz/2014/11/10/php-zhong-zi-fu-chuan-zheng-ze-han-shu/",
            "url": "https://erik.xyz/2014/11/10/php-zhong-zi-fu-chuan-zheng-ze-han-shu/",
            "title": "php中字符串、正则函数",
            "date_published": "2014-11-10T10:43:00.000Z",
            "content_html": "<h4 id=\"字符串统计\"><a href=\"#字符串统计\" class=\"headerlink\" title=\"字符串统计\"></a><strong>字符串统计</strong></h4><p>计算字符串长度在php开发中经常遇到，需要使用的函数是strlen() 字符串单词统计函数 str_word_count() (只对ASCII的英文单词起作用)</p>\n<h4 id=\"清除空格\"><a href=\"#清除空格\" class=\"headerlink\" title=\"清除空格\"></a><strong>清除空格</strong></h4><p>php开发在很多情况下要考虑客户使用便捷，比如输入用户名不小心多了一个空格，怎么办。那就用清楚空格函数 ltrim()函数是从左清除字符串头部的空格 rtrim()函数是从右清除字符串头部的空格 trim()函数是两边同时去除头部和尾部的空格 这三个函数大家可以找一下规律，trim是左右清楚，那么，ltrim中l就好比left左边，所以是左边清除。同理，右边也是。<span id=\"more\"></span></p>\n<h4 id=\"字符串切分\"><a href=\"#字符串切分\" class=\"headerlink\" title=\"字符串切分\"></a><strong>字符串切分</strong></h4><p>在php函数中常用到字符串切分，即explode()和strtok()函数。implode()函数是按照一定间隔标准组合成一个字符串。 implode()别名又用作join()功能都是一致的。在其中explode()函数用的较多，大部分是用作，邮箱、网址、文件等分割。strtok()函数与explode()相比能记住分割后的新字符串在原字符串中的位置，以便继续分割。  </p>\n<h4 id=\"字符串截取\"><a href=\"#字符串截取\" class=\"headerlink\" title=\"字符串截取\"></a><strong>字符串截取</strong></h4><p>注：每个中文占2个字符 在php开发中也会遇到截取字符串，那便用到substr()函数。其中目标字符串是某个字符串变量的变量名，起始位置和截取长度都是整数。如果都是正数，起始位置的整数必须小于街区长度的整数，否则函数返回值为假。如果截取长度为负数，则意味着，是从起始位置开始往后，除去从目标字符串结尾算起的长度的字符串以外的所有字符。 格式：substr(目标字符串,起始位置,截取长度)</p>\n<h4 id=\"字符串替换\"><a href=\"#字符串替换\" class=\"headerlink\" title=\"字符串替换\"></a><strong>字符串替换</strong></h4><p>通常在php实际开发中，往往有些部分的字符串相同，为了提高网站运行效率，我们需要替换一下，做个调用。那就是substr_replace()函数。 格式： substr_replace(目标字符串,替换字符串,起始位置,替换长度)</p>\n<h4 id=\"字符串查找\"><a href=\"#字符串查找\" class=\"headerlink\" title=\"字符串查找\"></a><strong>字符串查找</strong></h4><p>php在开发或者加密中会生成一大堆字符串，有时候我们需要定位一个字符串，就需要用到查找函数strstr()。 strstr()函数对字符大小写不敏感。 格式：strstr(目标字符串,需要查找的字符)</p>\n<h3 id=\"正则表达式\"><a href=\"#正则表达式\" class=\"headerlink\" title=\"正则表达式\"></a><strong>正则表达式</strong></h3><h4 id=\"正则替换字符串\"><a href=\"#正则替换字符串\" class=\"headerlink\" title=\"正则替换字符串\"></a>正则替换字符串</h4><p>在编写代码中，网站往往需要交换友情链接，为了方便我们一般都需要做个提取，是链接变得简便、好用。那就要用到php中的函数ereg_replace()和eregi_replace(),前者对大小写敏感，后者对大小写不敏感。 格式 ereg_replace(正则表达规范,欲取代字符串子串,目标字符串) <strong>正则切分字符串</strong> 大多数商城开发中，我们需要用到数组，来整合、输出不同界面的客户信息、产品信息，这就需要我们用数组来实现。在php函数中split()和spliti()函数就可以做到，把不同信息进行切分，重复调用，提高网站运行效率,前者对大小写敏感，后者对大小写不敏感。 格式 split(正则表达式,目标字符串)</p>\n",
            "tags": [
                "php",
                "lanmp",
                "php函数",
                "php字符串"
            ]
        },
        {
            "id": "https://erik.xyz/2014/10/04/lanmp-du-li-er-pei-zhi/",
            "url": "https://erik.xyz/2014/10/04/lanmp-du-li-er-pei-zhi/",
            "title": "lanmp独立而配置",
            "date_published": "2014-10-04T05:02:00.000Z",
            "content_html": "<p>(一)安装yum<br><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@delphi ~\\]# cd /etc/yum.repos.d/</span><br><span class=\"line\">[root@delphi yum.repos.d\\]# ls</span><br><span class=\"line\">CentOS-Base.repo CentOS-Debuginfo.repo CentOS-Media.repo CentOS-Vault.repo</span><br><span class=\"line\">[root@delphi yum.repos.d\\]# vi CentOS-Media.repo </span><br><span class=\"line\"># CentOS-Media.repo</span><br><span class=\"line\">#</span><br><span class=\"line\"># This repo can be used with mounted DVD media, verify the mount point for</span><br><span class=\"line\"># CentOS-6. You can use this repo and yum to install items directly off the</span><br><span class=\"line\"># DVD ISO that we release.</span><br><span class=\"line\">#</span><br><span class=\"line\"># To use this repo, put in your DVD and use it with the other repos too:</span><br><span class=\"line\"># yum --enablerepo=c6-media \\[command\\]</span><br><span class=\"line\">#</span><br><span class=\"line\"># or for ONLY the media repo, do this:</span><br><span class=\"line\">#</span><br><span class=\"line\"># yum --disablerepo=\\\\* --enablerepo=c6-media \\[command\\]</span><br></pre></td></tr></table></figure><br><span id=\"more\"></span><br>[c6-media]<br>name=CentOS-$releasever - Media<br>baseurl=file:///mnt/cdrom/     #指定了三个光盘有可能挂载的路径。<br>file:///media/cdrom/<br>file:///media/cdrecorder/<br>gpgcheck=1<br>enabled=1     #enabled=0 这里的0代表缺省源不存在，1代表启用。<br>gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-6</p>\n<p># wq保存退出。</p>\n<p>  如果你的linux能够上互联网，那么备份Base这个配置文件。</p>\n<p>[root@delphi yum.repos.d]# mv CentOS-Base.repo CentOS-Base.repo.bak</p>\n<pre><code>(二)保证你的电脑里安装了gcc gcc-c++ make,如果没有应该先安装\n</code></pre><p>[root@delphi ~]# yum install gcc -y<br>[root@delphi ~]# yum install gcc-c++ -y</p>\n<pre><code>(三)卸载apache php mysql rpm软件包。我的系统里没有装。方法很多，不一一罗列。 查看服务有没有启动：\n</code></pre><p>[root@delphi ~]# service httpd status<br>httpd: 未被识别的服务<br>[root@delphi ~]# service mysqld status<br>mysqld: 未被识别的服务</p>\n<p>[root@delphi ~]# rpm -qa httpd<br>[root@delphi ~]# rpm -qa mysql<br>[root@delphi ~]# rpm -qa mysqld<br>[root@delphi ~]# rpm -qa | grep php</p>\n<p>  如果你的系统里有这些包，那么rpm -e packagename或者yum remove packagename（解决依赖卸载）。   (四)关闭SElinux 允许iptables相关端口 1.关闭selinux的两种方法。—永久关闭。（需要重启系统）</p>\n<p>[root@delphi ~]# vi /etc/sysconfig/selinux</p>\n<p># This file controls the state of SELinux on the system.<br># SELINUX= can take one of these three values:<br># enforcing - SELinux security policy is enforced.<br># permissive - SELinux prints warnings instead of enforcing.<br># disabled - No SELinux policy is loaded.<br>SELINUX=disabled     # 把SELINUX=enforcing 更改为SELINUX=disabled<br># SELINUXTYPE= can take one of these two values:<br># targeted - Targeted processes are protected,<br># mls - Multi Level Security protection.<br>SELINUXTYPE=targeted</p>\n<p>2.临时关闭（不需要重启系统）</p>\n<p>[root@delphi ~]# setenforce 0</p>\n<p>(五)准备源码部署需要安装的所有源代码包  </p>\n<p> linux命令下载</p>\n<p> wget <a href=\"https://sourceforge.net/projects/erik1314/files/lanmp/autoconf-2.69.tar.gz\">https://sourceforge.net/projects/erik1314/files/lanmp/autoconf-2.69.tar.gz</a></p>\n<p> wget  <a href=\"https://sourceforge.net/projects/erik1314/files/lanmp/freetype-2.4.10.tar.gz\">https://sourceforge.net/projects/erik1314/files/lanmp/freetype-2.4.10.tar.gz</a></p>\n<p> wget  <a href=\"https://sourceforge.net/projects/erik1314/files/lanmp/gd-2.0.35.tar.gz\">https://sourceforge.net/projects/erik1314/files/lanmp/gd-2.0.35.tar.gz</a></p>\n<p> wget  <a href=\"https://sourceforge.net/projects/erik1314/files/lanmp/httpd-2.2.27.tar.gz\">https://sourceforge.net/projects/erik1314/files/lanmp/httpd-2.2.27.tar.gz</a></p>\n<p> wget  <a href=\"https://sourceforge.net/projects/erik1314/files/lanmp/jpegsrc.v8b.tar.gz\">https://sourceforge.net/projects/erik1314/files/lanmp/jpegsrc.v8b.tar.gz</a></p>\n<p> wget  <a href=\"https://sourceforge.net/projects/erik1314/files/lanmp/libmcrypt-2.5.8.tar.gz\">https://sourceforge.net/projects/erik1314/files/lanmp/libmcrypt-2.5.8.tar.gz</a></p>\n<p> wget  <a href=\"https://sourceforge.net/projects/erik1314/files/lanmp/libpng-1.5.14.tar.gz\">https://sourceforge.net/projects/erik1314/files/lanmp/libpng-1.5.14.tar.gz</a></p>\n<p> wget  <a href=\"https://sourceforge.net/projects/erik1314/files/lanmp/libxml2-2.9.0.tar.gz\">https://sourceforge.net/projects/erik1314/files/lanmp/libxml2-2.9.0.tar.gz</a></p>\n<p> wget  <a href=\"https://sourceforge.net/projects/erik1314/files/lanmp/mysql-5.1.42.tar.gz\">https://sourceforge.net/projects/erik1314/files/lanmp/mysql-5.1.42.tar.gz</a></p>\n<p> wget  <a href=\"https://sourceforge.net/projects/erik1314/files/lanmp/ncurses-5.6.tar.gz\">https://sourceforge.net/projects/erik1314/files/lanmp/ncurses-5.6.tar.gz</a></p>\n<p> wget  h<a href=\"https://sourceforge.net/projects/erik1314/files/lanmp/phpMyAdmin-3.5.6-all-languages.tar.gz\">https://sourceforge.net/projects/erik1314/files/lanmp/phpMyAdmin-3.5.6-all-languages.tar.gz</a></p>\n<p> wget  <a href=\"https://sourceforge.net/projects/erik1314/files/lanmp/zlib-1.2.7.tar.gz\">https://sourceforge.net/projects/erik1314/files/lanmp/zlib-1.2.7.tar.gz</a></p>\n<p> wget  <a href=\"https://sourceforge.net/projects/erik1314/files/lanmp/php-5.2.17.tar.gz\">https://sourceforge.net/projects/erik1314/files/lanmp/php-5.2.17.tar.gz</a>     （可根据网站情况选择版本）</p>\n<p>wget  <a href=\"https://sourceforge.net/projects/erik1314/files/lanmp/php-5.3.29.tar.gz\">https://sourceforge.net/projects/erik1314/files/lanmp/php-5.3.29.tar.gz</a></p>\n<p>wget <a href=\"https://sourceforge.net/projects/erik1314/files/lanmp/php-5.4.11.tar.gz\">https://sourceforge.net/projects/erik1314/files/lanmp/php-5.4.11.tar.gz</a></p>\n<p>wget  <a href=\"https://sourceforge.net/projects/erik1314/files/lanmp/php-5.4.33.tar.gz\">https://sourceforge.net/projects/erik1314/files/lanmp/php-5.4.33.tar.gz</a></p>\n<p>wget  <a href=\"https://sourceforge.net/projects/erik1314/files/lanmp/php-5.5.17.tar.gz\">https://sourceforge.net/projects/erik1314/files/lanmp/php-5.5.17.tar.gz</a></p>\n<p>wget  <a href=\"https://sourceforge.net/projects/erik1314/files/lanmp/php-5.6.1.tar.gz\">https://sourceforge.net/projects/erik1314/files/lanmp/php-5.6.1.tar.gz</a></p>\n<p> wget  <a href=\"https://sourceforge.net/projects/erik1314/files/lanmp/ZendOptimizer-3.3.3-linux-glibc23-x86_64.tar.gz\">https://sourceforge.net/projects/erik1314/files/lanmp/ZendOptimizer-3.3.3-linux-glibc23-x86_64.tar.gz</a></p>\n<p>php5.3以上不支持zendoptimizer用ZendGuard替换</p>\n<p>wget  <a href=\"https://sourceforge.net/projects/erik1314/files/lanmp/ZendGuard-5\\_5\\_0.tar.gz\">https://sourceforge.net/projects/erik1314/files/lanmp/ZendGuard-5\\_5\\_0.tar.gz</a></p>\n<p>win系统直接下载，再用ftp上传到服务器 <a href=\"https://sourceforge.net/projects/erik1314/files/lanmp/autoconf-2.69.tar.gz\">autoconf-2.69.tar.gz</a> <a href=\"https://sourceforge.net/projects/erik1314/files/lanmp/freetype-2.4.10.tar.gz\">freetype-2.4.10.tar.gz</a> <a href=\"https://sourceforge.net/projects/erik1314/files/lanmp/gd-2.0.35.tar.gz\">gd-2.0.35.tar.gz</a> <a href=\"https://sourceforge.net/projects/erik1314/files/lanmp/httpd-2.2.27.tar.gz\">httpd-2.2.27.tar.gz</a> <a href=\"https://sourceforge.net/projects/erik1314/files/lanmp/jpegsrc.v8b.tar.gz\">jpegsrc.v8b.tar.gz</a> <a href=\"https://sourceforge.net/projects/erik1314/files/lanmp/libmcrypt-2.5.8.tar.gz\">libmcrypt-2.5.8.tar.gz</a> <a href=\"https://sourceforge.net/projects/erik1314/files/lanmp/libpng-1.5.14.tar.gz\">libpng-1.5.14.tar.gz</a> <a href=\"https://sourceforge.net/projects/erik1314/files/lanmp/libxml2-2.9.0.tar.gz\">libxml2-2.9.0.tar.gz</a> <a href=\"https://sourceforge.net/projects/erik1314/files/lanmp/mysql-5.1.42.tar.gz\">mysql-5.1.42.tar.gz</a> <a href=\"https://sourceforge.net/projects/erik1314/files/lanmp/ncurses-5.6.tar.gz\">ncurses-5.6.tar.gz</a> <a href=\"https://sourceforge.net/projects/erik1314/files/lanmp/phpMyAdmin-3.5.6-all-languages.tar.gz\">phpMyAdmin-3.5.6-all-languages.tar.gz</a> <a href=\"https://sourceforge.net/projects/erik1314/files/lanmp/zlib-1.2.7.tar.gz\">zlib-1.2.7.tar.gz</a> <a href=\"https://sourceforge.net/projects/erik1314/files/lanmp/php-5.2.17.tar.gz\">php-5.2.17.tar.gz</a> <a href=\"https://sourceforge.net/projects/erik1314/files/lanmp/php-5.3.29.tar.gz\">php-5.3.29.tar.gz</a> <a href=\"https://sourceforge.net/projects/erik1314/files/lanmp/php-5.4.11.tar.gz\">php-5.4.11.tar.gz</a> <a href=\"https://sourceforge.net/projects/erik1314/files/lanmp/php-5.4.33.tar.gz\">php-5.4.33.tar.gz</a> <a href=\"https://sourceforge.net/projects/erik1314/files/lanmp/php-5.5.17.tar.gz\">php-5.5.17.tar.gz</a> <a href=\"https://sourceforge.net/projects/erik1314/files/lanmp/php-5.6.1.tar.gz\">php-5.6.1.tar.gz</a> <a href=\"https://sourceforge.net/projects/erik1314/files/lanmp/ZendOptimizer-3.3.3-linux-glibc23-x86_64.tar.gz\">ZendOptimizer-3.3.3-linux-glibc23-x86_64.tar.gz</a> <a href=\"https://sourceforge.net/projects/erik1314/files/lanmp/ZendGuard-5_5_0.tar.gz\">ZendGuard-5_5_0.tar.gz</a> 依次解压文件</p>\n<p>(六)开始搭建lamp环境 安装三步走configure —-make —-make install configure 检测系统配置，检测软件安装所需要的软件。 make 编译二进制文件为可执行文件。 make install 安装软件。 1.编译安装xml2</p>\n<p>[root@delphi lamp]#cd libxml2-2.6.30<br>[root@delphi libxml2-2.6.30]# ./configure —prefix=/usr/local/libxml2/<br>[root@delphi libxml2-2.6.30]# make &amp;&amp; make install</p>\n<p>  2.同样的方法安装libmcrpyt</p>\n<p>[root@delphi lamp]# cd libmcrypt-2.5.8<br>[root@delphi libmcrypt-2.5.8]# ./configure —prefix=/usr/local/libmcrypt/<br>[root@delphi libmcrypt-2.5.8]# make &amp;&amp; make install</p>\n<p>  3.编译安装zlib （zlib是个库文件，这里为了防止后期出错，不用指定路径，如果是64位系统，请参见安装libpng排错的方法安装。）</p>\n<p>[root@delphi lamp]# cd zlib-1.2.3<br>[root@delphi zlib-1.2.3]# ./configure<br>[root@delphi zlib-1.2.3]# make &amp;&amp; make install</p>\n<p>  编译安装libpng如果出现如下错误，是应为你的环境是64位系统，匹配不了zlib库。 /usr/local/lib/libz.a: could not read symbols: Bad value collect2: ld returned 1 exit status make[1]: <strong><em> [libpng12.la] 错误 1 make[1]: Leaving directory `/root/packget/libpng-1.2.31’ make: </em></strong> [all] 错误 2 解决办法：重新新安装 zlib tar -zxvf zlib-1.2.3.tar.gz cd zlib-1.2.3 ./configure vi Makefile 找到 CFLAGS=-O3 -DUSE_MMAP 在后面加入-fPIC，即变成CFLAGS=-O3 -DUSE_MMAP -fPIC 接下面步骤 make make install   4.编译安装libpng</p>\n<p>[root@delphi lamp]# cd libpng-1.2.31<br>[root@delphi libpng-1.2.31]# ./configure -prefix=/usr/local/libpng/<br>[root@delphi libpng-1.2.31]# make &amp;&amp; make install</p>\n<p>  5.安装jpeg6 这源码包的安装相对复杂一点。因为其不会自动创建对应的目录，首先我们自己手动建立目录 /usr/local/jpeg6/ #创建安装目录 /usr/local/jpeg6/bin/ #创建可执行文件目录 /usr/local/jpeg6/lib/ #创建库文件爱你存放目录 /usr/local/jpeg6/include #创建头文件存放目录 /usr/local/jpeg6/man/man1 #创建man手册中的命令帮助，man1指的是命令帮助， man5配置文件的帮助。</p>\n<p>[root@delphi lamp]# cd jpeg-6b/<br>[root@delphi jpeg-6b]# mkdir /usr/local/jpeg6/ &amp;&amp; mkdir /usr/local/jpeg6/bin/ &amp;&amp; mkdir /usr/local/jpeg6/lib/ &amp;&amp; mkdir /usr/local/jpeg6/include<br>[root@delphi jpeg-6b]# mkdir -p /usr/local/jpeg6/man/man1</p>\n<p>[root@delphi jpeg-6b]# ./configure —prefix=/usr/local/jpeg6/ —enable-shared —enable-static<br>[root@delphi jpeg-6b]# make &amp;&amp; make install</p>\n<p>  ************************************************************************* ./libtool —mode=compile gcc -O2 -I. -c ./jcapimin.c make: ./libtool：命令未找到 make: <strong><em> [jcapimin.lo] 错误 127 出现以上错误的解决办法： [root@delphi jpeg-6b]# cp /usr/share/libtool/config/config.sub /root/packget/jpeg-6b/ [root@delphi jpeg-6b]# cp /usr/share/libtool/config/config.guess /root/packget/jpeg-6b/ 然后： [root@delphi jpeg-6b]# make clean 再执行： [root@delphi jpeg-6b]# make [root@delphi jpeg-6b]# make install <strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong>*</strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></em></strong>   6.编译安装freetype</p>\n<p>[root@delphi lamp]# cd freetype-2.3.5<br>[root@delphi freetype-2.3.5]# ./configure —prefix=/usr/local/freetype/<br>[root@delphi freetype-2.3.5]# make &amp;&amp; make install</p>\n<p>  7.编译安装autoconf</p>\n<p>[root@delphi lamp]# cd autoconf-2.61<br>[root@delphi autoconf-2.61]# ./configure<br>[root@delphi autoconf-2.61]# make &amp;&amp; make install</p>\n<p>  8.编译安装gd库：</p>\n<p>[root@delphi lamp]# cd gd-2.0.35<br>[root@delphi gd-2.0.35]# ./configure —prefix=/usr/local/gd2/ —with-jpeg=/usr/local/jpeg6/ —with-freetype=/usr/local/freetype/</p>\n<h1 id=\"备注一下：这里如果你的zlib库是指定路径，那么可以—with-zlib-PATH\"><a href=\"#备注一下：这里如果你的zlib库是指定路径，那么可以—with-zlib-PATH\" class=\"headerlink\" title=\"备注一下：这里如果你的zlib库是指定路径，那么可以—with-zlib=/$PATH\"></a>备注一下：这里如果你的zlib库是指定路径，那么可以—with-zlib=/$PATH</h1><p>[root@delphi gd-2.0.35]# make &amp;&amp; make install</p>\n<p>  9.编译安装apache:</p>\n<p>[root@delphi lamp]# cd httpd-2.2.9<br>[root@delphi httpd-2.2.9]# ./configure —prefix=/usr/local/apache2/ —sysconfdir=/etc/httpd/ —with-included-apr —disable-userdir —enable-so —enable-deflate=shared —enable-expires=shared —enable-rewrite=shared —enable-static-support<br>[root@delphi httpd-2.2.9]# make &amp;&amp; make install</p>\n<p>[root@delphi httpd-2.2.9]# /usr/local/apache2/bin/apachectl start<br>[root@delphi httpd-2.2.9]# pgrep httpd<br>27652<br>27653<br>27654<br>27655<br>27656<br>27657</p>\n<p>如果没有禁止selinux 那么使用如下命令开启模块权限： [root@delphi ~]# chcon -t texrel_shlib_t modulename 通过浏览器访问服务器，如果反回It‘s works ！ 表示安装成功。   10.编译安装mysql之前需要安装编译nourses:</p>\n<p>[root@delphi lamp]# cd ncurses-5.6<br>[root@delphi ncurses-5.6]# ./configure —with-shared —without-debug —without-ada —enable-overwrite<br>[root@delphi ncurses-5.6]# make &amp;&amp; make install</p>\n<p>  11.编译安装mysql： 首先创建mysql用户以及用户组：</p>\n<p>[root@delphi lamp]# cd mysql-5.0.41<br>[root@delphi mysql-5.0.41]# groupadd mysql<br>[root@delphi mysql-5.0.41]# grep mysql /etc/group<br>mysql:x:501:<br>[root@delphi mysql-5.0.41]# useradd -g mysql mysql</p>\n<p>[root@delphi mysql-5.0.41]# ./configure —prefix=/usr/local/mysql —with-extra-charsets=all<br>[root@delphi mysql-5.0.41]# make &amp;&amp; make instal<br>make报错的话就用</p>\n<p>make ZEND_EXTRA_LIBS=’-liconv’ &amp;&amp; make install</p>\n<p>  配置mysql：把源码包中的my-medium.cnf拷贝的/etc/下命名为my.cnf</p>\n<p>[root@delphi mysql-5.0.41]# cp support-files/my-medium.cnf /etc/my.cnf</p>\n<p>启动用户的授权表：</p>\n<p>[root@delphi mysql-5.0.41]# /usr/local/mysql/bin/mysql_install_db —user=mysql</p>\n<p>改变目录权限：</p>\n<p>[root@delphi mysql-5.0.41]# chown -R root /usr/local/mysql     #改变mysql所属用户<br>[root@delphi mysql-5.0.41]# chown -R mysql /usr/local/mysql/var     #改变mysql下var这个目录所属用户<br>[root@delphi mysql-5.0.41]# chgrp -R mysql /usr/local/mysql     #改变mysql的所属组，这里的-Ｒ是权限继承到子目录</p>\n<p>启动：mysql</p>\n<p>[root@delphi mysql-5.0.41]# /usr/local/mysql/bin/mysqld_safe —user=mysql &amp;<br>[1] 25856<br>[root@delphi mysql-5.0.41]# nohup: 忽略输入重定向错误到标准输出端<br>Starting mysqld daemon with databases from /usr/local/mysql/var     #表示数据存放路径。回车既可。</p>\n<p>查看mysql是否启动：</p>\n<p>[root@delphi mysql-5.0.41]# pgrep mysql</p>\n<p>查看mysql的版本：</p>\n<p>[root@delphi mysql-5.0.41]# /usr/local/mysql/bin/mysqladmin version</p>\n<p>查看mysql配置参数：</p>\n<p>[root@delphi mysql-5.0.41]# /usr/local/mysql/bin/mysqladmin variables</p>\n<p>  设置ｍｙｓｑｌ的用户密码：</p>\n<p>[root@delphi mysql-5.0.41]# /usr/local/mysql/bin/mysql -uroot<br>Welcome to the MySQL monitor. Commands end with ; or \\g.<br>Your MySQL connection id is 3<br>Server version: 5.0.41-log Source distribution</p>\n<p>Type ‘help;’ or ‘\\h’ for help. Type ‘\\c’ to clear the buffer.</p>\n<p>mysql&gt; set password for ‘root’@’localhost’=PASSWORD(‘123456’);<br>Query OK, 0 rows affected (0.00 sec)</p>\n<p>mysql&gt; flush privileges;<br>Query OK, 0 rows affected (0.00 sec)</p>\n<p>mysql&gt; exit<br>Bye</p>\n<p>  把apache和mysql 加入启动项</p>\n<p>[root@delphi mysql-5.0.41]# echo “/usr/local/apache2/bin/apachectl start” &gt;&gt;/etc/rc.d/rc.local<br>[root@delphi mysql-5.0.41]# echo “/usr/local/mysql/bin/mysqld_safe —user=mysql &amp;” &gt;&gt; /etc/rc.d/rc.local</p>\n<p>  或者：</p>\n<p>[root@delphi ~]# cd lamp/mysql-5.0.41<br>[root@delphi mysql-5.0.41]# cp support-files/mysql.server /etc/rc.d/init.d/mysqld<br>[root@delphi mysql-5.0.41]# chown root.root /etc/rc.d/init.d/mysqld<br>[root@delphi mysql-5.0.41]# chmod 755 /etc/rc.d/init.d/mysqld<br>[root@delphi mysql-5.0.41]# chkconfig —add mysqld<br>[root@delphi mysql-5.0.41]# chkconfig —list mysqld<br>mysqld 0:关闭1:关闭2:启用3:启用4:启用5:启用6:关闭<br>[root@delphi mysql-5.0.41]# chkconfig —levels 245 mysqld off　#设置运行级别启动项的方法．<br>[root@delphi mysql-5.0.41]# chkconfig —list mysqld　<br>mysqld 0:关闭1:关闭2:关闭3:启用4:关闭5:关闭6:关闭<br>[root@delphi mysql-5.0.41]# chkconfig —levels 245 mysqld on #更改回原来的运行级别</p>\n<p>  12.安装php:</p>\n<p>[root@delphi lamp]# cd php-5.2.6<br>[root@delphi php-5.2.6]# ./configure —prefix=/usr/local/php/ —with-config-file-path=/usr/local/php/etc —with-apxs2=/usr/local/apache/bin/apxs —with-mysql=/usr/local/mysql/ —with-libxml-dir=/usr/local/libxml2/ —with-jpeg-dir=/usr/local/jpeg8/ —with-freetype-dir=/usr/local/freetype/ —with-gd —with-mcrypt=/usr/local/libmcrypt/ —with-mysqli=/usr/local/mysql/bin/mysql_config –with-curl=/usr/local/curl<br>—with-zlib-dir=/usr/local/zlib/ —with-png-dir=/usr/local/libpng/ —with-mysql —enable-soap —enable-mbstring=all—enable-sockets<br>或者<br>直接生成curl，后面就不用重新编译生成了<br>./configure —prefix=/usr/local/php/ —with-apxs2=/usr/local/apache/bin/apxs —with-curl=/usr/local/curl/bin —with-libxml-dir=/usr/local/libxml2/ —with-jpeg-dir=/usr/local/jpeg/ —with-freetype-dir=/usr/local/freetype/—with-gd-dir=/usr/local/gd/—with-zlib-dir=/usr/local/zlib/—with-mcrypt=/usr/local/libmcrypt/—with-mysqli=/usr/local/mysql/bin/mysql_config —enable-soap —enable-mbstring=all —enable-sockets<br> [root@delphi php-5.2.6]# make &amp;&amp; make install<br>这边make instal后回报错，原作者没给我给个答案<br>类似以下错误<br>/opt/php-5.2.17/ext/dom/node.c -o ext/dom/node.lo<br>/opt/php-5.2.17/ext/dom/node.c: In function â€کdom_canonicalizationâ€™:<br>/opt/php-5.2.17/ext/dom/node.c:1953: error: dereferencing pointer to incomplete type<br>/opt/php-5.2.17/ext/dom/node.c:1955: error: dereferencing pointer to incomplete type<br>make: <em>*</em> [ext/dom/node.lo] Error 1</p>\n<p>可用<br># curl -o php-5.2.17.patch <a href=\"https://mail.gnome.org/archives/xml/2012-August/txtbgxGXAvz4N.txt\">https://mail.gnome.org/archives/xml/2012-August/txtbgxGXAvz4N.txt</a></p>\n<h1 id=\"cd-php-5-2-17\"><a href=\"#cd-php-5-2-17\" class=\"headerlink\" title=\"cd php-5.2.17\"></a>cd php-5.2.17</h1><p># patch -p0 -b &lt; ./php-5.2.17.patch<br>   patching file ext/dom/node.c<br>   patching file<br>   ext/dom/documenttype.c<br>   patching file ext/simplexml/simplexml.c<br>然后重新编译，安装，记得make clean 一下<br>出现</p>\n<p>make: <em>*</em> [sapi/cli/php] 错误 1</p>\n<p>在make时改为 make ZEND_EXTRA_LIBS=’-liconv’ &amp;&amp; make install<br>  [root@delphi php-5.2.6]# cp php.ini-dist /usr/local/php/etc/php.ini[root@delphi php-5.2.6]# echo “Addtype application/x-httpd-php .php .phtml” &gt;&gt; /etc/httpd/httpd.conf[root@delphi php-5.2.6]# /usr/local/apache2/bin/apachectl restart</p>\n<p>cp php.ini-dist /usr/local/php/etc/php.ini</p>\n<p>vi /usr/local/apache/conf/httpd.conf</p>\n<p>在 AddType application/x-compress .Z</p>\n<pre><code> AddType application/x-gzip .gz .tgz\n</code></pre><p> 后面添加 Addtype application/x-httpd-php .php .phtml</p>\n<pre><code> Addtype application/x-httpd-php-source .phps\n</code></pre><p>13.安装Zend加速器</p>\n<p>[root@delphi lamp]# cd ZendOptimizer-3.2.6-linux-glibc21-i386<br>[root@delphi ZendOptimizer-3.2.6-linux-glibc21-i386]# ./install.sh</p>\n<p>  安装过程选择正确的 php.ini 文件所在目录 和 apache控制命令所在目录   14.安装 phpmyadmin 方便管理mysql数据库</p>\n<p>[root@delphi lamp]# mv phpMyAdmin-3.0.0-rc1-all-languages /usr/local/apache2/htdocs/phpmyadmin</p>\n<p>笔者在编译php时遇到诸多问题，也是一步步百度查询找到答案的，刚配置的centos是不完善的。</p>\n",
            "tags": [
                "php",
                "php服务器",
                "centos",
                "lanmp",
                "php环境独立配置",
                "服务器"
            ]
        }
    ]
}