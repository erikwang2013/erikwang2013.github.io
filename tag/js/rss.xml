<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>艾瑞可erik • Posts by &#34;js&#34; tag • Posts by &#34;undefined&#34; categories</title>
        <link>https://erik.xyz</link>
        <description>一只PHP开发的程序猿，偶尔做做运维、Goland、Python、Java、摄影、画画、写作、顺便睡觉，反正整站都搞过。</description>
        <language>zh-CN</language>
        <pubDate>Fri, 29 May 2015 18:32:00 +0800</pubDate>
        <lastBuildDate>Fri, 29 May 2015 18:32:00 +0800</lastBuildDate>
        <category>日志</category>
        <category>工具</category>
        <category>php扩展</category>
        <category>php技巧</category>
        <category>php类库</category>
        <category>php资源</category>
        <category>jquery</category>
        <category>jquery插件</category>
        <category>js</category>
        <category>css</category>
        <category>php</category>
        <category>web</category>
        <category>代码</category>
        <category>压缩</category>
        <category>说说</category>
        <category>趣闻</category>
        <category>php服务器</category>
        <category>随笔</category>
        <category>php实例</category>
        <category>nginx</category>
        <category>转载</category>
        <category>php库</category>
        <category>互联</category>
        <category>项目实战</category>
        <category>javascript</category>
        <category>漏洞</category>
        <category>php应用</category>
        <category>浮点</category>
        <category>http</category>
        <category>http服务器</category>
        <category>负载均衡</category>
        <category>kali</category>
        <category>kali安装</category>
        <category>农业系统</category>
        <category>系统设计</category>
        <category>克莱姆法则</category>
        <category>行列式</category>
        <category>n阶行列式</category>
        <category>支付系统</category>
        <category>支付</category>
        <category>centos</category>
        <category>linux</category>
        <category>apache优化</category>
        <category>apache隐藏index</category>
        <category>nginx优化</category>
        <category>nginx隐藏index</category>
        <category>日常</category>
        <category>seo</category>
        <category>优化</category>
        <category>摘要</category>
        <category>文章</category>
        <category>游记</category>
        <category>ca证书</category>
        <category>证书生成</category>
        <category>二战</category>
        <category>二战熊</category>
        <category>西伯利亚熊</category>
        <category>centos软件</category>
        <category>yum仓库</category>
        <category>软件</category>
        <category>centos安装chromium报错</category>
        <category>chromium安装报错</category>
        <category>svn</category>
        <category>代码提交</category>
        <category>deb</category>
        <category>deb/rpm互转</category>
        <category>deb转rpm</category>
        <category>rpm互转</category>
        <category>centos7安装steam</category>
        <category>centos安装steam</category>
        <category>centos安装吃鸡steam</category>
        <category>linux安装steam</category>
        <category>steam安装</category>
        <category>centos软件安装</category>
        <category>centos6.5</category>
        <category>linux系统</category>
        <category>centos7安装Redis Desktop Manager</category>
        <category>centos7安装redis桌面</category>
        <category>centos安装redis桌面</category>
        <category>linux安装centos7安装Redis Desktop Manager</category>
        <category>Redis Desktop Manager</category>
        <category>redis桌面</category>
        <category>centos7</category>
        <category>centos7-wine</category>
        <category>wine</category>
        <category>wine安装</category>
        <category>root密码</category>
        <category>root密码重置</category>
        <category>忘记root密码</category>
        <category>memcache</category>
        <category>memcached</category>
        <category>生活手记</category>
        <category>艾瑞可erik</category>
        <category>程序员</category>
        <category>开源云</category>
        <category>容器</category>
        <category>cncf</category>
        <category>监控</category>
        <category>composer</category>
        <category>composer部署</category>
        <category>内网部署composer</category>
        <category>cphalcon</category>
        <category>cphalcon报错</category>
        <category>css中的em</category>
        <category>响应式字体</category>
        <category>响应式布局样式</category>
        <category>proxy代理搭建</category>
        <category>代理服务器搭建</category>
        <category>proxy服务器</category>
        <category>查找</category>
        <category>排序</category>
        <category>快速排序</category>
        <category>冒泡排序</category>
        <category>二分查找</category>
        <category>datahub</category>
        <category>datahub安装</category>
        <category>deepin</category>
        <category>emergency</category>
        <category>emergency mode</category>
        <category>deepin黑屏</category>
        <category>清理系统</category>
        <category>清理c盘</category>
        <category>dns</category>
        <category>域名监测</category>
        <category>网站监测</category>
        <category>docker</category>
        <category>php安装</category>
        <category>杂谈</category>
        <category>ecshop</category>
        <category>框架</category>
        <category>beego数据分页</category>
        <category>分页</category>
        <category>elasticsearch</category>
        <category>elasticsearch搭建</category>
        <category>elasticsearch集群</category>
        <category>系统</category>
        <category>emm</category>
        <category>mdm</category>
        <category>phone</category>
        <category>手机</category>
        <category>新闻</category>
        <category>免费</category>
        <category>jenkis</category>
        <category>jenkis教程</category>
        <category>随笔吐槽</category>
        <category>算法</category>
        <category>ping</category>
        <category>ping服务器</category>
        <category>各大网站ping</category>
        <category>搜引擎ping服务器</category>
        <category>go获取ip</category>
        <category>im</category>
        <category>go中pdf生成</category>
        <category>go中限流</category>
        <category>go对接快递签名</category>
        <category>go时间获取</category>
        <category>go类型转换</category>
        <category>微服务</category>
        <category>go-zero</category>
        <category>rpc</category>
        <category>go加密</category>
        <category>go解密</category>
        <category>归</category>
        <category>吐槽</category>
        <category>php大全</category>
        <category>php资料</category>
        <category>hadoop</category>
        <category>hadoop2.8.0</category>
        <category>hadoop安装教程</category>
        <category>hadoop安装详细教程</category>
        <category>hadoop教程</category>
        <category>hadoop部署</category>
        <category>hadoop3</category>
        <category>hadoop配置</category>
        <category>log4j2</category>
        <category>数据库</category>
        <category>hbase安装教程</category>
        <category>hbase</category>
        <category>http1.1</category>
        <category>http2.0</category>
        <category>会话</category>
        <category>会话原理</category>
        <category>hyperf</category>
        <category>杂录</category>
        <category>新冠肺炎</category>
        <category>springboot</category>
        <category>springboot内网部署</category>
        <category>linux恢复</category>
        <category>linux误删</category>
        <category>linux命令</category>
        <category>linux命令汇总</category>
        <category>jenkins</category>
        <category>jetbtrains</category>
        <category>phpstorm</category>
        <category>搜索引擎</category>
        <category>图片</category>
        <category>素材</category>
        <category>jq</category>
        <category>jq侧边导航</category>
        <category>侧边导航</category>
        <category>js判断浏览器</category>
        <category>js判断浏览器版本</category>
        <category>判断浏览器</category>
        <category>浏览器版本判断</category>
        <category>获取浏览器信息</category>
        <category>kali右键汉化</category>
        <category>kali桌面右键汉化</category>
        <category>kali右键创建文件</category>
        <category>区块链</category>
        <category>lanmp</category>
        <category>php环境独立配置</category>
        <category>服务器</category>
        <category>劳动纠纷</category>
        <category>追缴工资</category>
        <category>申请仲裁</category>
        <category>flash</category>
        <category>表单</category>
        <category>linux报错</category>
        <category>linux中update-command-not-found</category>
        <category>linux运行命令报错</category>
        <category>web前端</category>
        <category>web优化</category>
        <category>撮合算法</category>
        <category>撮合</category>
        <category>php撮合算法</category>
        <category>maven搭建库</category>
        <category>maven</category>
        <category>maven内网库</category>
        <category>高级缓存配置</category>
        <category>mongodb</category>
        <category>mongodb权限</category>
        <category>可穿戴设备</category>
        <category>mysql</category>
        <category>分库分表</category>
        <category>mysql应对千万级</category>
        <category>mysql瓶颈</category>
        <category>mysql瓶颈解决办法</category>
        <category>redis</category>
        <category>数据一致性</category>
        <category>mysql消息</category>
        <category>mysql队列</category>
        <category>mysql高并发</category>
        <category>mysql存储</category>
        <category>mysql引擎</category>
        <category>mysql数据表设计选择</category>
        <category>mysql监控</category>
        <category>mysql性能</category>
        <category>内网支付</category>
        <category>内网穿透</category>
        <category>支付接口本地化开发</category>
        <category>本地挂网</category>
        <category>穿透</category>
        <category>go</category>
        <category>new和make的区别</category>
        <category>红包算法</category>
        <category>深圳劳动法服务部门</category>
        <category>非关系型数据库</category>
        <category>onethink</category>
        <category>oop</category>
        <category>php管理系统</category>
        <category>开放接口开发</category>
        <category>开源工具</category>
        <category>桌面共享工具</category>
        <category>openresty</category>
        <category>openvas</category>
        <category>openvas安装</category>
        <category>php变量</category>
        <category>php超级全局变量</category>
        <category>php超级变量</category>
        <category>php基本类型</category>
        <category>php数据类型</category>
        <category>php设计模式</category>
        <category>php对接微信支付</category>
        <category>微信支付</category>
        <category>微信支付回调</category>
        <category>游戏</category>
        <category>php函数</category>
        <category>php随机数</category>
        <category>php获取闰年</category>
        <category>闰年.php时间</category>
        <category>php环境</category>
        <category>php集成环境</category>
        <category>服务器集成环境</category>
        <category>数组函数</category>
        <category>数组排序函数</category>
        <category>php数学函数</category>
        <category>php面试题</category>
        <category>php面向对象</category>
        <category>面向对象</category>
        <category>php-zookeeper</category>
        <category>zookeeper3.5.5</category>
        <category>php-zookeeper扩展</category>
        <category>php串口开发</category>
        <category>php倒计时</category>
        <category>php时间</category>
        <category>倒计时</category>
        <category>计算时间</category>
        <category>PHP数组</category>
        <category>字符串函数</category>
        <category>排序函数</category>
        <category>php的SPL</category>
        <category>SPL手册</category>
        <category>PHP算法</category>
        <category>php递归</category>
        <category>递归</category>
        <category>phpunit</category>
        <category>phpunit安装</category>
        <category>php过滤</category>
        <category>过滤</category>
        <category>foreach</category>
        <category>foreach报错</category>
        <category>php中foreach报错</category>
        <category>php中if</category>
        <category>php中if判断</category>
        <category>php的if</category>
        <category>php字符串</category>
        <category>php7中sphinx</category>
        <category>php7中sphinx扩展</category>
        <category>sphinx扩展</category>
        <category>python</category>
        <category>python库</category>
        <category>a标签</category>
        <category>a标签虚线</category>
        <category>虚线框</category>
        <category>R语言</category>
        <category>数据随机化</category>
        <category>redis总结</category>
        <category>redis命令</category>
        <category>redis监控</category>
        <category>redis锁</category>
        <category>redis分布式锁</category>
        <category>任意金额输入</category>
        <category>10元、5元、2元</category>
        <category>队列</category>
        <category>栈</category>
        <category>顺序表</category>
        <category>链表</category>
        <category>数据结构</category>
        <category>线性结构</category>
        <category>浏览器禁止操作视频</category>
        <category>禁止视频</category>
        <category>响应慢</category>
        <category>页面优化</category>
        <category>js编辑</category>
        <category>runjs</category>
        <category>在线编辑</category>
        <category>rust</category>
        <category>rust配置</category>
        <category>seajs</category>
        <category>session</category>
        <category>路由器烧录</category>
        <category>烧录</category>
        <category>极路由2烧录</category>
        <category>砖头烧录</category>
        <category>免费服务器</category>
        <category>空间</category>
        <category>资源</category>
        <category>深圳政府电话</category>
        <category>深圳电话</category>
        <category>特区电话</category>
        <category>居住证</category>
        <category>居住证签注</category>
        <category>深圳新居住证</category>
        <category>国庆骑行</category>
        <category>深圳珠海骑行</category>
        <category>骑行</category>
        <category>世界那么大</category>
        <category>css3</category>
        <category>css在线生成工具</category>
        <category>css工具</category>
        <category>php正则</category>
        <category>正则</category>
        <category>shodan</category>
        <category>黑谷歌</category>
        <category>黒帽搜素</category>
        <category>shopex</category>
        <category>可视化数据</category>
        <category>数据</category>
        <category>数据表</category>
        <category>socket通信</category>
        <category>socket多进程</category>
        <category>socket</category>
        <category>json</category>
        <category>json数组</category>
        <category>json解析</category>
        <category>sql</category>
        <category>sql优化</category>
        <category>css3兼容360浏览器兼容模式</category>
        <category>css圆角</category>
        <category>结构体转map</category>
        <category>config</category>
        <category>thinkphp</category>
        <category>配置文件</category>
        <category>树</category>
        <category>二叉树</category>
        <category>js插件</category>
        <category>web自适应</category>
        <category>响应式布局</category>
        <category>响应式所有分辨率</category>
        <category>自适应布局</category>
        <category>自适应所有分辨率</category>
        <category>webman</category>
        <category>mysql设置超时，超时</category>
        <category>markdown</category>
        <category>wget</category>
        <category>wget抓取</category>
        <category>网站抓取</category>
        <category>我在</category>
        <category>wordpress</category>
        <category>wordpress标签</category>
        <category>域名合并</category>
        <category>wpscan</category>
        <category>usbrip</category>
        <category>无限极分类</category>
        <category>php无限极</category>
        <category>分类tree</category>
        <category>无限极分类树型</category>
        <category>xhprof</category>
        <category>laravel</category>
        <category>composer插件</category>
        <category>html</category>
        <category>响应式分辨率</category>
        <category>响应式调试</category>
        <category>自适应屏幕</category>
        <category>携程</category>
        <category>携程攻击</category>
        <category>携程网站瘫痪</category>
        <category>物理删除</category>
        <category>3D</category>
        <category>动画</category>
        <category>平台</category>
        <category>虚幻4引擎编辑</category>
        <category>生成唯一id</category>
        <category>生成id</category>
        <category>发邮件</category>
        <category>邮件函数</category>
        <category>储蓄卡免年费</category>
        <category>银行卡</category>
        <category>银行卡免年费</category>
        <category>composer安装</category>
        <category>composer配置</category>
        <category>项目创建composer</category>
        <category>mysql优化</category>
        <category>mysql读写优化</category>
        <category>数据库优化，mysql语句优化</category>
        <category>php加密</category>
        <category>php技术</category>
        <category>夕阳</category>
        <category>mysql函数</category>
        <category>php中mysql函数</category>
        <category>互联网时代</category>
        <category>开源技术</category>
        <category>web框架</category>
        <category>php抓取图片</category>
        <category>php批量抓取页面图片</category>
        <category>邮箱服务器</category>
        <category>正则表达式</category>
        <category>翻墙</category>
        <category>谷歌</category>
        <category>谷歌搜索</category>
        <category>php架构</category>
        <category>php服务</category>
        <category>php服务设计</category>
        <item>
            <guid isPermalink="true">https://erik.xyz/2015/05/29/15-ge-mian-fei-de-jquery-cha-jian-zhong-wen-xiang-jie/</guid>
            <title>15个免费的jQuery插件中文详解</title>
            <link>https://erik.xyz/2015/05/29/15-ge-mian-fei-de-jquery-cha-jian-zhong-wen-xiang-jie/</link>
            <category>jquery</category>
            <category>jquery插件</category>
            <category>js</category>
            <pubDate>Fri, 29 May 2015 18:32:00 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;&lt;strong&gt;QMeter&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://s6.51cto.com/wyfs02/M02/5D/D8/wKioL1Ul1YGSTw_AAABnpCBMYME808.jpg&#34;&gt;&lt;img src=&#34;http://s6.51cto.com/wyfs02/M02/5D/D8/wKioL1Ul1YGSTw_AAABnpCBMYME808.jpg&#34; alt=&#34;2015年4月15个免费的jQuery插件中文详解&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;jQMeter是一款简便的轻量化jQuery插件，允许大家以动画方式显示横向或者纵向进程表。其目前提供目标及具体数量的增长或完成显示效果，大家也可以点击此处查看其它可选功能。 &lt;strong&gt;Prism Effect Slider&lt;/strong&gt;&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://s4.51cto.com/wyfs02/M01/5D/DD/wKiom1Ul1PXTE-j1AACjqWKfedE195.jpg&#34;&gt;&lt;img src=&#34;http://s4.51cto.com/wyfs02/M01/5D/DD/wKiom1Ul1PXTE-j1AACjqWKfedE195.jpg&#34; alt=&#34;2015年4月15个免费的jQuery插件中文详解&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;今天我们要为大家展示的是如何利用有趣的“棱镜”特效创建简单的幻灯片文件。这一创意在于将图形放置在幻灯片之前，并对每幅图片进行“反映”，从而创造出镜像般的显示效果。要运用这款插件，我们同时需要使用HTML 5 canvas元素与纯JavaScript代码。 &lt;strong&gt;Fixed Background Effect&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://s9.51cto.com/wyfs02/M02/5D/D8/wKioL1Ul1meCJz3FAABDoGESP54667.jpg&#34;&gt;&lt;img src=&#34;http://s9.51cto.com/wyfs02/M02/5D/D8/wKioL1Ul1meCJz3FAABDoGESP54667.jpg&#34; alt=&#34;2015年4月15个免费的jQuery插件中文详解&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这是一套简单模板，能够利用背景附件CSS属性的优势创造出固定背景效果。 &lt;strong&gt;Animated Dropdown Mega Menu&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://s9.51cto.com/wyfs02/M00/5D/D8/wKioL1Ul1ovhB8mOAAB73lnLHqI241.jpg&#34;&gt;&lt;img src=&#34;http://s9.51cto.com/wyfs02/M00/5D/D8/wKioL1Ul1ovhB8mOAAB73lnLHqI241.jpg&#34; alt=&#34;2015年4月15个免费的jQuery插件中文详解&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这是一款动画化下拉菜单插件，利用Animate CSS/HoverIntent让CSS布局摆脱只能后退的单调效果。 &lt;strong&gt;Audio Recording&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://s4.51cto.com/wyfs02/M01/5D/D8/wKioL1Ul1uKig3kpAABe78Rl2Dg335.jpg&#34;&gt;&lt;img src=&#34;http://s4.51cto.com/wyfs02/M01/5D/D8/wKioL1Ul1uKig3kpAABe78Rl2Dg335.jpg&#34; alt=&#34;2015年4月15个免费的jQuery插件中文详解&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;今天，我们打算探讨如何利用jQuery以及HTML 5通过HTML 5音频播放器在newsfeed上发布自己的语音记录信息。能够查看上述简短演示，大家完全可以掌握其使用方式——当然，为了获得更出色的音频效果，我们也别忘了配合麦克风使用。 &lt;strong&gt;jQuery Progress Tracker&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://s4.51cto.com/wyfs02/M01/5D/DD/wKiom1Ul1dHiG2r6AAAVTLfp-c8617.jpg&#34;&gt;&lt;img src=&#34;http://s4.51cto.com/wyfs02/M01/5D/DD/wKiom1Ul1dHiG2r6AAAVTLfp-c8617.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这款体积小巧(仅为2KB)的jQuery插件能够根据用户的实际内容创建出固定的进度指示器，并允许不同指示器间相互链接。 &lt;strong&gt;Hover Effects Builder&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://s8.51cto.com/wyfs02/M02/5D/D8/wKioL1Ul1zTA3b-7AADNFaAegRU586.jpg&#34;&gt;&lt;img src=&#34;http://s8.51cto.com/wyfs02/M02/5D/D8/wKioL1Ul1zTA3b-7AADNFaAegRU586.jpg&#34; alt=&#34;2015年4月15个免费的jQuery插件中文详解&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;为网站上的图片提供CSS3的悬停特效，而且使用者无需任何CSS编码知识。 &lt;strong&gt;iFrame Resize&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://s7.51cto.com/wyfs02/M02/5D/DD/wKiom1Ul1hXzXdNQAACIyghX9NM060.jpg&#34;&gt;&lt;img src=&#34;http://s7.51cto.com/wyfs02/M02/5D/DD/wKiom1Ul1hXzXdNQAACIyghX9NM060.jpg&#34; alt=&#34;2015年4月15个免费的jQuery插件中文详解&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这套库允许用户以自动方式将跨域iFrame的高度与宽度进行统一化调整，从而适应所包含内容的格式。它还提供一系列功能选项，帮助大家解决iFrames使用中可能出现的各类常见问题。 &lt;strong&gt;Loaders.css&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://s9.51cto.com/wyfs02/M02/5D/D8/wKioL1Ul16fRkwTiAAAp55PGZ38231.jpg&#34;&gt;&lt;img src=&#34;http://s9.51cto.com/wyfs02/M02/5D/D8/wKioL1Ul16fRkwTiAAAp55PGZ38231.jpg&#34; alt=&#34;2015年4月15个免费的jQuery插件中文详解&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这是一套完全由CSS编写而成的载入动画效果集合。每种动画都被限制在CSS属性内的小型子集中，从而避免带来繁重的绘制以及布局计算量。 &lt;strong&gt;simpleFilter.js&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://s7.51cto.com/wyfs02/M01/5D/D8/wKioL1Ul196SqG4pAAAZ-81ENAQ140.jpg&#34;&gt;&lt;img src=&#34;http://s7.51cto.com/wyfs02/M01/5D/D8/wKioL1Ul196SqG4pAAAZ-81ENAQ140.jpg&#34; alt=&#34;2015年4月15个免费的jQuery插件中文详解&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;simpleFilter.js是一款易于使用的jQuery插件，包含一整套面向网站的图片滤镜库。大家可以从八种滤镜以及六种调节器中做出选择，从而创建出微妙的视觉效果。 &lt;strong&gt;Gridder.js&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://s8.51cto.com/wyfs02/M01/5D/DD/wKiom1Ul1rLSTOW1AADh88rGdaM364.jpg&#34;&gt;&lt;img src=&#34;http://s8.51cto.com/wyfs02/M01/5D/DD/wKiom1Ul1rLSTOW1AADh88rGdaM364.jpg&#34; alt=&#34;2015年4月15个免费的jQuery插件中文详解&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这 是一款用于显示预览缩略图的jQuery插件，其作用类似于谷歌图片。其效果相当不错、实用性也非常突出，能够帮助大家快速查看更多内容细节，而又无需重 新加载新的页面。其设计思路在于，用户可以点击某个缩略图以打开预览内容，其中包含尺寸更大的图像、标题、描述以及链接。 &lt;strong&gt;Spectrum&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://s3.51cto.com/wyfs02/M01/5D/D8/wKioL1Ul2DvhVUi-AABOQR97WXs211.jpg&#34;&gt;&lt;img src=&#34;http://s3.51cto.com/wyfs02/M01/5D/D8/wKioL1Ul2DvhVUi-AABOQR97WXs211.jpg&#34; alt=&#34;2015年4月15个免费的jQuery插件中文详解&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这是一款动态且丰富多彩的jQuery插件，特别适合用于向大家的Web应用程序中添加细微的色彩过渡效果。 &lt;strong&gt;Tour Tip Guide!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://s2.51cto.com/wyfs02/M00/5D/D8/wKioL1Ul2FKg28tHAABEJjfpllQ721.jpg&#34;&gt;&lt;img src=&#34;http://s2.51cto.com/wyfs02/M00/5D/D8/wKioL1Ul2FKg28tHAABEJjfpllQ721.jpg&#34; alt=&#34;2015年4月15个免费的jQuery插件中文详解&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;jQuery Tour Tip Guide!是一款美观的导航类插件。 &lt;strong&gt;WebSnowjq.js&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://s6.51cto.com/wyfs02/M02/5D/D8/wKioL1Ul2HaR1ip8AABEgWrWrLI556.jpg&#34;&gt;&lt;img src=&#34;http://s6.51cto.com/wyfs02/M02/5D/D8/wKioL1Ul2HaR1ip8AABEgWrWrLI556.jpg&#34; alt=&#34;2015年4月15个免费的jQuery插件中文详解&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;WebSnowjq.Js是一款jQuery插件，旨在利用HTML 5与JavaScript代码在网页之上创建出虚拟飘雪效果。WebSnowjq.Js能够与各类支持HTML 5的浏览器相兼容。大家能够轻松将WebSnowjq.Js整合到网站当中。 &lt;strong&gt;Responsive Facebook Style Timeline Design With Bootstrap&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://s9.51cto.com/wyfs02/M00/5D/D8/wKioL1Ul2IrRI14jAABq0m6s3Eg799.jpg&#34;&gt;&lt;img src=&#34;http://s9.51cto.com/wyfs02/M00/5D/D8/wKioL1Ul2IrRI14jAABq0m6s3Eg799.jpg&#34; alt=&#34;2015年4月15个免费的jQuery插件中文详解&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这里我们要介绍如何利用Twitter Bootstrap实现这种Responsive Facebook风格的时间表设计方案。我们将共同一步步了解如何实现这一响应式时间设计，所以请大家务必认真阅读其中的每一个具体步骤。&lt;/p&gt;
&lt;p&gt;来自：&lt;a href=&#34;http://developer.51cto.com/art/201504/471472_2.htm&#34;&gt;http://developer.51cto.com/art/201504/471472_2.htm&lt;/a&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://erik.xyz/2015/04/14/tui-jian-13-kuan-you-xiu-de-bootstrap-javascript-cha-jian/</guid>
            <title>推荐13款优秀的Bootstrap JavaScript插件</title>
            <link>https://erik.xyz/2015/04/14/tui-jian-13-kuan-you-xiu-de-bootstrap-javascript-cha-jian/</link>
            <category>js</category>
            <category>js插件</category>
            <pubDate>Tue, 14 Apr 2015 23:18:00 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;Bootstrap是基于HTML，CSS和JavaScript的简洁灵活的流行前端框架及交互组件集，由微博先驱Twitter在2011年8 月开源的整套前端解决解决方案，拥有非常完备和详尽的开发文档，有了它，Web开发人员能够轻松搭建出清爽风格的界面以及实现良好的交互效果。 Twitter Boostrap的口号是适用于任何场景，适用于每一个人，如今越来越多的开发者开始积极使用Boostrap，就在几周前，Bootstrap发布了最 新版本，改进了许多新特性。Bootstrap是迄今为止最全面的前端框架及真正适用于快速成型和后端/CMS开发工具。本文收集了13款非常不错的 Twitter bootstrap JavaScript扩展插件，利用Boostrap开发者可以节省大量的时间修复跨浏览器布局问题，实现各种形式的Web界面。 &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1. Fuel UX&lt;/strong&gt; &lt;img src=&#34;http://upload.chinaz.com/2015/0123/1422004996870.jpg&#34; alt=&#34;&#34;&gt; Fuel UX是Twitter Bootstrap的一款轻量级插件。组件包括ComboBox, Datagrid, Pillbox, Search 和Spinner等一些实用的插件。 &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2.&lt;/strong&gt; &lt;strong&gt;BootMetro&lt;/strong&gt; &lt;img src=&#34;http://upload.chinaz.com/2015/0123/1422004996686.jpg&#34; alt=&#34;&#34;&gt; BootMetro可以将bootstrap转换成Microsoft Metro UI。此外，BootMetro附带的JavaScript插件能够很好的支持Metro性能。 &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3.&lt;/strong&gt; &lt;strong&gt;WYSIHTML5&lt;/strong&gt; &lt;img src=&#34;http://upload.chinaz.com/2015/0123/1422004996269.jpg&#34; alt=&#34;&#34;&gt; WYSIWYG HTML5非常漂亮的一款Web编辑器，拥有比较全面的配置和事件能够满足你的需求。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4.&lt;/strong&gt; &lt;strong&gt;jqBootstrap Validation&lt;/strong&gt; &lt;img src=&#34;http://upload.chinaz.com/2015/0123/1422004996362.jpg&#34; alt=&#34;&#34;&gt; 我非常喜欢Bootstrap默认的风格。如果你想要个与众不同的主题，那么这个插件可以帮助你。 &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;5.&lt;/strong&gt; &lt;strong&gt;ColorPicker&lt;/strong&gt; &lt;img src=&#34;http://upload.chinaz.com/2015/0123/1422004996734.jpg&#34; alt=&#34;&#34;&gt; 这个插件允许你添加颜色字段，支持多种色彩风格。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;6.&lt;/strong&gt; &lt;strong&gt;DatePicker&lt;/strong&gt; &lt;img src=&#34;http://upload.chinaz.com/2015/0123/1422004996184.jpg&#34; alt=&#34;&#34;&gt; Datepicker允许添加文本或者任意元素，它常被用作组件可支持多种日期格式。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;7.&lt;/strong&gt; &lt;strong&gt;TimePicker&lt;/strong&gt; &lt;img src=&#34;http://upload.chinaz.com/2015/0123/1422004996339.jpg&#34; alt=&#34;&#34;&gt; 如果你拥有一款日期选择器，那么你肯定想自定义编辑日期。这款插件只需利用鼠标或者箭头键即可轻松输入文本。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;8.&lt;/strong&gt; &lt;strong&gt;DateRange Picker&lt;/strong&gt; &lt;img src=&#34;http://upload.chinaz.com/2015/0123/1422004996110.jpg&#34; alt=&#34;&#34;&gt; 如果你曾用过Google Analytics（谷歌分析器），这款Javascript插件你肯定会很熟悉。DateRange非常适用于生成报表或者收集预约日期。 &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;9.&lt;/strong&gt; &lt;strong&gt;Bootbox JS&lt;/strong&gt; &lt;img src=&#34;http://upload.chinaz.com/2015/0123/1422004996153.jpg&#34; alt=&#34;&#34;&gt; 利用Twitter Boostrap现有模式创建编程式对话框。bootbox是一款非常灵活的且强大的JavaScrip对话框。 &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;10.&lt;/strong&gt; &lt;strong&gt;jQuery UI Bootstrap&lt;/strong&gt; &lt;img src=&#34;http://upload.chinaz.com/2015/0123/1422004996418.jpg&#34; alt=&#34;&#34;&gt; 这款拥有和Twitter Boostrap相似的主题，最重要的是如果你想将bootstrap和jQuery UI集成在一起，这个主题将会使它们看起来更加一致。 &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;11.&lt;/strong&gt; &lt;strong&gt;jQuery File Upload&lt;/strong&gt; &lt;img src=&#34;http://upload.chinaz.com/2015/0123/1422004996819.jpg&#34; alt=&#34;&#34;&gt; 基于HTML5 Ajax文件上传。基本的实现方式还是不错的，这里还有许多示例演示。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;12.&lt;/strong&gt; &lt;strong&gt;DataTables&lt;/strong&gt; &lt;img src=&#34;http://upload.chinaz.com/2015/0123/1422004996385.jpg&#34; alt=&#34;&#34;&gt; DataGrid与Fuel UX相似，支持排序，分页，搜索等功能。 &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;13.&lt;/strong&gt; &lt;strong&gt;Bootsnipp&lt;/strong&gt; &lt;img src=&#34;http://upload.chinaz.com/2015/0123/1422004883755.jpg&#34; alt=&#34;&#34;&gt; Bootsnipp不同于任何一款JavaScript插件，复制和粘贴布局代码段。它集合了常用的UI，包括登陆屏，窗口模式，表，导航栏等等，你可以获取代码并立即使用。&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://erik.xyz/2015/01/29/display-inline-block-text-align-justify-xia-lie-biao-de-liang-duan-dui-qi-bu-ju/</guid>
            <title>display:inline-block/text-align:justify下列表的两端对齐布局</title>
            <link>https://erik.xyz/2015/01/29/display-inline-block-text-align-justify-xia-lie-biao-de-liang-duan-dui-qi-bu-ju/</link>
            <category>js</category>
            <category>css</category>
            <category>web</category>
            <pubDate>Thu, 29 Jan 2015 22:06:00 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;by &lt;a href=&#34;http://www.zhangxinxu.com/&#34;&gt;zhangxinxu&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;一、何为列表元素的两端对齐布局&#34;&gt;&lt;a href=&#34;#一、何为列表元素的两端对齐布局&#34; class=&#34;headerlink&#34; title=&#34;一、何为列表元素的两端对齐布局&#34;&gt;&lt;/a&gt;一、何为列表元素的两端对齐布局&lt;/h3&gt;&lt;p&gt;首先说说何为两端对齐。下面这个截图是word中一段英文左对齐的右边缘截图：&lt;br&gt;&lt;img src=&#34;http://image.zhangxinxu.com/image/blog/201103/2011-03-12_214827.png&#34; alt=&#34;word中文字左对齐截图 张鑫旭-鑫空间-鑫生活&#34; title=&#34;word中文字左对齐截图 张鑫旭-鑫空间-鑫生活&#34;&gt; &lt;/p&gt;
&lt;p&gt;可以看到右侧是参差不起的，现在，选中文字，点击word上方的两端对齐按钮，如下图：&lt;br&gt;&lt;img src=&#34;http://image.zhangxinxu.com/image/blog/201103/2011-03-12_215036.png&#34; alt=&#34;点击word中两端对齐按钮 张鑫旭-鑫空间-鑫生活&#34; title=&#34;点击word中两端对齐按钮 张鑫旭-鑫空间-鑫生活&#34;&gt; &lt;/p&gt;
&lt;p&gt;结果文字的右边缘就成了这样：&lt;br&gt;&lt;img src=&#34;http://image.zhangxinxu.com/image/blog/201103/2011-03-12_215318.png&#34; alt=&#34;word中两端对齐效果截图 张鑫旭-鑫空间-鑫生活&#34; title=&#34;word中两端对齐效果截图 张鑫旭-鑫空间-鑫生活&#34;&gt; &lt;/p&gt;
&lt;p&gt;右侧完全对齐了，也就是整篇文字全部沿着左边缘和右边缘对齐显示了。 然后这里的“列表元素”指的是具有类似结构的重复列表元素，例如QQ校友中的图片列表：&lt;br&gt;&lt;img src=&#34;http://image.zhangxinxu.com/image/blog/201010/2010-10-28_215059.jpg&#34; alt=&#34;列表布局示意 张鑫旭-鑫空间-鑫生活&#34; title=&#34;列表布局示意 张鑫旭-鑫空间-鑫生活&#34;&gt; &lt;/p&gt;
&lt;p&gt;所谓列表元素的两端对齐就是每行列表元素的第一个元素与父容器的左边缘重合，最后一个元素与父容器的右边缘重合。例如淘宝首页的热卖单品，或是人人网的热门分享列表（如下截图）：&lt;br&gt;&lt;img src=&#34;http://image.zhangxinxu.com/image/blog/201103/2011-03-12_221107.png&#34; alt=&#34;人人网热门分享列表两端对齐 张鑫旭-鑫空间-鑫生活&#34; title=&#34;人人网热门分享列表两端对齐 张鑫旭-鑫空间-鑫生活&#34;&gt; &lt;/p&gt;
&lt;p&gt;我想我们平时写页面的时候也经常会拿到的列表元素两端对齐的体验舒服的设计图吧。&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;二、如何实现元素的两端对齐&#34;&gt;&lt;a href=&#34;#二、如何实现元素的两端对齐&#34; class=&#34;headerlink&#34; title=&#34;二、如何实现元素的两端对齐&#34;&gt;&lt;/a&gt;二、如何实现元素的两端对齐&lt;/h3&gt;&lt;p&gt;CSS2中&lt;code&gt;text-align&lt;/code&gt;有一个属性值为&lt;code&gt;justify&lt;/code&gt;，为对齐之意。其实现的效果就 是可以让一行文字两端对齐显示（文字内容要超过一行）。如果您现在浏览器的地址是以&lt;a href=&#34;http://www.zhangxinxu.com/打头的话，就可&#34;&gt;http://www.zhangxinxu.com/打头的话，就可&lt;/a&gt; 以发现我的每篇文章都是以两端对齐的方式显示的，所以，有时候就会出现文字非常稀松的情况，如下图所示。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://image.zhangxinxu.com/image/blog/201103/2011-03-12_211400.png&#34; alt=&#34;文字两端对齐下稀疏的排列 张鑫旭-鑫空间-鑫生活&#34; title=&#34;文字两端对齐下稀疏的排列 张鑫旭-鑫空间-鑫生活&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;text-align&lt;/code&gt;其诞生的意义是控制文字的对齐与显示的，从其属性名上就可以看出来。从其渲染与解析上来看，其主要 是用来控制inline水平元素或inline-block元素的对齐与显示的，例如嵌套行内标签的文字、图片、input表单控件等；而对block水 平的元素是没有作用的。 所以，对于列表元素，理论上，我们只要将原本block水平的列表元素inline化或是inline-block化就可以轻松实现其两端对齐了。 然而考虑到实际情况，inline水平化显然是不可能的，因为不能给列表元素定宽定高，设置垂直方向上的间距等，列表元素就像是一摊烂泥，根本没法用来砌 房子；而inline-block化也是有重重阻碍的，因为IE6/7并不真正意义上的支持inline-block属性。 可见，理论上虽简单，实际上还得从长计议。&lt;/p&gt;
&lt;h3 id=&#34;三、目前列表元素如何实现两端对齐的&#34;&gt;&lt;a href=&#34;#三、目前列表元素如何实现两端对齐的&#34; class=&#34;headerlink&#34; title=&#34;三、目前列表元素如何实现两端对齐的&#34;&gt;&lt;/a&gt;三、目前列表元素如何实现两端对齐的&lt;/h3&gt;&lt;p&gt;方法多多。 ① 首先看&lt;a href=&#34;http://www.taobao.com/#J_IndexP4P&#34;&gt;淘宝网首页&lt;/a&gt;热卖单品的例子，如下截图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://image.zhangxinxu.com/image/blog/201103/2011-03-12_223246.png&#34; alt=&#34;淘宝网首页热卖单品截图 张鑫旭-鑫空间-鑫生活&#34; title=&#34;淘宝网首页热卖单品截图 张鑫旭-鑫空间-鑫生活&#34;&gt; &lt;/p&gt;
&lt;p&gt;其列表布局使用的是传统的浮动(float)布局，通过&lt;code&gt;width&lt;/code&gt;属性强行增大父容器的宽度来实现看上去的“两端对齐”效果的。&lt;br&gt;&lt;img src=&#34;http://image.zhangxinxu.com/image/blog/201103/2011-03-12_223616.png&#34; alt=&#34;淘宝网首页增加容器宽度实现两端对齐 张鑫旭-鑫空间-鑫生活&#34; title=&#34;淘宝网首页增加容器宽度实现两端对齐 张鑫旭-鑫空间-鑫生活&#34;&gt; &lt;/p&gt;
&lt;p&gt;② 再看人人网热门分享的两端对齐效果的实现方法，我在之前“&lt;a href=&#34;http://www.zhangxinxu.com/wordpress/?p=1194&#34;&gt;基于display:inline-block的列表布局&lt;/a&gt;”一文中已经提过，人人网这里的列表布局为inline-block布局。&lt;br&gt;&lt;img src=&#34;http://image.zhangxinxu.com/image/blog/201103/2011-03-12_223940.png&#34; alt=&#34;人人网热门分享inline-block布局 张鑫旭-鑫空间-鑫生活&#34; title=&#34;人人网热门分享inline-block布局 张鑫旭-鑫空间-鑫生活&#34;&gt; &lt;/p&gt;
&lt;p&gt;其通过也是通过增大父标签的宽度来实现看上去的“两端对齐”效果的，不过其不是通过&lt;code&gt;width&lt;/code&gt;属性来增加父标签的宽度的，而是使用的margin负值（我个人推荐使用margin负值而不是定宽）：&lt;br&gt;&lt;img src=&#34;http://image.zhangxinxu.com/image/blog/201103/2011-03-12_224432.png&#34; alt=&#34;margin负值增加父容器的宽度 张鑫旭-鑫空间-鑫生活&#34; title=&#34;margin负值增加父容器的宽度 张鑫旭-鑫空间-鑫生活&#34;&gt; &lt;/p&gt;
&lt;p&gt;③ 还有一种方法就是利用&lt;code&gt;white-space: nowrap&lt;/code&gt;，此方法需在inline-block布局基础上使用，一般用在实现单行列表元素看上去的“两端对齐”效果上。&lt;code&gt;white-space: nowrap&lt;/code&gt;会强制列表元素不换行，于是你无需设定父标签容器的宽度或是通过&lt;code&gt;margin&lt;/code&gt;负值等手段增加父容器的宽度等。这里不展开，以后有机会要好好说一说&lt;code&gt;white-space: nowrap&lt;/code&gt;这个很有用的CSS声明的。 以上就是目前几种常见的实现列表元素看上去的“两端对齐”效果方法。怎么样，是不是每个都很折腾——首先列表元素排列就已经很折腾人的了（定宽，计算间距），然后还有人为增加父容器的宽度，同时祖辈元素还要溢出隐藏(&lt;code&gt;overflow:hidden&lt;/code&gt;)，oh，my lady嘎嘎。我想这就是为什么网上会有前端工程师咆哮体咆哮加班的原因了（关于此图，您可以点击&lt;br&gt;&lt;a href=&#34;http://ww4.sinaimg.cn/bmiddle/41718533jw6df4iuu2d6qj.jpg&#34;&gt;这里&lt;/a&gt;&lt;br&gt;查看）。 其实，这些活儿都是边喝咖啡，边看微博就可以完成的，关键使用&lt;code&gt;text-align:justify&lt;/code&gt;来做两端对齐的布局。&lt;/p&gt;
&lt;h3 id=&#34;四、text-align-justify实现两端对齐的好处&#34;&gt;&lt;a href=&#34;#四、text-align-justify实现两端对齐的好处&#34; class=&#34;headerlink&#34; title=&#34;四、text-align:justify实现两端对齐的好处&#34;&gt;&lt;/a&gt;四、text-align:justify实现两端对齐的好处&lt;/h3&gt;&lt;p&gt;好处就是简单方便。只要一个简单的&lt;code&gt;text-align:justify&lt;/code&gt;声明，里面的元素就自动等间距两端对齐布局啦！根本无需计算每个列表元素间的margin间距，更不用去修改父容器的宽度。&lt;/p&gt;
&lt;h3 id=&#34;五、关于display-inline-block列表布局&#34;&gt;&lt;a href=&#34;#五、关于display-inline-block列表布局&#34; class=&#34;headerlink&#34; title=&#34;五、关于display:inline-block列表布局&#34;&gt;&lt;/a&gt;五、关于display:inline-block列表布局&lt;/h3&gt;&lt;p&gt;本文的内容是基于&lt;code&gt;display:inline-block&lt;/code&gt;列表布局的，所以如果您只知道浮动布局建议您认真看下我之前“&lt;a href=&#34;http://www.zhangxinxu.com/wordpress/?p=1194&#34;&gt;拜拜了,浮动布局 – 基于display:inline-block的列表布局&lt;/a&gt;”一文，这篇文章非常详细的讲解了&lt;code&gt;display:inline-block&lt;/code&gt;列表布局的前世今生，相信会有不少收获。您可能注意到了，在这篇文章的最后其实已经简单提到&lt;code&gt;text-align:justify&lt;/code&gt;下的两端对齐布局，然而，那里只是简单展示了个&lt;a href=&#34;http://www.zhangxinxu.com/study/201011/inline-block-text-justify-layout.html&#34;&gt;例子&lt;/a&gt;，对于一些显示上的问题（例如悲剧的最后一行），以及IE6/7浏览器以及IE8浏览器下实现的注意事项并没有详细阐述，而本文就是来解决这些问题的。&lt;/p&gt;
&lt;h3 id=&#34;六、display-inline-block-text-align-justify下列表的两端对齐布局&#34;&gt;&lt;a href=&#34;#六、display-inline-block-text-align-justify下列表的两端对齐布局&#34; class=&#34;headerlink&#34; title=&#34;六、display:inline-block/text-align:justify下列表的两端对齐布局&#34;&gt;&lt;/a&gt;六、display:inline-block/text-align:justify下列表的两端对齐布局&lt;/h3&gt;&lt;p&gt;为了表述上逻辑清晰。我们先把IE6和IE7浏览器晾在一边，看看IE8+浏览器以及现代浏览器下如何&lt;code&gt;display:inline-block&lt;/code&gt;+&lt;code&gt;text-align:justify&lt;/code&gt;实现列表元素的两端对齐。 说穿了其实很简单，我们不妨以最常见的列表标签-&lt;code&gt;ul&lt;/code&gt;, &lt;code&gt;li&lt;/code&gt;标签举例，要实现&lt;code&gt;li&lt;/code&gt;列表的两端对齐，直接下面这点CSS代码就OK了：&lt;/p&gt;
&lt;p&gt;ul{text-align:justify;}&lt;br&gt;li{display:inline-block;}&lt;/p&gt;
&lt;p&gt;简单得让人当场吐血三升。 唯一需要注意的就是列表元素&lt;strong&gt;首尾标签留空&lt;/strong&gt;（或换行），如下图所示：&lt;br&gt;&lt;img src=&#34;http://image.zhangxinxu.com/image/blog/201103/2011-03-13_131033.png&#34; alt=&#34;标签首尾换行 张鑫旭-鑫空间-鑫生活&#34; title=&#34;标签首尾换行 张鑫旭-鑫空间-鑫生活&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://image.zhangxinxu.com/image/blog/201103/2011-03-13_131358.png&#34; alt=&#34;首尾标签留空 张鑫旭-鑫空间-鑫生活&#34; title=&#34;首尾标签留空 张鑫旭-鑫空间-鑫生活&#34;&gt;&lt;br&gt;不能够上一个标签组的结束标签与下一个标签组的其实标签连在一起，如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://image.zhangxinxu.com/image/blog/201103/2011-03-13_131708.png&#34; alt=&#34;标签不能连在一起 张鑫旭-鑫空间-鑫生活&#34; title=&#34;标签不能连在一起 张鑫旭-鑫空间-鑫生活&#34;&gt; &lt;/p&gt;
&lt;p&gt;不仅如此，对于IE8浏览器，列表元素不能处在&lt;code&gt;font-size:0&lt;/code&gt;的环境下，至少code&amp;gt;font-size:1px，因为IE8浏览器&lt;code&gt;font-size:0&lt;/code&gt;或直接把换行空格或普通空格抹掉而无法实现两端对齐效果。 ok，下面是重头戏了，纠缠不清的IE6/IE7浏览器。显然上面的&lt;code&gt;ul&lt;/code&gt;, &lt;code&gt;li&lt;/code&gt;样式组合在IE6/7浏览器下是行不通的，即使你使用hack让IE6/7下的&lt;code&gt;li&lt;/code&gt;标签有类似于&lt;code&gt;display:inline-block&lt;/code&gt;的特性也是没有作用的。那么如何才能让IE6/7浏览器也有列表元素支持&lt;code&gt;text-align:justify&lt;/code&gt;属性呢？经过我反复试验与调试，总结了两点：&lt;strong&gt;inline标签化&lt;/strong&gt;以及&lt;strong&gt;结束标签连续化&lt;/strong&gt;。 &lt;strong&gt;1. inline标签化&lt;/strong&gt; 所谓“inline标签化”就是列表元素需要使用inline水平的标签，例如&lt;code&gt;span&lt;/code&gt;, &lt;code&gt;a&lt;/code&gt;, &lt;code&gt;strong&lt;/code&gt;, &lt;code&gt;em&lt;/code&gt;等，像&lt;code&gt;li&lt;/code&gt;, &lt;code&gt;div&lt;/code&gt;这些标签就不可以。 &lt;strong&gt;2. 结束标签连续化&lt;/strong&gt; 所谓“结束标签连续化”是指列表元素及其内部标签的结束标签需要连在一起。例如下面这个就是不行的：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;span&amp;gt;
    &amp;lt;a href=&amp;quot;#&amp;quot;&amp;gt;
        &amp;lt;img src=&amp;quot;test.jpg&amp;quot; /&amp;gt;
    &amp;lt;/a&amp;gt;
    &amp;lt;span&amp;gt;描述&amp;lt;/span&amp;gt;
&amp;lt;/span&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;而应该是这个样子滴：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;span&amp;gt;
    &amp;lt;a href=&amp;quot;#&amp;quot;&amp;gt;
        &amp;lt;img src=&amp;quot;test.jpg&amp;quot; /&amp;gt;
    &amp;lt;/a&amp;gt;
    &amp;lt;span&amp;gt;描述&amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;我们已经习惯了结构化的缩进，所以上面结束标签连写看上去很不自然，有些别扭。但是，为了实现效果，这是没有办法的事情。&lt;strong&gt;注意：如果列表标签内嵌多层，则所有层级的结束标签都要连续。&lt;/strong&gt; IE6/IE7浏览器同时满足上面的&lt;strong&gt;inline标签化&lt;/strong&gt;以及&lt;strong&gt;结束标签连续化&lt;/strong&gt;，再加上先前现代浏览器下的&lt;strong&gt;首尾标签留空&lt;/strong&gt;，IE6/IE7浏览器也就能够实现列表元素的两端对齐啦！ 为了便于更直观的知道各个浏览器下实现两端对齐效果需要注意的事项，我特地制作了下表：&lt;/p&gt;
&lt;p&gt;各个浏览器实现text-align:justify下的两端对齐布局注意事项表&lt;/p&gt;
&lt;p&gt;浏览器&lt;/p&gt;
&lt;p&gt;注意事项&lt;/p&gt;
&lt;p&gt;IE6&lt;/p&gt;
&lt;p&gt;inline水平列表标签、列表结束标签连续、列表元素间换行或留空&lt;/p&gt;
&lt;p&gt;IE7&lt;/p&gt;
&lt;p&gt;inline水平列表标签、列表结束标签连续、列表元素间换行或留空&lt;/p&gt;
&lt;p&gt;IE8&lt;/p&gt;
&lt;p&gt;列表元素间换行或留空、列表元素的环境字体大小不能为0&lt;/p&gt;
&lt;p&gt;现代浏览器&lt;/p&gt;
&lt;p&gt;列表元素间换行或留空&lt;/p&gt;
&lt;p&gt;  然而，现在还有一个很悲剧的问题没有解决，就是当列表&lt;strong&gt;元素最后一行无法两端对齐&lt;/strong&gt;的悲剧。如下图所示：&lt;br&gt;  &lt;img src=&#34;http://image.zhangxinxu.com/image/blog/201103/2011-03-13_140147.png&#34; alt=&#34;text-justify下的悲剧最后一行 张鑫旭-鑫空间-鑫生活&#34; title=&#34;text-justify下的悲剧最后一行 张鑫旭-鑫空间-鑫生活&#34;&gt;&lt;br&gt;  其实这个问题很好解决的。 &lt;strong&gt;如何悲剧变喜剧？&lt;/strong&gt; 列表（或文字）要两端对齐的前提就是内容必须超过一行，所以，要解决最后一行元素无法两端对齐的文字其实很简单，就是在列表（或文字段）的最后创建一个高度为0的宽度100%的透明的inline-block的标签层就可以了，例如：&lt;/p&gt;
&lt;p&gt;.justify_fix{display:inline-block; width:100%; height:0; overflow:hidden;}&lt;/p&gt;
&lt;p&gt;如下HTML：&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;justify_fix&#34;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;例如拿先前最后一行列表悲剧的demo举例，现在在该demo列表最后添加上面类名为&lt;code&gt;justify_fix&lt;/code&gt;的&lt;code&gt;span&lt;/code&gt;元素，结果最后一行两端对齐排列了，如下图变化：&lt;br&gt;&lt;img src=&#34;http://image.zhangxinxu.com/image/blog/201103/2011-03-13_223453.png&#34; alt=&#34;末行元素也两端对齐了 张鑫旭-鑫空间-鑫生活&#34; title=&#34;末行元素也两端对齐了 张鑫旭-鑫空间-鑫生活&#34;&gt;&lt;/p&gt;
&lt;p&gt;无论您手上的是什么版本的浏览器，您可以狠狠地点击这里：&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://www.zhangxinxu.com/study/201103/inline-block-text-justify-fixed.html&#34;&gt;末行也两端对齐的美女列表demo&lt;/a&gt;&lt;br&gt;改变浏览器的宽度，您可以更直观地看出两端对齐的效果。 &lt;strong&gt;补充 on 2011-03-16：&lt;/strong&gt; 很多时候，我们希望列表的最后一行是左对齐排列的，而不是两端对齐，这时候怎么办呢？原理与上面的两端对齐一致。就是复制几个列表元素的外层标签，等宽，但高度为0，里面就是个&lt;code&gt;&amp;amp;nbsp;&lt;/code&gt;(不可缺)，复制的个数一般就是每行元素的列表个数啦，这样肯定可以保证最后一行元素一定是左对齐排列的啦！ 如下HTML代码：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;div class=&amp;quot;box&amp;quot;&amp;gt;
    &amp;lt;span class=&amp;quot;list&amp;quot;&amp;gt;&amp;lt;img src=&amp;quot;http://image.zhangxinxu.com/image/study/s/s128/mm9.jpg&amp;quot; /&amp;gt;
哇哦，美女，口水，鼻血~~~&amp;lt;/span&amp;gt;
    &amp;lt;span class=&amp;quot;list&amp;quot;&amp;gt;&amp;lt;img src=&amp;quot;http://image.zhangxinxu.com/image/study/s/s128/mm9.jpg&amp;quot; /&amp;gt;
哇哦，美女，口水，鼻血，不行了，我的小兔乱撞~~&amp;lt;/span&amp;gt;
    .
    .
    .
    &amp;lt;span class=&amp;quot;list left_fix&amp;quot;&amp;gt;&amp;amp;nbsp;&amp;lt;/span&amp;gt;
    &amp;lt;span class=&amp;quot;list left_fix&amp;quot;&amp;gt;&amp;amp;nbsp;&amp;lt;/span&amp;gt;
    &amp;lt;span class=&amp;quot;list left_fix&amp;quot;&amp;gt;&amp;amp;nbsp;&amp;lt;/span&amp;gt;
    &amp;lt;span class=&amp;quot;list left_fix&amp;quot;&amp;gt;&amp;amp;nbsp;&amp;lt;/span&amp;gt;
    &amp;lt;span class=&amp;quot;list left_fix&amp;quot;&amp;gt;&amp;amp;nbsp;&amp;lt;/span&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;上面HTML中的&lt;code&gt;left_fix&lt;/code&gt;样式如下：&lt;/p&gt;
&lt;p&gt;.left_fix{height:0; padding:0; overflow:hidden;}&lt;/p&gt;
&lt;p&gt;结果先前等宽对齐的最后三个图片就与上面元素垂直对齐且左对齐啦！（下图截自IE7浏览器）&lt;br&gt;&lt;img src=&#34;http://image.zhangxinxu.com/image/blog/201103/2011-03-16_204407.png&#34; alt=&#34;最后一行元素左对齐实现 张鑫旭-鑫空间-鑫生活&#34; title=&#34;最后一行元素左对齐实现 张鑫旭-鑫空间-鑫生活&#34;&gt;&lt;/p&gt;
&lt;p&gt;您可以狠狠地点击这里：&lt;br&gt;&lt;a href=&#34;http://www.zhangxinxu.com/study/201103/inline-block-text-justify-last-left.html&#34;&gt;最后一行元素左对齐排列demo&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;于是，综合上面所有讨论，我们就可以相对比较完美地实现列表元素在text-align:justify的两端对齐效果了。&lt;/p&gt;
&lt;h3 id=&#34;七、text-align-justify下两端对齐效果实例&#34;&gt;&lt;a href=&#34;#七、text-align-justify下两端对齐效果实例&#34; class=&#34;headerlink&#34; title=&#34;七、text-align:justify下两端对齐效果实例&#34;&gt;&lt;/a&gt;七、text-align:justify下两端对齐效果实例&lt;/h3&gt;&lt;p&gt;我们拿上面人人网热门分享处的inline-block列表布局举例。 您可以狠狠地点击这里：&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://www.zhangxinxu.com/study/201103/inline-block-text-justify-renren.html&#34;&gt;人人网热门分享列表text-justify下两端对齐demo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;效果如下图（截自IE7浏览器）：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://image.zhangxinxu.com/image/blog/201103/2011-03-13_224718.png&#34; alt=&#34;人人网热门列表justify下两端对齐效果截图 张鑫旭-鑫空间-鑫生活&#34; title=&#34;人人网热门列表justify下两端对齐效果截图 张鑫旭-鑫空间-鑫生活&#34;&gt; &lt;/p&gt;
&lt;p&gt;CSS代码如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;.video-list&amp;#123;width:540px; margin-left:auto; margin-right:auto; text-align:justify;&amp;#125; /*列表父容器*/
.text-justify-list&amp;#123;display:inline-block; width:97px; margin-bottom:15px; text-align:left; vertical-align:top;&amp;#125;/*列表元素*/

.
. /\* 完全人人网CSS代码*/
.

.justify_fix&amp;#123;display:inline-block; width:100%; height:0; overflow:hidden;&amp;#125;/*末行悲剧变喜剧*/
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;可以看到列表元素压根就没有设置垂直方向上的&lt;code&gt;margin&lt;/code&gt;或是&lt;code&gt;padding&lt;/code&gt;值，就单单一个宽度值，但是列表元素确实两端对齐，等间距排列。没有计算，没有有意去增加父容器宽度等，超简单就实现了。 比对上面提到的些注意事项，看看这个例子中的HTML代码是如何实践上面的注意事项的：&lt;br&gt;&lt;strong&gt;①inline水平标签&lt;/strong&gt; 如下截图所示：&lt;br&gt;&lt;img src=&#34;http://image.zhangxinxu.com/image/blog/201103/2011-03-13_225547.png&#34; alt=&#34;inline标签使用截图 张鑫旭-鑫空间-鑫生活&#34; title=&#34;inline标签使用截图 张鑫旭-鑫空间-鑫生活&#34;&gt; &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;②列表结束标签连续&lt;/strong&gt; 如下图所示：&lt;br&gt;&lt;img src=&#34;http://image.zhangxinxu.com/image/blog/201103/2011-03-13_225817.png&#34; alt=&#34;结束标签连续 张鑫旭-鑫空间-鑫生活&#34; title=&#34;结束标签连续 张鑫旭-鑫空间-鑫生活&#34;&gt; &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;③列表标签换行或留空&lt;/strong&gt; 如下截图所示：&lt;br&gt;&lt;img src=&#34;http://image.zhangxinxu.com/image/blog/201103/2011-03-13_230124.png&#34; alt=&#34;列表标签换行不连续截图 张鑫旭-鑫空间-鑫生活&#34; title=&#34;列表标签换行不连续截图 张鑫旭-鑫空间-鑫生活&#34;&gt; 如此，你也可以轻轻松松实现列表元素的两端对齐布局，而且不用去担心兼容性问题！！GO！大胆的去使用吧！&lt;/p&gt;
&lt;h3 id=&#34;八、一些补充的话语&#34;&gt;&lt;a href=&#34;#八、一些补充的话语&#34; class=&#34;headerlink&#34; title=&#34;八、一些补充的话语&#34;&gt;&lt;/a&gt;八、一些补充的话语&lt;/h3&gt;&lt;p&gt;首先是关于为什么IE6/IE7浏览器列表元素需使用inline水平标签，，同时结束标签需连续，这个问题我也是不知道为什么，浏览器不是我开发的，要问得去问盖茨先生了。 其次，语义化的问题。要兼顾IE6/IE7浏览器，像列表标签&lt;code&gt;ul&lt;/code&gt;, &lt;code&gt;li&lt;/code&gt;等就不能使用了，所以HTML语义上可能质量要降低了，权衡在你手。 最后，都是自己试验出来的东西，可能您有更好的方法，或者可以解释IE6/IE7下一些奇怪的行为，欢迎以评论的形式进行交流。资历有限，文中难免有表述不准确的地方，欢迎指正。 原创文章，转载请注明来自&lt;a href=&#34;http://www.zhangxinxu.com/&#34;&gt;张鑫旭-鑫空间-鑫生活&lt;/a&gt;[&lt;a href=&#34;http://www.zhangxinxu.com/&#34;&gt;http://www.zhangxinxu.com&lt;/a&gt;]&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://erik.xyz/2015/01/27/guan-yu-javascript-de-lia-ge-you-qu-de-tan-tao/</guid>
            <title>关于Javascript的俩个有趣的探讨</title>
            <link>https://erik.xyz/2015/01/27/guan-yu-javascript-de-lia-ge-you-qu-de-tan-tao/</link>
            <category>js</category>
            <category>javascript</category>
            <pubDate>Tue, 27 Jan 2015 22:56:00 +0800</pubDate>
            <description><![CDATA[ &lt;h3 id=&#34;作者-Laruence&#34;&gt;&lt;a href=&#34;#作者-Laruence&#34; class=&#34;headerlink&#34; title=&#34;作者: Laruence&#34;&gt;&lt;/a&gt;作者: &lt;a href=&#34;http://www.laruence.com&#34;&gt;Laruence&lt;/a&gt;&lt;/h3&gt;&lt;h3 id=&#34;关于事件处理函数引用的一个佐证&#34;&gt;&lt;a href=&#34;#关于事件处理函数引用的一个佐证&#34; class=&#34;headerlink&#34; title=&#34;关于事件处理函数引用的一个佐证&#34;&gt;&lt;/a&gt;关于事件处理函数引用的一个佐证&lt;/h3&gt;&lt;p&gt;之前, 我在分析Javascript的This关键字的时候, 说过, 当使用inline的方式写dom元素的事件处理函数的时候, 采用的是引用的方式. 刚好nullbyte童鞋给我提供了一个很有意思的Case:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  &amp;lt;img id=&amp;quot;foo&amp;quot; src=&amp;quot;xxx&amp;quot; onerror=&amp;quot; alert(&amp;#39;error&amp;#39;);
  &amp;#125; function foobar() &amp;#123;
  alert(&amp;#39;www.laruence.com&amp;#39;); &amp;quot; /&amp;gt;
  &amp;lt;script&amp;gt;
  alert(document.getElementById(&amp;quot;foo&amp;quot;).onerror);
  &amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;在IE下试试看.. 不过, FF和Chrome下都不行, 应该是FF和Chrome都会验证html代码的合法性.&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;Javascript正则的效率&#34;&gt;&lt;a href=&#34;#Javascript正则的效率&#34; class=&#34;headerlink&#34; title=&#34;Javascript正则的效率&#34;&gt;&lt;/a&gt;Javascript正则的效率&lt;/h3&gt;&lt;p&gt;如果你看到有人写Javascript的trim的时候采用了循环的方式,而不是正则的方式, 请不要笑. 人家这可是经验所致, 考虑如下代码的执行时间会是多少?&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;var matchs = /^(a+)+$/.exec(&amp;quot;aaaaaaaaaaaaaaaaaaaaaaaaaaaX&amp;quot;);
alert(matchs);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;告诉你吧…. 注:以下结果来自看手表估测, 但不影响时间的长度性…另外jsmore的stauren同学也验证了这一结论:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;IE8: 30秒
FF3: 28秒
号称目前最快的采用V8引擎的Chrome: 8秒.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这个结果,,,是多么的不可接受啊? 具体原因的分析, 在master regular expression里面有提到过.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;NFA和DFA的引擎是有区别的。js/perl/php/java/.net都是NFA引擎。 而DFA与NFA机制上的不同带来5个影响： 1. DFA对于文本串里的每一个字符只需扫描一次，比较快，但特性较少；NFA要翻来覆去吃字符、吐字符，速度慢，但是特性丰富，所以反而应用广泛，当今主要 的正则表达式引擎，如Perl、Ruby、Python的re模块、Java和.NET的regex库，都是NFA的。 2. 只有NFA才支持lazy和backreference（后向引用）等特性； 3. NFA急于邀功请赏，所以最左子正则式优先匹配成功，因此偶尔会错过最佳匹配结果；DFA则是“最长的左子正则式优先匹配成功”。 4. NFA缺省采用greedy量词(就是对于/.*/、/\w+/这样的“重复n”次的模式，以贪婪方式进行，尽可能匹配更多字符，直到不得以罢手为止)，NFA会优先匹配量词。 5. NFA可能会陷入递归调用的陷阱而表现得性能极差。 backtracking（回朔） 当NFA发现自己吃多了，一个一个往回吐，边吐边找匹配，这个过程叫做backtracking。由于存在这个过程，在NFA匹配过程中，特别是在编写不合理的正则式匹配过程中，文本被反复扫描，效率损失是不小的。明白这个道理，对于写出高效的正则表达式很有帮助。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;而对于Javascript中的正则来说, 应该是优先匹配量词, 导致了很深的递归, 形成了性能问题…&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://erik.xyz/2015/01/13/runjs-chang-jian-wen-ti/</guid>
            <title>RunJS 常见问题</title>
            <link>https://erik.xyz/2015/01/13/runjs-chang-jian-wen-ti/</link>
            <category>js</category>
            <category>js编辑</category>
            <category>runjs</category>
            <category>在线编辑</category>
            <pubDate>Tue, 13 Jan 2015 23:26:00 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;摘自runjs&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;h3 id=&#34;RunJS-是什么？&#34;&gt;&lt;a href=&#34;#RunJS-是什么？&#34; class=&#34;headerlink&#34; title=&#34;RunJS 是什么？&#34;&gt;&lt;/a&gt;RunJS 是什么？&lt;/h3&gt;&lt;p&gt;RunJS 是一个在线的 HTML、Javascript、CSS 等 web 前端代码的编辑分享平台，拥有实时预览、高亮显示、代码格式化等功能，我们提供 OSChina、微博、qq、github、google、yahoo、hotmail这七种登录方式，你只需要有七种任意一个帐号就可以点击右上角的登 录按钮来立即体验RunJS。 &lt;img src=&#34;http://runjs.cn/img/help/index.png&#34; alt=&#34;&#34;&gt;&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;h3 id=&#34;如何在-RunJS-上创建代码？&#34;&gt;&lt;a href=&#34;#如何在-RunJS-上创建代码？&#34; class=&#34;headerlink&#34; title=&#34;如何在 RunJS 上创建代码？&#34;&gt;&lt;/a&gt;如何在 RunJS 上创建代码？&lt;/h3&gt;&lt;p&gt;可以在 RunJS 的首页点击编辑器进入编辑器界面，登录后点击左边栏右上角的加号来添加代码。 &lt;img src=&#34;http://runjs.cn/img/help/create.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;h3 id=&#34;Fork-是什么-如何-Fork-别人的代码？&#34;&gt;&lt;a href=&#34;#Fork-是什么-如何-Fork-别人的代码？&#34; class=&#34;headerlink&#34; title=&#34;Fork 是什么?如何 Fork 别人的代码？&#34;&gt;&lt;/a&gt;Fork 是什么?如何 Fork 别人的代码？&lt;/h3&gt;&lt;p&gt;Fork 就是分支的意思，如果你熟悉 Github，想必你对 Fork 不会陌生，这里的 Fork 也一样，你可以通过在代码详情页面的代码展示框点击右上角的 Fork 按钮，或者在查看源码页面点击左上角的 Fork 按钮来 Fork 别人的代码，这样你就拥有了当前代码的一份拷贝，可以自行维护。 &lt;img src=&#34;http://runjs.cn/img/help/fork.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;h3 id=&#34;如何上传图片、js、css-等资源文件&#34;&gt;&lt;a href=&#34;#如何上传图片、js、css-等资源文件&#34; class=&#34;headerlink&#34; title=&#34;如何上传图片、js、css 等资源文件?&#34;&gt;&lt;/a&gt;如何上传图片、js、css 等资源文件?&lt;/h3&gt;&lt;p&gt;在编辑器页面，你可以在左边栏下方的资源文件中看到你上传的资源文件，并可以在这里进行上传、删除、插入等操作。 &lt;img src=&#34;http://runjs.cn/img/help/upload.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;h3 id=&#34;如何使用一些第三方-js-库？&#34;&gt;&lt;a href=&#34;#如何使用一些第三方-js-库？&#34; class=&#34;headerlink&#34; title=&#34;如何使用一些第三方 js 库？&#34;&gt;&lt;/a&gt;如何使用一些第三方 js 库？&lt;/h3&gt;&lt;p&gt;RunJS 已经提供了大量的常见 js 库（在 HTML 编辑器上方可以快速引用），如果您需要的库不在这其中，可以告诉我们，或者自行上传文件进行引用。 &lt;img src=&#34;http://runjs.cn/img/help/jslib.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;h3 id=&#34;如何在代码中做-Ajax-调用的演示？&#34;&gt;&lt;a href=&#34;#如何在代码中做-Ajax-调用的演示？&#34; class=&#34;headerlink&#34; title=&#34;如何在代码中做 Ajax 调用的演示？&#34;&gt;&lt;/a&gt;如何在代码中做 Ajax 调用的演示？&lt;/h3&gt;&lt;p&gt;RunJS 提供了 Ajax 的 Echo API，可以方便用户测试 Ajax 功能，&lt;a href=&#34;http://www.oschina.net/question/82993_78609&#34;&gt;点击这里&lt;/a&gt;查看详细使用方法。 &lt;img src=&#34;http://runjs.cn/img/help/ajax.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;h3 id=&#34;如何在外站嵌入-RunJS-的代码-gist-？&#34;&gt;&lt;a href=&#34;#如何在外站嵌入-RunJS-的代码-gist-？&#34; class=&#34;headerlink&#34; title=&#34;如何在外站嵌入 RunJS 的代码(gist)？&#34;&gt;&lt;/a&gt;如何在外站嵌入 RunJS 的代码(gist)？&lt;/h3&gt;&lt;p&gt;RunJS 推出的一个叫做 Gist 的小功能，假如你在 RunJS 上写好了代码，你可以通过在你自己的网站中加入如下 script 标签来引用该代码，代码将被语法着色，另外你还可以选择不同的主题样式。 使用办法：&lt;script src=&#39;http://runjs.cn/gist/xxxxxxxx/yyyy/zzzzzz&#39;&gt;&lt;/script&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;xxxxxxxx(代码标识符)：使用代码的标识符替换掉，代码标识符可以在代码详情页和编辑器页面的 URL 中找到&lt;/li&gt;
&lt;li&gt;yyyy(代码类型)：有(js、css、html、all)四种方式供选择，可以根据需要来定制。&lt;/li&gt;
&lt;li&gt;zzzzzz(主题样式)：有(default、eclipse、django、emacs、fadetogrey、midnight、rdark)这七种主题样式可供选择，默认为default样式。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;注：URL中所有字母均为小写。例如，在这个页面里我嵌入如下代码： &lt;script src=&#39;http://runjs.cn/gist/gew5wreh/all/rdark&#39;&gt;&lt;/script&gt; 将出现如下效果：&lt;/p&gt;
&lt;p&gt;Echo Ajax demo : &lt;a href=&#34;http://runjs.cn/detail/gew5wreh&#34;&gt;在线演示&lt;/a&gt;&lt;a href=&#34;http://runjs.cn/code/gew5wreh&#34;&gt;查看源码&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;HTML:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;!DOCTYPE html&amp;gt;

 &amp;lt;html&amp;gt;

 &amp;lt;head&amp;gt;

 &amp;lt;meta http-equiv=&amp;quot;Content-Type&amp;quot; content=&amp;quot;text/html; charset=UTF-8&amp;quot;&amp;gt;

 &amp;lt;title&amp;gt;RunJS&amp;lt;/title&amp;gt;

 &amp;lt;script class=&amp;quot;jqueryform library&amp;quot; src=&amp;quot;/js/sandbox/jquery/jquery-1.8.2.min.js&amp;quot; type=&amp;quot;text/javascript&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;

 &amp;lt;script class=&amp;quot;jqueryform library&amp;quot; src=&amp;quot;/js/sandbox/jquery-plugins/jquery.form-2.82.js&amp;quot; type=&amp;quot;text/javascript&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;

 &amp;lt;/head&amp;gt;

 &amp;lt;body&amp;gt;

 &amp;lt;div class=&amp;quot;white&amp;quot;&amp;gt;RunJS echo 测试：&amp;lt;/div&amp;gt;&amp;lt;br&amp;gt;

 &amp;lt;form action=&amp;quot;/action/echo/json&amp;quot; method=&amp;quot;post&amp;quot; id=&amp;quot;form&amp;quot;&amp;gt;

 &amp;lt;label class=&amp;quot;white&amp;quot;&amp;gt;参数1:&amp;lt;/label&amp;gt;&amp;lt;input name=&amp;quot;p1&amp;quot;/&amp;gt;&amp;lt;br&amp;gt;

 &amp;lt;label class=&amp;quot;white&amp;quot;&amp;gt;参数2:&amp;lt;/label&amp;gt;&amp;lt;input name=&amp;quot;p1&amp;quot;/&amp;gt;&amp;lt;br&amp;gt;

 &amp;lt;label class=&amp;quot;white&amp;quot;&amp;gt;参数3:&amp;lt;/label&amp;gt;&amp;lt;input name=&amp;quot;p2&amp;quot;/&amp;gt;&amp;lt;br&amp;gt;

 &amp;lt;label class=&amp;quot;white&amp;quot;&amp;gt;参数4:&amp;lt;/label&amp;gt;&amp;lt;input name=&amp;quot;p3&amp;quot;/&amp;gt;&amp;lt;br&amp;gt;

 &amp;lt;label class=&amp;quot;white&amp;quot;&amp;gt;参数5:&amp;lt;/label&amp;gt;&amp;lt;input name=&amp;quot;name&amp;quot;/&amp;gt;&amp;lt;br&amp;gt;

 &amp;lt;input type=&amp;quot;submit&amp;quot;/&amp;gt;

 &amp;lt;/form&amp;gt; 

 &amp;lt;div id=&amp;quot;result&amp;quot; class=&amp;quot;white&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;

 &amp;lt;/body&amp;gt;

 &amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;JavaScript :&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$(document).ready(function() &amp;#123;

    $(&amp;quot;#form&amp;quot;).ajaxForm(&amp;#123;

    success: function(m) &amp;#123;

    $(&amp;quot;#result&amp;quot;).html(m);

    &amp;#125;

    &amp;#125;);

    &amp;#125;)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;CSS :&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; .white&amp;#123;

    color:white;

    &amp;#125;

    body&amp;#123;

    background-color:black;

    &amp;#125;
&lt;/code&gt;&lt;/pre&gt; ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://erik.xyz/2015/01/07/shen-ru-li-jie-javascript-ding-shi-ji-zhi/</guid>
            <title>深入理解JavaScript定时机制</title>
            <link>https://erik.xyz/2015/01/07/shen-ru-li-jie-javascript-ding-shi-ji-zhi/</link>
            <category>js</category>
            <category>javascript</category>
            <pubDate>Wed, 07 Jan 2015 22:38:00 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;容易欺骗别人感情的JavaScript定时器 JavaScript的setTimeout与setInterval是两个很容易欺骗别人感情的方法,因为我们开始常常以为调用了就会按既定的方式执行, 我想不少人都深有同感, 例如&lt;br&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;setTimeout(function() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    alert(&amp;#x27;你好!&amp;#x27;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;, 0);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;setInterval(callbackFunction, 100);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;认为setTimeout中的问候方法会立即被执行,因为这并不是凭空而说,而是JavaScript API文档明确定义第二个参数意义为隔多少毫秒后,回调方法就会被执行. 这里设成0毫秒,理所当然就立即被执行了. 同理对setInterval的callbackFunction方法每间隔100毫秒就立即被执行深信不疑! 但随着JavaScript应用开发经验不断的增加和丰富,有一天你发现了一段怪异的代码而百思不得其解:&lt;br&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;div.onclick = function()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        setTimeout(function() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                document.getElementById(&amp;#x27;inputField&amp;#x27;).focus();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;, 0);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;既然是0毫秒后执行,那么还用setTimeout干什么, 此刻, 坚定的信念已开始动摇. 直到最后某一天 , 你不小心写了一段糟糕的代码:&lt;br&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;setTimeout(function() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        while (true) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;, 100);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;setTimeout(function() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        alert(&amp;#x27;你好!&amp;#x27;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;, 200);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;setInterval(callbackFunction, 200);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;第一行代码进入了死循环,但不久你就会发现,第二,第三行并不是预料中的事情,alert问候未见出现,callbacKFunction也杳无音讯! 这时你彻底迷惘了,这种情景是难以接受的,因为改变长久以来既定的认知去接受新思想的过程是痛苦的,但情事实摆在眼前,对JavaScript真理的探求并不会因为痛苦而停止,下面让我们来展开JavaScript线程和定时器探索之旅! 拔开云雾见月明 出现上面所有误区的最主要一个原因是:潜意识中认为,JavaScript引擎有多个线程在执行,JavaScript的定时器回调函数是异步执行的. 而事实上的,JavaScript使用了障眼法,在多数时候骗过了我们的眼睛,这里背光得澄清一个事实: JavaScript引擎是单线程运行的,浏览器无论在什么时候都只且只有一个线程在运行JavaScript程序. JavaScript引擎用单线程运行也是有意义的,单线程不必理会线程同步这些复杂的问题,问题得到简化. 那么单线程的JavaScript引擎是怎么配合浏览器内核处理这些定时器和响应浏览器事件的呢? 下面结合浏览器内核处理方式简单说明. 浏览器内核实现允许多个线程异步执行,这些线程在内核制控下相互配合以保持同步.假如某一浏览器内核的实现至少有三个常驻线 程:javascript引擎线程,界面渲染线程,浏览器事件触发线程,除些以外,也有一些执行完就终止的线程,如Http请求线程,这些异步线程都会产 生不同的异步事件,下面通过一个图来阐明单线程的JavaScript引擎与另外那些线程是怎样互动通信的.虽然每个浏览器内核实现细节不同,但这其中的 调用原理都是大同小异. &lt;a href=&#34;http://laruence-wordpress.stor.sinaapp.com/uploads/jstimer.jpg&#34;&gt;&lt;img src=&#34;http://laruence-wordpress.stor.sinaapp.com/uploads/jstimer.jpg&#34; alt=&#34;Js线程图示&#34; title=&#34;jstimer&#34;&gt;&lt;/a&gt; 由图可看出,浏览器中的JavaScript引擎是基于事件驱动的,这里的事件可看作是浏览器派给它的各种任务,这些任务可以源自 JavaScript引擎当前执行的代码块,如调用setTimeout添加一个任务,也可来自浏览器内核的其它线程,如界面元素鼠标点击事件,定时触发 器时间到达通知,异步请求状态变更通知等.从代码角度看来任务实体就是各种回调函数,JavaScript引擎一直等待着任务队列中任务的到来.由于单线 程关系,这些任务得进行排队,一个接着一个被引擎处理. 上图t1-t2..tn表示不同的时间点,tn下面对应的小方块代表该时间点的任务,假设现在是t1时刻,引擎运行在t1对应的任务方块代码内,在这个时间点内,我们来描述一下浏览器内核其它线程的状态. t1时刻: GUI渲染线程: 该线程负责渲染浏览器界面HTML元素,当界面需要重绘(Repaint)或由于某种操作引发回流(reflow)时,该线程就会执行.本文虽然重 点解释JavaScript定时机制,但这时有必要说说渲染线程,因为该线程与JavaScript引擎线程是互斥的,这容易理解,因为 JavaScript脚本是可操纵DOM元素,在修改这些元素属性同时渲染界面,那么渲染线程前后获得的元素数据就可能不一致了. 在JavaScript引擎运行脚本期间,浏览器渲染线程都是处于挂起状态的,也就是说被”冻结”了. 所以,在脚本中执行对界面进行更新操作,如添加结点,删除结点或改变结点的外观等更新并不会立即体现出来,这些操作将保存在一个队列中,待JavaScript引擎空闲时才有机会渲染出来. GUI事件触发线程: JavaScript脚本的执行不影响html元素事件的触发,在t1时间段内,首先是用户点击了一个鼠标键,点击被浏览器事件触发线程捕捉后形成 一个鼠标点击事件,由图可知,对于JavaScript引擎线程来说,这事件是由其它线程异步传到任务队列尾的,由于引擎正在处理t1时的任务,这个鼠标 点击事件正在等待处理. 定时触发线程: 注意这里的浏览器模型定时计数器并不是由JavaScript引擎计数的,因为JavaScript引擎是单线程的,如果处于阻塞线程状态就计不了时,它必须依赖外部来计时并触发定时,所以队列中的定时事件也是异步事件. 由图可知,在这t1的时间段内,继鼠标点击事件触发后,先前已设置的setTimeout定时也到达了,此刻对JavaScript引擎来说,定时触发线程产生了一个异步定时事件并放到任务队列中, 该事件被排到点击事件回调之后,等待处理. 同理, 还是在t1时间段内,接下来某个setInterval定时器也被添加了,由于是间隔定时,在t1段内连续被触发了两次,这两个事件被排到队尾等待处理. 可见,假如时间段t1非常长,远大于setInterval的定时间隔,那么定时触发线程就会源源不断的产生异步定时事件并放到任务队列尾而不管它 们是否已被处理,但一旦t1和最先的定时事件前面的任务已处理完,这些排列中的定时事件就依次不间断的被执行,这是因为,对于JavaScript引擎来 说,在处理队列中的各任务处理方式都是一样的,只是处理的次序不同而已. t1过后,也就是说当前处理的任务已返回,JavaScript引擎会检查任务队列,发现当前队列非空,就取出t2下面对应的任务执行,其它时间依此类推,由此看来: 如果队列非空,引擎就从队列头取出一个任务,直到该任务处理完,即返回后引擎接着运行下一个任务,在任务没返回前队列中的其它任务是没法被执行的. 相信您现在已经很清楚JavaScript是否可多线程,也了解理解JavaScript定时器运行机制了,下面我们来对一些案例进行分析: 案例1:setTimeout与setInterval&lt;br&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;setTimeout(function() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        /\* 代码块... */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        setTimeout(arguments.callee, 10);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;, 10);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;setInterval(function()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        /*代码块... */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;, 10);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;这两段代码看一起效果一样,其实非也,第一段中回调函数内的setTimeout是JavaScript引擎执行后再设置新的setTimeout 定时, 假定上一个回调处理完到下一个回调开始处理为一个时间间隔,理论两个setTimeout回调执行时间间隔&amp;gt;=10ms .第二段自setInterval设置定时后,定时触发线程就会源源不断的每隔十秒产生异步定时事件并放到任务队列尾,理论上两个setInterval 回调执行时间间隔&amp;lt;=10. 案例2:ajax异步请求是否真的异步? 很多同学朋友搞不清楚,既然说JavaScript是单线程运行的,那么XMLHttpRequest在连接后是否真的异步? 其实请求确实是异步的,不过这请求是由浏览器新开一个线程请求(参见上图),当请求的状态变更时,如果先前已设置回调,这异步线程就产生状态变更事件放到 JavaScript引擎的处理队列中等待处理,当任务被处理时,JavaScript引擎始终是单线程运行回调函数,具体点即还是单线程运行 onreadystatechange所设置的函数. 转帖地址:&lt;a href=&#34;http://www.9demo.com/archives/341&#34;&gt;http://www.9demo.com/archives/341&lt;/a&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://erik.xyz/2015/01/05/javascript-yuan-xing-lian-he-yuan-xing-de-yi-ge-wu-qu/</guid>
            <title>Javascript原型链和原型的一个误区</title>
            <link>https://erik.xyz/2015/01/05/javascript-yuan-xing-lian-he-yuan-xing-de-yi-ge-wu-qu/</link>
            <category>js</category>
            <category>javascript</category>
            <pubDate>Mon, 05 Jan 2015 21:45:00 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;作者: &lt;a href=&#34;http://www.laruence.com&#34;&gt;Laruence&lt;/a&gt; 之前我对Javascript的原型链中, 原型继承与标识符查找有些迷惑, 如, 如下的代码:&lt;br&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;function Foo() &amp;#123;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;var foo = new Foo();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Foo.prototype.label = &amp;quot;laruence&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;alert(foo.label); //output: laruence&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;alert(Foo.label);//output: undefined&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;&lt;br&gt;今天看到了如下这个图:&lt;br&gt;&lt;a href=&#34;http://laruence-wordpress.stor.sinaapp.com/uploads/javascript_object_layout.jpg&#34;&gt;&lt;img src=&#34;http://laruence-wordpress.stor.sinaapp.com/uploads/javascript_object_layout.jpg&#34; alt=&#34;Javascript object layout&#34; title=&#34;javascript_object_layout&#34;&gt;&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;另外, 在&lt;a href=&#34;http://www.mollypages.org/misc/js.mp&#34;&gt;Javascript Object Hierarchy&lt;/a&gt;看到:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The prototype is only used for properties inherited by objects/instances created by that function. The function itself does not use the associated prototype.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;也就是说, 函数对象的prototype并不作用于原型链查找过程中, 今天在firefox下发现(因为firefox通过__proto__暴露了[[prototype]]), 真正参与标识符查找的是函数对象的__proto__,&lt;br&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;function Foo() &amp;#123;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;var foo = new Foo();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Foo.\_\_proto\_\_.label = &amp;quot;laruence&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;alert(Foo.label); //output: laruence&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;alert(foo.label);//output: undefined&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;而, 显然的:&lt;br&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;function Foo() &amp;#123;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;alert(Foo.\_\_proto\_\_ === Foo.prototype); //output: false&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;另外, 也解释了,&lt;br&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt; alert(Object.forEach); // undefined&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Function.prototype.forEach = function(object, block, context) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     for (var key in object) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;         if (typeof this.prototype\[key\] == &amp;quot;undefined&amp;quot;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;             block.call(context, object\[key\], key, object);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;         &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; alert(Object.forEach);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; alert(Function.forEach);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; alert(Object.forEach === Function.forEach); // true&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://erik.xyz/2015/01/03/li-yong-flash-wan-mei-jie-jue-javascript-he-ajax-kua-yu-http-post-get-biao-dan-qing-qiu/</guid>
            <title>利用 Flash 完美解决 JavaScript 和 AJAX 跨域 HTTP POST/GET 表单请求</title>
            <link>https://erik.xyz/2015/01/03/li-yong-flash-wan-mei-jie-jue-javascript-he-ajax-kua-yu-http-post-get-biao-dan-qing-qiu/</link>
            <category>js</category>
            <category>php</category>
            <category>flash</category>
            <category>表单</category>
            <pubDate>Sat, 03 Jan 2015 21:19:00 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;[ 作者：张宴] 最近的一个项目中，需要通过 JavaScript 提交表单数据到另一个域名下的PHP接口（因为数据较大，需要HTTP POST方式提交），并获取PHP接口的返回值，在页面无刷新、无跳转的情况下，更新div标签内的内容。 浏览器出于安全考虑，是不允许JavaScript代码进行跨域操作。JavaScript 和 AJAX 跨域访问分为两大类，一是本域和子域的交互，二是本域和其他域的交互。 一、本域和子域的交互：&lt;a href=&#34;http://www.zyan.cc&#34;&gt;www.zyan.cc&lt;/a&gt; 和 blog.zyan.cc 二、本域和其他域的交互：blog.zyan.cc 和 api.bz 本域和子域的交互，可以通过iframe设置两个域名document.domain = “zyan.cc”，实现统一zyan.cc域下的跨域访问。 本域和其他域的交互，可以通过iframe、代理、JS创建动态脚本等几种方法来实现，&lt;a href=&#34;http://www.phpchina.com/html/48/n-33848.html&#34;&gt;这里有篇文章对几种方法作了简要的介绍&lt;/a&gt;。 iframe、JS创建动态脚本这两种方法，需要开发者能控制两个域，两端都要编写相应的代码，非常麻烦。在本域服务器上用PHP写个代理中转程序，让 本域PHP程序去读取远程其他域的数据再返回给自己，是常用的方法。但是，在本域“前端是CDN或Squid缓存服务器，后端才是PHP应用程序服务器” 的系统架构下，穿透CDN或Squid去访问不能被缓存的PHP代理中转程序，效率是很低的。&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;国外有人尝试用 Flash 做 JavaScript 和 AJAX 跨域访问中转，无疑是一个好方法。JavaScript 将数据提交给本域下的 Flash，通过 Flash 中转去访问其他域的接口，条件只需要其他域的根目录下有一个crossdomain.xml文件，文件中设置允许所有域名或允许本域访问即可。很多网站的 API域名都提供了crossdomain.xml文件。 例如： 1、新浪博客的crossdomain.xml文件（&lt;a href=&#34;http://blog.sina.com.cn/crossdomain.xml&#34;&gt;http://blog.sina.com.cn/crossdomain.xml&lt;/a&gt;）设置了允许所有域名访问； 2、饭否API的crossdomain.xml文件（&lt;a href=&#34;http://api.fanfou.com/crossdomain.xml&#34;&gt;http://api.fanfou.com/crossdomain.xml&lt;/a&gt;）设置了允许所有域名访问； 3、校内网API的crossdomain.xml文件（&lt;a href=&#34;http://api.xiaonei.com/crossdomain.xml&#34;&gt;http://api.xiaonei.com/crossdomain.xml&lt;/a&gt;）设置了允许所有域名访问； 4、优酷网的crossdomain.xml文件（&lt;a href=&#34;http://www.youku.com/crossdomain.xml&#34;&gt;http://www.youku.com/crossdomain.xml&lt;/a&gt;）设置了允许所有域名访问； 5、土豆网的crossdomain.xml文件（&lt;a href=&#34;http://www.tudou.com/crossdomain.xml&#34;&gt;http://www.tudou.com/crossdomain.xml&lt;/a&gt;）设置了允许所有域名访问； 6、逍遥视频的crossdomain.xml文件（&lt;a href=&#34;http://v.xoyo.com/crossdomain.xml&#34;&gt;http://v.xoyo.com/crossdomain.xml&lt;/a&gt;）设置了只允许*.xoyo.com域名访问； 7、网易的crossdomain.xml文件（&lt;a href=&#34;http://www.163.com/crossdomain.xml&#34;&gt;http://www.163.com/crossdomain.xml&lt;/a&gt;）设置了只允许tech.163.com、sports.163.com等几个域名访问。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;本人在“&lt;a href=&#34;http://blog.monstuff.com/archives/000280.html&#34;&gt;Cross-domain AJAX using Flash&lt;/a&gt;”的基础上，增加了对表单进行智能处理的功能，封装了一个JavaScript包：AJAXCDR。通过 AJAXCDR，即可轻松地解决 JavaScript 和 AJAX 跨域 HTTP POST/GET 表单请求，支持IE、Firefox、谷歌Chrome等多种浏览器。 AJAXCDR 拥有两个文件：ajaxcdr.js 和 ajaxcdr.swf，AJAXCDR 拥有一个 JavaScript 函数 AjaxCrossDomainRequest() 和一个全局变量 AjaxCrossDomainResponse。 &lt;strong&gt;一、AJAXCDR 下载：&lt;/strong&gt; 　　&lt;a href=&#34;http://blog.zyan.cc/demo/ajaxcdr/ajaxcdr-1.0.zip&#34;&gt;http://blog.zyan.cc/demo/ajaxcdr/ajaxcdr-1.0.zip&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://zyan.cc/template/RuiPai/images/download.gif&#34; alt=&#34;&#34;&gt;下载文件&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://blog.zyan.cc/demo/ajaxcdr/ajaxcdr-1.0.zip&#34;&gt;点击这里下载文件&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;注意：请编辑ajaxcdr.js，查找“/demo/ajaxcdr/ajaxcdr.swf”，将这段Flash文件路径换成您的路径。 &lt;strong&gt;二、AJAXCDR 函数说明：&lt;/strong&gt; &lt;strong&gt;1、JavaScript函数：&lt;/strong&gt; AjaxCrossDomainRequest(URL, Method, FormName, CallBack); &lt;strong&gt;参数说明：&lt;/strong&gt; URL：需要访问的URL地址，相当于表单的action=的值。 Method：方法，本函数支持POST和GET方法，相当于表单的method=的值。 FormName：表单名称，相当于表单的name=的值。 CallBack：回调函数，请求完成后，回调用户的一个函数，用户可以在该函数内对返回值进行处理。 &lt;strong&gt;2、JavaScript全局变量：&lt;/strong&gt; AjaxCrossDomainResponse 当用户调用AjaxCrossDomainRequest()函数完成 HTTP POST/GET 请求后，该函数会把服务器端返回的数据写入到AjaxCrossDomainResponse变量中，您可以通过 AjaxCrossDomainResponse变量获取返回值。 &lt;strong&gt;三、AJAXCDR 应用实例：&lt;/strong&gt; &lt;strong&gt;1、实例一（简单演示）：&lt;/strong&gt; 演示地址： &lt;a href=&#34;http://blog.zyan.cc/demo/ajaxcdr/demo1.html&#34;&gt;http://blog.zyan.cc/demo/ajaxcdr/demo1.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://zyan.cc/#&#34;&gt;view plain&lt;/a&gt;&lt;a href=&#34;http://zyan.cc/#&#34;&gt;print&lt;/a&gt;&lt;a href=&#34;http://zyan.cc/#&#34;&gt;?&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;form name=&amp;quot;cross_domain_demo&amp;quot;&amp;gt;
&amp;lt;input name=&amp;quot;title&amp;quot; type=&amp;quot;text&amp;quot; value=&amp;quot;测试数据&amp;quot;&amp;gt;
&amp;lt;/form&amp;gt;

&amp;lt;a href=&amp;quot;javascript:AjaxCrossDomainRequest(&amp;#39;http://api.bz/ajaxcdr/echo.php&amp;#39;, &amp;#39;POST&amp;#39;, &amp;#39;cross_domain_demo&amp;#39;, &amp;#39;mycallback()&amp;#39;);&amp;quot;&amp;gt;提交&amp;lt;/a&amp;gt;

&amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;gt;
function mycallback()&amp;#123;
    alert(AjaxCrossDomainResponse);
&amp;#125;
&amp;lt;/script&amp;gt;

&amp;lt;script type=&amp;quot;text/javascript&amp;quot; src=&amp;quot;/demo/ajaxcdr/ajaxcdr.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;echo.php 源代码为：&lt;a href=&#34;http://api.bz/ajaxcdr/echo.txt&#34;&gt;http://api.bz/ajaxcdr/echo.txt&lt;/a&gt; crossdomain.xml 文件为：&lt;a href=&#34;http://api.bz/crossdomain.xml&#34;&gt;http://api.bz/crossdomain.xml&lt;/a&gt; &lt;strong&gt;2、实例二（复杂表单演示）：&lt;/strong&gt; 演示地址： &lt;a href=&#34;http://blog.zyan.cc/demo/ajaxcdr/demo2.html&#34;&gt;http://blog.zyan.cc/demo/ajaxcdr/demo2.html&lt;/a&gt;&lt;/p&gt;
&lt;html&gt; &lt;head&gt; &lt;title&gt;Ajax 跨域 HTTP POST/GET 访问请求演示：Ajax Cross Domain HTTP POST/GET Request Demo&lt;/title&gt; &lt;meta http-equiv=&#34;Content-Type&#34; content=&#34;text/html; charset=utf-8&#34;&gt; &lt;style type=&#34;text/css&#34;&gt; &lt;!-- body,td,th { font-size: 14px; } --&gt; &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;form name=&#34;cross\_domain\_demo&#34;&gt; &lt;table width=&#34;600&#34; border=&#34;1&#34;&gt; &lt;tr&gt; &lt;td colspan=&#34;2&#34; align=&#34;center&#34; valign=&#34;top&#34;&gt;&lt;strong&gt;Ajax 跨域 HTTP POST/GET 访问请求演示（鼠标右键查看HTML源代码）&lt;/strong&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td colspan=&#34;2&#34; align=&#34;center&#34; valign=&#34;top&#34;&gt;函数说明与下载地址：&lt;a href=&#34;http://blog.zyan.cc/ajaxcdr/&#34; target=&#34;_blank&#34;&gt;http://blog.zyan.cc/ajaxcdr/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td align=&#34;right&#34; valign=&#34;top&#34;&gt;username&lt;/td&gt; &lt;td&gt;&lt;input name=&#34;title&#34; type=&#34;text&#34; value=&#34;用户名&#34;&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td align=&#34;right&#34; valign=&#34;top&#34;&gt;password&lt;/td&gt; &lt;td&gt;&lt;input name=&#34;password&#34; type=&#34;password&#34; value=&#34;123456&#34;&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td align=&#34;right&#34; valign=&#34;top&#34;&gt;content&lt;/td&gt; &lt;td&gt;&lt;textarea name=&#34;content&#34; cols=&#34;58&#34; rows=&#34;5&#34;&gt;文本区域值&lt;/textarea&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td align=&#34;right&#34; valign=&#34;top&#34;&gt;city&lt;/td&gt; &lt;td&gt; &lt;select name=&#34;city&#34;&gt; &lt;option value=&#34;北京&#34;&gt;北京&lt;/option&gt; &lt;option value=&#34;上海&#34;&gt;上海&lt;/option&gt; &lt;option value=&#34;深圳&#34;&gt;深圳&lt;/option&gt; &lt;/select&gt;  &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td align=&#34;right&#34; valign=&#34;top&#34;&gt;interest&lt;/td&gt; &lt;td&gt; &lt;select name=&#34;interest\[\]&#34; multiple&gt; &lt;option value=&#34;玩游戏&#34;&gt;玩游戏&lt;/option&gt; &lt;option value=&#34;踢足球&#34;&gt;踢足球&lt;/option&gt; &lt;option value=&#34;看书&#34;&gt;看书&lt;/option&gt; &lt;option value=&#34;旅游&#34;&gt;旅游&lt;/option&gt; &lt;/select&gt;  &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td align=&#34;right&#34; valign=&#34;top&#34;&gt;gender&lt;/td&gt; &lt;td&gt; &lt;input type=&#34;radio&#34; name=&#34;gender&#34; value=&#34;男&#34;&gt;男 &lt;input type=&#34;radio&#34; name=&#34;gender&#34; value=&#34;女&#34; &gt;女 &lt;input type=&#34;radio&#34; name=&#34;gender&#34; value=&#34;未知&#34; checked&gt;未知  &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td align=&#34;right&#34; valign=&#34;top&#34;&gt;grade&lt;/td&gt; &lt;td&gt; &lt;input type=&#34;checkbox&#34; name=&#34;grade\[\]&#34; value=&#34;等级一&#34;&gt;等级一 &lt;input type=&#34;checkbox&#34; name=&#34;grade\[\]&#34; value=&#34;等级二&#34;&gt;等级二 &lt;input type=&#34;checkbox&#34; name=&#34;grade\[\]&#34; value=&#34;等级三&#34;&gt;等级三 &lt;input type=&#34;checkbox&#34; name=&#34;grade\[\]&#34; value=&#34;等级四&#34;&gt;等级四  &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td align=&#34;right&#34; valign=&#34;top&#34;&gt;publish&lt;/td&gt; &lt;td&gt;&lt;input type=&#34;checkbox&#34; name=&#34;publish&#34; value=&#34;发布&#34;&gt;发布&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td align=&#34;right&#34; valign=&#34;top&#34;&gt;&amp;nbsp;&lt;/td&gt; &lt;td&gt; &lt;a href=&#34;javascript:AjaxCrossDomainRequest(&#39;http://api.bz/ajaxcdr/echo.php&#39;, &#39;POST&#39;, &#39;cross\_domain\_demo&#39;, &#39;mycallback(\\&#39;参数①\\&#39;, \\&#39;参数②\\&#39;, myparam)&#39;);&#34;&gt;&lt;img src=&#34;post\_button.gif&#34; width=&#34;100&#34; height=&#34;24&#34; align=&#34;absmiddle&#34; border=&#34;0&#34;&gt;&lt;/a&gt; &amp;nbsp;&amp;nbsp; &lt;button onClick=&#34;AjaxCrossDomainRequest(&#39;http://api.bz/ajaxcdr/echo.php&#39;, &#39;GET&#39;, &#39;cross\_domain\_demo&#39;, &#39;mycallback(\\&#39;参数①\\&#39;, \\&#39;参数②\\&#39;, myparam)&#39;); return false;&#34;&gt;GET方式提交&lt;/button&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; &lt;/form&gt; &lt;table width=&#34;600&#34; border=&#34;1&#34;&gt; &lt;tr&gt; &lt;td&gt;JavaScript POST/GET 跨域提交信息到：http://api.bz/ajaxcdr/echo.php （&lt;a href=&#34;http://api.bz/ajaxcdr/echo.txt&#34; target=&#34;\_blank&#34;&gt;源代码&lt;/a&gt;） &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;strong&gt;api.bz服务器端返回信息：&lt;/strong&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;div id=&#34;return\_info&#34;&gt;&lt;/div&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/table&gt;&lt;script type=&#34;text/javascript&#34;&gt; var myparam = &#34;参数③&#34;; function mycallback(param1, param2, param3){ //提示：AjaxCrossDomainResponse是一个全局变量，它的值为远程服务器的返回值。 document.getElementById(&#39;return\_info&#39;).innerHTML = &#34;&lt;pre&gt;&#34; + param1 + param2 + param3 + &#34;&lt;BR&gt;&#34; + AjaxCrossDomainResponse + &#34;&lt;/pre&gt;&#34;; } &lt;/script&gt; &lt;script type=&#34;text/javascript&#34; src=&#34;/demo/ajaxcdr/ajaxcdr.js&#34;&gt;&lt;/script&gt; &lt;/body&gt; &lt;/html&gt;

&lt;p&gt;echo.php 源代码为：&lt;a href=&#34;http://api.bz/ajaxcdr/echo.txt&#34;&gt;http://api.bz/ajaxcdr/echo.txt&lt;/a&gt; crossdomain.xml 文件为：&lt;a href=&#34;http://api.bz/crossdomain.xml&#34;&gt;http://api.bz/crossdomain.xml&lt;/a&gt; 原文链接：&lt;a href=&#34;http://blog.zyan.cc/ajaxcdr/&#34;&gt;http://blog.zyan.cc/ajaxcdr/&lt;/a&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://erik.xyz/2014/12/30/9-ge-chao-ku-de-jquery-dao-ji-shi-cha-jian-he-jiao-cheng/</guid>
            <title>9个超酷的jQuery倒计时插件和教程</title>
            <link>https://erik.xyz/2014/12/30/9-ge-chao-ku-de-jquery-dao-ji-shi-cha-jian-he-jiao-cheng/</link>
            <category>jquery</category>
            <category>jquery插件</category>
            <category>js</category>
            <pubDate>Tue, 30 Dec 2014 21:47:00 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;作者: &lt;a href=&#34;http://paranimage.com/author/admin/&#34; title=&#34;由帕兰发布&#34;&gt;帕兰&lt;/a&gt; 倒计时功能在很多项目中都会使用到，比如维修页面、团购网站和下载限时网站等等。通过使用jQuery倒计时插件，你可以简化你的工作量，却同样创造出超酷的jQuery倒计时功能。本文为你介绍10款jQuery倒计时插件。&lt;/p&gt;
&lt;h3 id=&#34;1-jQuery-Countdown&#34;&gt;&lt;a href=&#34;#1-jQuery-Countdown&#34; class=&#34;headerlink&#34; title=&#34;1. jQuery Countdown&#34;&gt;&lt;/a&gt;1. &lt;a href=&#34;http://keith-wood.name/countdown.html&#34;&gt;jQuery Countdown&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;这个jQuery插件可以让你设置一个div或span元素来显示倒计时，它拥有一堆的选项可以实现你的各种需求。 &lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://paranimage.com/wp-content/uploads/2011/06/image93.jpg&#34; alt=&#34;&#34;&gt; &lt;a href=&#34;http://keith-wood.name/countdown.html&#34;&gt;Demo&lt;/a&gt;&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;2-jQuery-Countdown-with-Background-and-Overlay&#34;&gt;&lt;a href=&#34;#2-jQuery-Countdown-with-Background-and-Overlay&#34; class=&#34;headerlink&#34; title=&#34;2. jQuery Countdown with Background and Overlay&#34;&gt;&lt;/a&gt;2. &lt;a href=&#34;http://tenseveninteractive.com/content/jquery-countdown-background-and-overlay&#34;&gt;jQuery Countdown with Background and Overlay&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;很酷的jQuery倒计时脚本，下载包含Javascript, 图片和CSS文件等。 &lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://paranimage.com/wp-content/uploads/2011/06/image94.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;3-littlewebthings-CountDown&#34;&gt;&lt;a href=&#34;#3-littlewebthings-CountDown&#34; class=&#34;headerlink&#34; title=&#34;3. littlewebthings CountDown&#34;&gt;&lt;/a&gt;3. &lt;a href=&#34;http://www.littlewebthings.com/projects/countdown/index.php&#34;&gt;littlewebthings CountDown&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;这是一个使用简单的jQuery倒计时插件。它非常容易自定义倒计时外观。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://paranimage.com/wp-content/uploads/2011/06/image95.jpg&#34; alt=&#34;&#34;&gt; 演示地址&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.littlewebthings.com/projects/countdown/example/&#34;&gt;Dark theme&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.littlewebthings.com/projects/countdown/example/?style=light&#34;&gt;Light theme&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;4-jQuery-Countdown-plugin-that-doesn’t-sucks&#34;&gt;&lt;a href=&#34;#4-jQuery-Countdown-plugin-that-doesn’t-sucks&#34; class=&#34;headerlink&#34; title=&#34;4. jQuery Countdown plugin that doesn’t sucks!&#34;&gt;&lt;/a&gt;4. &lt;a href=&#34;http://code.google.com/p/jquery-countdown/&#34;&gt;jQuery Countdown plugin that doesn’t sucks!&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;http://paranimage.com/wp-content/uploads/2011/06/image96.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;5-Countdown-timer-jQuery-Plugin&#34;&gt;&lt;a href=&#34;#5-Countdown-timer-jQuery-Plugin&#34; class=&#34;headerlink&#34; title=&#34;5. Countdown timer jQuery Plugin&#34;&gt;&lt;/a&gt;5. &lt;a href=&#34;http://www.webmuse.co.uk/articles/countdown-timer-jquery-plugin/&#34;&gt;Countdown timer jQuery Plugin&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;http://paranimage.com/wp-content/uploads/2011/06/image97.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;6-jQuery-CountDown-Plugin&#34;&gt;&lt;a href=&#34;#6-jQuery-CountDown-Plugin&#34; class=&#34;headerlink&#34; title=&#34;6. jQuery CountDown Plugin&#34;&gt;&lt;/a&gt;6. &lt;a href=&#34;http://davidwalsh.name/jquery-countdown-plugin&#34;&gt;jQuery CountDown Plugin&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;这个脚本可以让你创建一个类似下载网站rapidshare.com的倒计时功能. &lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://paranimage.com/wp-content/uploads/2011/06/image98.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;7-How-can-I-make-a-jQuery-countdown&#34;&gt;&lt;a href=&#34;#7-How-can-I-make-a-jQuery-countdown&#34; class=&#34;headerlink&#34; title=&#34;7. How can I make a jQuery countdown&#34;&gt;&lt;/a&gt;7. &lt;a href=&#34;http://stackoverflow.com/questions/2064186/how-can-i-make-a-jquery-countdown&#34;&gt;How can I make a jQuery countdown&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;这是一个最最简单的jQuery倒计时代码示例，如果你正开始学jQuery并想学着自己写个倒计时事件，它是个不错的开始。&lt;/p&gt;
&lt;h3 id=&#34;8-jQuery-Countdown-Clock-WordPress-插件&#34;&gt;&lt;a href=&#34;#8-jQuery-Countdown-Clock-WordPress-插件&#34; class=&#34;headerlink&#34; title=&#34;8. jQuery Countdown Clock (WordPress 插件)&#34;&gt;&lt;/a&gt;8. &lt;a href=&#34;http://wordpress.org/extend/plugins/jquery-countdown-clock-widget/&#34;&gt;jQuery Countdown Clock (WordPress 插件)&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;这是一个WordPress插件。使用它，你可以显示一个jQuery倒计时时钟在你的侧边栏。&lt;/p&gt;
&lt;h3 id=&#34;9-Coming-Soon-Pages-WordPress-Plugins&#34;&gt;&lt;a href=&#34;#9-Coming-Soon-Pages-WordPress-Plugins&#34; class=&#34;headerlink&#34; title=&#34;9. Coming Soon Pages WordPress Plugins&#34;&gt;&lt;/a&gt;9. &lt;a href=&#34;http://www.cssjockey.com/freebies/custom-coming-soon-pages-wordpress-plugin&#34;&gt;Coming Soon Pages WordPress Plugins&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;这又是一个WordPress插件，它可以让你为你的WP博客生成一个漂亮的Coming Soon页面，该页面会显示一个jQuery倒计时，以及订阅邮箱之类的。如果你的网站因为某些原因需要暂停访问，而你又希望用户得到提示，你的网站将在 什么时间正常显示，推荐使用它。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://paranimage.com/wp-content/uploads/2011/06/wordpress-plugin-coming-soon-6.jpg&#34; alt=&#34;&#34; title=&#34;Coming Soon Page WordPress插件&#34;&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://erik.xyz/2014/12/01/seajs/</guid>
            <title>seajs</title>
            <link>https://erik.xyz/2014/12/01/seajs/</link>
            <category>js</category>
            <category>seajs</category>
            <pubDate>Mon, 01 Dec 2014 23:22:00 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;偶然在一群里知道了seajs,百度详细介绍了： SeaJS的作者是前淘宝UED,现支付宝前端工程师玉伯。 SeaJS本身遵循KISS（Keep It Simple, Stupid）理念进行开发，其本身仅有个位数的API，因此学习起来毫无压力。在学习SeaJS的过程中，处处能感受到KISS原则的精髓——仅做一件事，做好一件事。 自己没试试效果，从示例代码中感觉还可以吧，希望能给小伙伴一些帮助 官网&lt;a href=&#34;http://seajs.org/docs/&#34;&gt;http://seajs.org/docs/&lt;/a&gt; 最新版下载&lt;a href=&#34;http://download.csdn.net/download/w15875510692/8213435&#34;&gt;http://download.csdn.net/download/w15875510692/8213435&lt;/a&gt;&lt;/p&gt;
 ]]></description>
        </item>
    </channel>
</rss>