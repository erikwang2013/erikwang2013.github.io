<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>艾瑞可erik • Posts by &#34;php&#34; tag • Posts by &#34;undefined&#34; categories</title>
        <link>https://erik.xyz</link>
        <description>一只PHP开发的程序猿，偶尔做做运维、Goland、Python、Java、摄影、画画、写作、顺便睡觉，反正整站都搞过。</description>
        <language>zh-CN</language>
        <pubDate>Tue, 10 Jun 2025 23:09:00 +0800</pubDate>
        <lastBuildDate>Tue, 10 Jun 2025 23:09:00 +0800</lastBuildDate>
        <category>php扩展</category>
        <category>php技巧</category>
        <category>php类库</category>
        <category>php资源</category>
        <category>日志</category>
        <category>工具</category>
        <category>jquery</category>
        <category>jquery插件</category>
        <category>js</category>
        <category>css</category>
        <category>php</category>
        <category>web</category>
        <category>代码</category>
        <category>压缩</category>
        <category>说说</category>
        <category>趣闻</category>
        <category>php服务器</category>
        <category>随笔</category>
        <category>php实例</category>
        <category>转载</category>
        <category>php库</category>
        <category>互联</category>
        <category>项目实战</category>
        <category>javascript</category>
        <category>漏洞</category>
        <category>nginx</category>
        <category>php应用</category>
        <category>浮点</category>
        <category>负载均衡</category>
        <category>kali</category>
        <category>kali安装</category>
        <category>http</category>
        <category>http服务器</category>
        <category>农业系统</category>
        <category>系统设计</category>
        <category>克莱姆法则</category>
        <category>行列式</category>
        <category>n阶行列式</category>
        <category>支付系统</category>
        <category>支付</category>
        <category>centos</category>
        <category>linux</category>
        <category>apache优化</category>
        <category>apache隐藏index</category>
        <category>nginx优化</category>
        <category>nginx隐藏index</category>
        <category>日常</category>
        <category>seo</category>
        <category>优化</category>
        <category>摘要</category>
        <category>文章</category>
        <category>游记</category>
        <category>ca证书</category>
        <category>证书生成</category>
        <category>二战</category>
        <category>二战熊</category>
        <category>西伯利亚熊</category>
        <category>centos软件</category>
        <category>yum仓库</category>
        <category>软件</category>
        <category>centos安装chromium报错</category>
        <category>chromium安装报错</category>
        <category>svn</category>
        <category>代码提交</category>
        <category>deb</category>
        <category>deb/rpm互转</category>
        <category>deb转rpm</category>
        <category>rpm互转</category>
        <category>centos7安装steam</category>
        <category>centos安装steam</category>
        <category>centos安装吃鸡steam</category>
        <category>linux安装steam</category>
        <category>steam安装</category>
        <category>centos软件安装</category>
        <category>centos6.5</category>
        <category>linux系统</category>
        <category>centos7安装Redis Desktop Manager</category>
        <category>centos7安装redis桌面</category>
        <category>centos安装redis桌面</category>
        <category>linux安装centos7安装Redis Desktop Manager</category>
        <category>Redis Desktop Manager</category>
        <category>redis桌面</category>
        <category>centos7</category>
        <category>centos7-wine</category>
        <category>wine</category>
        <category>wine安装</category>
        <category>root密码</category>
        <category>root密码重置</category>
        <category>忘记root密码</category>
        <category>memcache</category>
        <category>memcached</category>
        <category>生活手记</category>
        <category>艾瑞可erik</category>
        <category>程序员</category>
        <category>开源云</category>
        <category>容器</category>
        <category>cncf</category>
        <category>监控</category>
        <category>composer</category>
        <category>composer部署</category>
        <category>内网部署composer</category>
        <category>cphalcon</category>
        <category>cphalcon报错</category>
        <category>css中的em</category>
        <category>响应式字体</category>
        <category>响应式布局样式</category>
        <category>proxy代理搭建</category>
        <category>代理服务器搭建</category>
        <category>proxy服务器</category>
        <category>查找</category>
        <category>排序</category>
        <category>快速排序</category>
        <category>冒泡排序</category>
        <category>二分查找</category>
        <category>datahub</category>
        <category>datahub安装</category>
        <category>deepin</category>
        <category>emergency</category>
        <category>emergency mode</category>
        <category>deepin黑屏</category>
        <category>开发语言</category>
        <category>开发</category>
        <category>清理系统</category>
        <category>清理c盘</category>
        <category>dns</category>
        <category>域名监测</category>
        <category>网站监测</category>
        <category>docker</category>
        <category>php安装</category>
        <category>杂谈</category>
        <category>ecshop</category>
        <category>框架</category>
        <category>beego数据分页</category>
        <category>分页</category>
        <category>elasticsearch</category>
        <category>elasticsearch搭建</category>
        <category>elasticsearch集群</category>
        <category>系统</category>
        <category>emm</category>
        <category>mdm</category>
        <category>phone</category>
        <category>手机</category>
        <category>新闻</category>
        <category>免费</category>
        <category>jenkis</category>
        <category>jenkis教程</category>
        <category>算法</category>
        <category>随笔吐槽</category>
        <category>ping</category>
        <category>ping服务器</category>
        <category>各大网站ping</category>
        <category>搜引擎ping服务器</category>
        <category>go获取ip</category>
        <category>im</category>
        <category>go中pdf生成</category>
        <category>go中限流</category>
        <category>go对接快递签名</category>
        <category>go时间获取</category>
        <category>go类型转换</category>
        <category>微服务</category>
        <category>go-zero</category>
        <category>rpc</category>
        <category>go加密</category>
        <category>go解密</category>
        <category>归</category>
        <category>吐槽</category>
        <category>php大全</category>
        <category>php资料</category>
        <category>hadoop</category>
        <category>hadoop2.8.0</category>
        <category>hadoop安装教程</category>
        <category>hadoop安装详细教程</category>
        <category>hadoop教程</category>
        <category>hadoop部署</category>
        <category>hadoop3</category>
        <category>hadoop配置</category>
        <category>log4j2</category>
        <category>数据库</category>
        <category>hbase安装教程</category>
        <category>hbase</category>
        <category>http1.1</category>
        <category>http2.0</category>
        <category>会话</category>
        <category>会话原理</category>
        <category>hyperf</category>
        <category>杂录</category>
        <category>新冠肺炎</category>
        <category>springboot</category>
        <category>springboot内网部署</category>
        <category>linux恢复</category>
        <category>linux误删</category>
        <category>linux命令</category>
        <category>linux命令汇总</category>
        <category>jenkins</category>
        <category>jetbtrains</category>
        <category>phpstorm</category>
        <category>搜索引擎</category>
        <category>图片</category>
        <category>素材</category>
        <category>jq</category>
        <category>jq侧边导航</category>
        <category>侧边导航</category>
        <category>js判断浏览器</category>
        <category>js判断浏览器版本</category>
        <category>判断浏览器</category>
        <category>浏览器版本判断</category>
        <category>获取浏览器信息</category>
        <category>kali右键汉化</category>
        <category>kali桌面右键汉化</category>
        <category>kali右键创建文件</category>
        <category>区块链</category>
        <category>lanmp</category>
        <category>php环境独立配置</category>
        <category>服务器</category>
        <category>劳动纠纷</category>
        <category>追缴工资</category>
        <category>申请仲裁</category>
        <category>flash</category>
        <category>表单</category>
        <category>linux报错</category>
        <category>linux中update-command-not-found</category>
        <category>linux运行命令报错</category>
        <category>web前端</category>
        <category>web优化</category>
        <category>撮合算法</category>
        <category>撮合</category>
        <category>php撮合算法</category>
        <category>maven搭建库</category>
        <category>maven</category>
        <category>maven内网库</category>
        <category>高级缓存配置</category>
        <category>mongodb</category>
        <category>mongodb权限</category>
        <category>可穿戴设备</category>
        <category>mysql</category>
        <category>分库分表</category>
        <category>mysql应对千万级</category>
        <category>mysql瓶颈</category>
        <category>mysql瓶颈解决办法</category>
        <category>redis</category>
        <category>数据一致性</category>
        <category>mysql消息</category>
        <category>mysql队列</category>
        <category>mysql高并发</category>
        <category>mysql存储</category>
        <category>mysql引擎</category>
        <category>mysql数据表设计选择</category>
        <category>mysql监控</category>
        <category>mysql性能</category>
        <category>内网支付</category>
        <category>内网穿透</category>
        <category>支付接口本地化开发</category>
        <category>本地挂网</category>
        <category>穿透</category>
        <category>go</category>
        <category>new和make的区别</category>
        <category>红包算法</category>
        <category>深圳劳动法服务部门</category>
        <category>非关系型数据库</category>
        <category>onethink</category>
        <category>oop</category>
        <category>php管理系统</category>
        <category>开放接口开发</category>
        <category>开源工具</category>
        <category>桌面共享工具</category>
        <category>openresty</category>
        <category>openvas</category>
        <category>openvas安装</category>
        <category>php架构</category>
        <category>php服务</category>
        <category>php服务设计</category>
        <category>php项目</category>
        <category>php架构设计</category>
        <category>php变量</category>
        <category>php超级全局变量</category>
        <category>php超级变量</category>
        <category>php基本类型</category>
        <category>php数据类型</category>
        <category>php设计模式</category>
        <category>php对接微信支付</category>
        <category>微信支付</category>
        <category>微信支付回调</category>
        <category>游戏</category>
        <category>php函数</category>
        <category>php随机数</category>
        <category>php获取闰年</category>
        <category>闰年.php时间</category>
        <category>php环境</category>
        <category>php集成环境</category>
        <category>服务器集成环境</category>
        <category>数组函数</category>
        <category>数组排序函数</category>
        <category>php数学函数</category>
        <category>php面试题</category>
        <category>php面向对象</category>
        <category>面向对象</category>
        <category>php-zookeeper</category>
        <category>zookeeper3.5.5</category>
        <category>php-zookeeper扩展</category>
        <category>php串口开发</category>
        <category>php倒计时</category>
        <category>php时间</category>
        <category>倒计时</category>
        <category>计算时间</category>
        <category>PHP数组</category>
        <category>字符串函数</category>
        <category>排序函数</category>
        <category>php的SPL</category>
        <category>SPL手册</category>
        <category>PHP算法</category>
        <category>php递归</category>
        <category>递归</category>
        <category>phpunit</category>
        <category>phpunit安装</category>
        <category>php过滤</category>
        <category>过滤</category>
        <category>foreach</category>
        <category>foreach报错</category>
        <category>php中foreach报错</category>
        <category>php中if</category>
        <category>php中if判断</category>
        <category>php的if</category>
        <category>php字符串</category>
        <category>php7中sphinx</category>
        <category>php7中sphinx扩展</category>
        <category>sphinx扩展</category>
        <category>plc</category>
        <category>python</category>
        <category>python库</category>
        <category>a标签</category>
        <category>a标签虚线</category>
        <category>虚线框</category>
        <category>R语言</category>
        <category>数据随机化</category>
        <category>redis总结</category>
        <category>redis命令</category>
        <category>redis监控</category>
        <category>redis锁</category>
        <category>redis分布式锁</category>
        <category>任意金额输入</category>
        <category>10元、5元、2元</category>
        <category>队列</category>
        <category>栈</category>
        <category>顺序表</category>
        <category>链表</category>
        <category>数据结构</category>
        <category>线性结构</category>
        <category>浏览器禁止操作视频</category>
        <category>禁止视频</category>
        <category>响应慢</category>
        <category>页面优化</category>
        <category>js编辑</category>
        <category>runjs</category>
        <category>在线编辑</category>
        <category>rust</category>
        <category>rust配置</category>
        <category>seajs</category>
        <category>session</category>
        <category>路由器烧录</category>
        <category>烧录</category>
        <category>极路由2烧录</category>
        <category>砖头烧录</category>
        <category>免费服务器</category>
        <category>空间</category>
        <category>资源</category>
        <category>深圳政府电话</category>
        <category>深圳电话</category>
        <category>特区电话</category>
        <category>居住证</category>
        <category>居住证签注</category>
        <category>深圳新居住证</category>
        <category>国庆骑行</category>
        <category>深圳珠海骑行</category>
        <category>骑行</category>
        <category>世界那么大</category>
        <category>css3</category>
        <category>css在线生成工具</category>
        <category>css工具</category>
        <category>php正则</category>
        <category>正则</category>
        <category>shodan</category>
        <category>黑谷歌</category>
        <category>黒帽搜素</category>
        <category>shopex</category>
        <category>可视化数据</category>
        <category>数据</category>
        <category>数据表</category>
        <category>socket通信</category>
        <category>socket多进程</category>
        <category>socket</category>
        <category>json</category>
        <category>json数组</category>
        <category>json解析</category>
        <category>大数据</category>
        <category>spark</category>
        <category>hive</category>
        <category>数据分析</category>
        <category>sql</category>
        <category>sql优化</category>
        <category>css3兼容360浏览器兼容模式</category>
        <category>css圆角</category>
        <category>结构体转map</category>
        <category>config</category>
        <category>thinkphp</category>
        <category>配置文件</category>
        <category>树</category>
        <category>二叉树</category>
        <category>js插件</category>
        <category>virtualbox</category>
        <category>hyper-v</category>
        <category>鸿蒙开发</category>
        <category>web自适应</category>
        <category>响应式布局</category>
        <category>响应式所有分辨率</category>
        <category>自适应布局</category>
        <category>自适应所有分辨率</category>
        <category>webman</category>
        <category>mysql设置超时，超时</category>
        <category>markdown</category>
        <category>wget</category>
        <category>wget抓取</category>
        <category>网站抓取</category>
        <category>我在</category>
        <category>wordpress</category>
        <category>wordpress标签</category>
        <category>域名合并</category>
        <category>wpscan</category>
        <category>usbrip</category>
        <category>无限极分类</category>
        <category>php无限极</category>
        <category>分类tree</category>
        <category>无限极分类树型</category>
        <category>xhprof</category>
        <category>laravel</category>
        <category>composer插件</category>
        <category>html</category>
        <category>响应式分辨率</category>
        <category>响应式调试</category>
        <category>自适应屏幕</category>
        <category>携程</category>
        <category>携程攻击</category>
        <category>携程网站瘫痪</category>
        <category>物理删除</category>
        <category>3D</category>
        <category>动画</category>
        <category>平台</category>
        <category>虚幻4引擎编辑</category>
        <category>生成唯一id</category>
        <category>生成id</category>
        <category>发邮件</category>
        <category>邮件函数</category>
        <category>储蓄卡免年费</category>
        <category>银行卡</category>
        <category>银行卡免年费</category>
        <category>composer安装</category>
        <category>composer配置</category>
        <category>项目创建composer</category>
        <category>mysql优化</category>
        <category>mysql读写优化</category>
        <category>数据库优化，mysql语句优化</category>
        <category>php加密</category>
        <category>php技术</category>
        <category>夕阳</category>
        <category>mysql函数</category>
        <category>php中mysql函数</category>
        <category>互联网时代</category>
        <category>开源技术</category>
        <category>web框架</category>
        <category>php抓取图片</category>
        <category>php批量抓取页面图片</category>
        <category>邮箱服务器</category>
        <category>正则表达式</category>
        <category>翻墙</category>
        <category>谷歌</category>
        <category>谷歌搜索</category>
        <item>
            <guid isPermalink="true">https://erik.xyz/2025/06/10/php-game-fish/</guid>
            <title>php开发捕鱼游戏的构思</title>
            <link>https://erik.xyz/2025/06/10/php-game-fish/</link>
            <category>php</category>
            <category>游戏</category>
            <pubDate>Tue, 10 Jun 2025 23:09:00 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;使用PHP开发捕鱼游戏涉及前后端协作，以下是核心实现思路和代码示例：&lt;/p&gt;
&lt;h3 id=&#34;一、系统设计&#34;&gt;&lt;a href=&#34;#一、系统设计&#34; class=&#34;headerlink&#34; title=&#34;一、系统设计&#34;&gt;&lt;/a&gt;一、系统设计&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;前端&lt;/strong&gt;：HTML5 Canvas + JavaScript 绘制游戏场景&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;后端&lt;/strong&gt;：PHP 处理游戏逻辑和数据库操作&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;数据库&lt;/strong&gt;：MySQL 存储玩家数据&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;通信&lt;/strong&gt;：AJAX 实现前后端交互&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;二、核心功能实现&#34;&gt;&lt;a href=&#34;#二、核心功能实现&#34; class=&#34;headerlink&#34; title=&#34;二、核心功能实现&#34;&gt;&lt;/a&gt;二、核心功能实现&lt;/h3&gt;&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;
&lt;h4 id=&#34;1-数据库设计（MySQL）&#34;&gt;&lt;a href=&#34;#1-数据库设计（MySQL）&#34; class=&#34;headerlink&#34; title=&#34;1. 数据库设计（MySQL）&#34;&gt;&lt;/a&gt;1. 数据库设计（MySQL）&lt;/h4&gt;&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;CREATE TABLE&lt;/span&gt; players (&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    id &lt;span class=&#34;type&#34;&gt;INT&lt;/span&gt; AUTO_INCREMENT &lt;span class=&#34;keyword&#34;&gt;PRIMARY KEY&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    username &lt;span class=&#34;type&#34;&gt;VARCHAR&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;50&lt;/span&gt;) &lt;span class=&#34;keyword&#34;&gt;UNIQUE&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    password &lt;span class=&#34;type&#34;&gt;VARCHAR&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;255&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    gold &lt;span class=&#34;type&#34;&gt;INT&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;DEFAULT&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1000&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    score &lt;span class=&#34;type&#34;&gt;INT&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;DEFAULT&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;2-PHP后端逻辑（结合前端交互）&#34;&gt;&lt;a href=&#34;#2-PHP后端逻辑（结合前端交互）&#34; class=&#34;headerlink&#34; title=&#34;2. PHP后端逻辑（结合前端交互）&#34;&gt;&lt;/a&gt;2. PHP后端逻辑（结合前端交互）&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;游戏核心文件：&lt;code&gt;game.php&lt;/code&gt;&lt;/strong&gt;&lt;br&gt;&lt;figure class=&#34;highlight php&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;lt;?php&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;title function_ invoke__&#34;&gt;session_start&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 连接数据库&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable&#34;&gt;$db&lt;/span&gt; = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title function_ invoke__&#34;&gt;mysqli&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;localhost&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;username&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;password&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;fishing_game&amp;#x27;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;FishingGame&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;$db&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;__construct&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;span class=&#34;variable&#34;&gt;$db&lt;/span&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;variable language_&#34;&gt;$this&lt;/span&gt;-&amp;gt;db = &lt;span class=&#34;variable&#34;&gt;$db&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 捕鱼逻辑&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;catchFish&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;span class=&#34;variable&#34;&gt;$playerId&lt;/span&gt;, &lt;span class=&#34;variable&#34;&gt;$cannonType&lt;/span&gt;, &lt;span class=&#34;variable&#34;&gt;$fishType&lt;/span&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;variable&#34;&gt;$cost&lt;/span&gt; = &lt;span class=&#34;variable language_&#34;&gt;$this&lt;/span&gt;-&amp;gt;&lt;span class=&#34;title function_ invoke__&#34;&gt;getCannonCost&lt;/span&gt;(&lt;span class=&#34;variable&#34;&gt;$cannonType&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;variable&#34;&gt;$reward&lt;/span&gt; = &lt;span class=&#34;variable language_&#34;&gt;$this&lt;/span&gt;-&amp;gt;&lt;span class=&#34;title function_ invoke__&#34;&gt;getFishReward&lt;/span&gt;(&lt;span class=&#34;variable&#34;&gt;$fishType&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;// 扣除金币&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;variable language_&#34;&gt;$this&lt;/span&gt;-&amp;gt;db-&amp;gt;&lt;span class=&#34;title function_ invoke__&#34;&gt;query&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;UPDATE players SET gold = gold - &lt;span class=&#34;subst&#34;&gt;$cost&lt;/span&gt; WHERE id = &lt;span class=&#34;subst&#34;&gt;$playerId&lt;/span&gt;&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;// 捕获判定（简化版概率计算）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;variable&#34;&gt;$success&lt;/span&gt; = (&lt;span class=&#34;title function_ invoke__&#34;&gt;rand&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;) &amp;gt; &lt;span class=&#34;number&#34;&gt;30&lt;/span&gt;); &lt;span class=&#34;comment&#34;&gt;// 70%成功率&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(&lt;span class=&#34;variable&#34;&gt;$success&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;variable language_&#34;&gt;$this&lt;/span&gt;-&amp;gt;db-&amp;gt;&lt;span class=&#34;title function_ invoke__&#34;&gt;query&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;UPDATE players SET gold = gold + &lt;span class=&#34;subst&#34;&gt;$reward&lt;/span&gt;, score = score + &lt;span class=&#34;subst&#34;&gt;$reward&lt;/span&gt; WHERE id = &lt;span class=&#34;subst&#34;&gt;$playerId&lt;/span&gt;&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; [&lt;span class=&#34;string&#34;&gt;&amp;#x27;success&amp;#x27;&lt;/span&gt; =&amp;gt; &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;reward&amp;#x27;&lt;/span&gt; =&amp;gt; &lt;span class=&#34;variable&#34;&gt;$reward&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; [&lt;span class=&#34;string&#34;&gt;&amp;#x27;success&amp;#x27;&lt;/span&gt; =&amp;gt; &lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;getCannonCost&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;span class=&#34;variable&#34;&gt;$type&lt;/span&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;variable&#34;&gt;$costs&lt;/span&gt; = [&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; =&amp;gt; &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; =&amp;gt; &lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt; =&amp;gt; &lt;span class=&#34;number&#34;&gt;20&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// 炮弹类型对应消耗&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;$costs&lt;/span&gt;[&lt;span class=&#34;variable&#34;&gt;$type&lt;/span&gt;] ?? &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;getFishReward&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;span class=&#34;variable&#34;&gt;$type&lt;/span&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;variable&#34;&gt;$rewards&lt;/span&gt; = [&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; =&amp;gt; &lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; =&amp;gt; &lt;span class=&#34;number&#34;&gt;25&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt; =&amp;gt; &lt;span class=&#34;number&#34;&gt;50&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// 鱼类奖励&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;$rewards&lt;/span&gt;[&lt;span class=&#34;variable&#34;&gt;$type&lt;/span&gt;] ?? &lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 实例化游戏&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable&#34;&gt;$game&lt;/span&gt; = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;FishingGame&lt;/span&gt;(&lt;span class=&#34;variable&#34;&gt;$db&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 处理AJAX请求&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (&lt;span class=&#34;variable&#34;&gt;$_SERVER&lt;/span&gt;[&lt;span class=&#34;string&#34;&gt;&amp;#x27;REQUEST_METHOD&amp;#x27;&lt;/span&gt;] === &lt;span class=&#34;string&#34;&gt;&amp;#x27;POST&amp;#x27;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;variable&#34;&gt;$playerId&lt;/span&gt; = &lt;span class=&#34;variable&#34;&gt;$_SESSION&lt;/span&gt;[&lt;span class=&#34;string&#34;&gt;&amp;#x27;player_id&amp;#x27;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;variable&#34;&gt;$data&lt;/span&gt; = &lt;span class=&#34;title function_ invoke__&#34;&gt;json_decode&lt;/span&gt;(&lt;span class=&#34;title function_ invoke__&#34;&gt;file_get_contents&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;php://input&amp;#x27;&lt;/span&gt;), &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;isset&lt;/span&gt;(&lt;span class=&#34;variable&#34;&gt;$data&lt;/span&gt;[&lt;span class=&#34;string&#34;&gt;&amp;#x27;action&amp;#x27;&lt;/span&gt;]) &amp;amp;&amp;amp; &lt;span class=&#34;variable&#34;&gt;$data&lt;/span&gt;[&lt;span class=&#34;string&#34;&gt;&amp;#x27;action&amp;#x27;&lt;/span&gt;] === &lt;span class=&#34;string&#34;&gt;&amp;#x27;catch&amp;#x27;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;variable&#34;&gt;$response&lt;/span&gt; = &lt;span class=&#34;variable&#34;&gt;$game&lt;/span&gt;-&amp;gt;&lt;span class=&#34;title function_ invoke__&#34;&gt;catchFish&lt;/span&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;variable&#34;&gt;$playerId&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;variable&#34;&gt;$data&lt;/span&gt;[&lt;span class=&#34;string&#34;&gt;&amp;#x27;cannon&amp;#x27;&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;variable&#34;&gt;$data&lt;/span&gt;[&lt;span class=&#34;string&#34;&gt;&amp;#x27;fishType&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        );&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;title function_ invoke__&#34;&gt;header&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;Content-Type: application/json&amp;#x27;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;title function_ invoke__&#34;&gt;json_encode&lt;/span&gt;(&lt;span class=&#34;variable&#34;&gt;$response&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;exit&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&#34;3-前端核心实现（JavaScript）&#34;&gt;&lt;a href=&#34;#3-前端核心实现（JavaScript）&#34; class=&#34;headerlink&#34; title=&#34;3. 前端核心实现（JavaScript）&#34;&gt;&lt;/a&gt;3. 前端核心实现（JavaScript）&lt;/h4&gt;&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;108&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;canvas&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;id&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;gameCanvas&amp;quot;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;width&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;800&amp;quot;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;height&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;600&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;canvas&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;language-javascript&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 游戏配置&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;variable constant_&#34;&gt;FISH_TYPES&lt;/span&gt; = &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;  &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;: &amp;#123; &lt;span class=&#34;attr&#34;&gt;speed&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;attr&#34;&gt;color&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;#x27;#FF9900&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;attr&#34;&gt;size&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;30&lt;/span&gt; &amp;#125;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;  &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;: &amp;#123; &lt;span class=&#34;attr&#34;&gt;speed&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;attr&#34;&gt;color&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;#x27;#00CCFF&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;attr&#34;&gt;size&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;50&lt;/span&gt; &amp;#125;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;  &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;: &amp;#123; &lt;span class=&#34;attr&#34;&gt;speed&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;attr&#34;&gt;color&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;#x27;#FF66CC&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;attr&#34;&gt;size&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;80&lt;/span&gt; &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;&amp;#125;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;FishingGame&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;  &lt;span class=&#34;title function_&#34;&gt;constructor&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;    &lt;span class=&#34;variable language_&#34;&gt;this&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;canvas&lt;/span&gt; = &lt;span class=&#34;variable language_&#34;&gt;document&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;getElementById&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;gameCanvas&amp;#x27;&lt;/span&gt;);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;    &lt;span class=&#34;variable language_&#34;&gt;this&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;ctx&lt;/span&gt; = &lt;span class=&#34;variable language_&#34;&gt;this&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;canvas&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;getContext&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;2d&amp;#x27;&lt;/span&gt;);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;    &lt;span class=&#34;variable language_&#34;&gt;this&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;fishes&lt;/span&gt; = [];&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;    &lt;span class=&#34;variable language_&#34;&gt;this&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;player&lt;/span&gt; = &amp;#123; &lt;span class=&#34;attr&#34;&gt;gold&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;1000&lt;/span&gt;, &lt;span class=&#34;attr&#34;&gt;score&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; &amp;#125;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;    &lt;span class=&#34;variable language_&#34;&gt;this&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;init&lt;/span&gt;();&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;  &lt;span class=&#34;title function_&#34;&gt;init&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;    &lt;span class=&#34;variable language_&#34;&gt;this&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;generateFish&lt;/span&gt;();&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;    &lt;span class=&#34;variable language_&#34;&gt;this&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;gameLoop&lt;/span&gt;();&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;    &lt;span class=&#34;variable language_&#34;&gt;this&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;canvas&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;addEventListener&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;click&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;variable language_&#34;&gt;this&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;handleClick&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;bind&lt;/span&gt;(&lt;span class=&#34;variable language_&#34;&gt;this&lt;/span&gt;));&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;  &lt;span class=&#34;title function_&#34;&gt;generateFish&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 随机生成鱼群&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;setInterval&lt;/span&gt;(&lt;span class=&#34;function&#34;&gt;() =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; type = &lt;span class=&#34;title class_&#34;&gt;Math&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;floor&lt;/span&gt;(&lt;span class=&#34;title class_&#34;&gt;Math&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;random&lt;/span&gt;() * &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;) + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;      &lt;span class=&#34;variable language_&#34;&gt;this&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;fishes&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;push&lt;/span&gt;(&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;        type,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;        &lt;span class=&#34;attr&#34;&gt;x&lt;/span&gt;: -&lt;span class=&#34;number&#34;&gt;50&lt;/span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;        &lt;span class=&#34;attr&#34;&gt;y&lt;/span&gt;: &lt;span class=&#34;title class_&#34;&gt;Math&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;random&lt;/span&gt;() * &lt;span class=&#34;number&#34;&gt;500&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;50&lt;/span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;        ...&lt;span class=&#34;variable constant_&#34;&gt;FISH_TYPES&lt;/span&gt;[type]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;      &amp;#125;);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;    &amp;#125;, &lt;span class=&#34;number&#34;&gt;2000&lt;/span&gt;);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;  &lt;span class=&#34;title function_&#34;&gt;handleClick&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;e&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; rect = &lt;span class=&#34;variable language_&#34;&gt;this&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;canvas&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;getBoundingClientRect&lt;/span&gt;();&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; clickX = e.&lt;span class=&#34;property&#34;&gt;clientX&lt;/span&gt; - rect.&lt;span class=&#34;property&#34;&gt;left&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; clickY = e.&lt;span class=&#34;property&#34;&gt;clientY&lt;/span&gt; - rect.&lt;span class=&#34;property&#34;&gt;top&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;    &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 检测点击到的鱼&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; cannonType = &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;; &lt;span class=&#34;comment&#34;&gt;// 默认炮弹类型&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; i = &lt;span class=&#34;variable language_&#34;&gt;this&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;fishes&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;length&lt;/span&gt; - &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;; i &amp;gt;= &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; i--) &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; fish = &lt;span class=&#34;variable language_&#34;&gt;this&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;fishes&lt;/span&gt;[i];&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; distance = &lt;span class=&#34;title class_&#34;&gt;Math&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;sqrt&lt;/span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;        &lt;span class=&#34;title class_&#34;&gt;Math&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;pow&lt;/span&gt;(fish.&lt;span class=&#34;property&#34;&gt;x&lt;/span&gt; - clickX, &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;) + &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;        &lt;span class=&#34;title class_&#34;&gt;Math&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;pow&lt;/span&gt;(fish.&lt;span class=&#34;property&#34;&gt;y&lt;/span&gt; - clickY, &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;      );&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;      &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(distance &amp;lt; fish.&lt;span class=&#34;property&#34;&gt;size&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;        &lt;span class=&#34;variable language_&#34;&gt;this&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;sendCatchRequest&lt;/span&gt;(fish.&lt;span class=&#34;property&#34;&gt;type&lt;/span&gt;, cannonType);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;        &lt;span class=&#34;variable language_&#34;&gt;this&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;fishes&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;splice&lt;/span&gt;(i, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;      &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;async&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;sendCatchRequest&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;fishType, cannonType&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; response = &lt;span class=&#34;keyword&#34;&gt;await&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;fetch&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;game.php&amp;#x27;&lt;/span&gt;, &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;method&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;#x27;POST&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;headers&lt;/span&gt;: &amp;#123; &lt;span class=&#34;string&#34;&gt;&amp;#x27;Content-Type&amp;#x27;&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;#x27;application/json&amp;#x27;&lt;/span&gt; &amp;#125;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;body&lt;/span&gt;: &lt;span class=&#34;title class_&#34;&gt;JSON&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;stringify&lt;/span&gt;(&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;        &lt;span class=&#34;attr&#34;&gt;action&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;#x27;catch&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;        &lt;span class=&#34;attr&#34;&gt;fishType&lt;/span&gt;: fishType,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;        &lt;span class=&#34;attr&#34;&gt;cannon&lt;/span&gt;: cannonType&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;      &amp;#125;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;    &amp;#125;);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;    &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; result = &lt;span class=&#34;keyword&#34;&gt;await&lt;/span&gt; response.&lt;span class=&#34;title function_&#34;&gt;json&lt;/span&gt;();&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(result.&lt;span class=&#34;property&#34;&gt;success&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;      &lt;span class=&#34;variable language_&#34;&gt;this&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;player&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;gold&lt;/span&gt; += result.&lt;span class=&#34;property&#34;&gt;reward&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;      &lt;span class=&#34;variable language_&#34;&gt;this&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;player&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;score&lt;/span&gt; += result.&lt;span class=&#34;property&#34;&gt;reward&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;      &lt;span class=&#34;variable language_&#34;&gt;this&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;showEffect&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;+&amp;#x27;&lt;/span&gt;+result.&lt;span class=&#34;property&#34;&gt;reward&lt;/span&gt;);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;  &lt;span class=&#34;title function_&#34;&gt;gameLoop&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;    &lt;span class=&#34;variable language_&#34;&gt;this&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;ctx&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;clearRect&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;800&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;600&lt;/span&gt;);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;    &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 绘制背景&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;    &lt;span class=&#34;variable language_&#34;&gt;this&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;ctx&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;fillStyle&lt;/span&gt; = &lt;span class=&#34;string&#34;&gt;&amp;#x27;#3399FF&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;    &lt;span class=&#34;variable language_&#34;&gt;this&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;ctx&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;fillRect&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;800&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;600&lt;/span&gt;);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;    &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 更新并绘制鱼&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;    &lt;span class=&#34;variable language_&#34;&gt;this&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;fishes&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;forEach&lt;/span&gt;(&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;params&#34;&gt;fish&lt;/span&gt; =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;      fish.&lt;span class=&#34;property&#34;&gt;x&lt;/span&gt; += fish.&lt;span class=&#34;property&#34;&gt;speed&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(fish.&lt;span class=&#34;property&#34;&gt;x&lt;/span&gt; &amp;gt; &lt;span class=&#34;number&#34;&gt;850&lt;/span&gt;) fish.&lt;span class=&#34;property&#34;&gt;x&lt;/span&gt; = -&lt;span class=&#34;number&#34;&gt;50&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;      &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;      &lt;span class=&#34;variable language_&#34;&gt;this&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;ctx&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;beginPath&lt;/span&gt;();&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;      &lt;span class=&#34;variable language_&#34;&gt;this&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;ctx&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;fillStyle&lt;/span&gt; = fish.&lt;span class=&#34;property&#34;&gt;color&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;      &lt;span class=&#34;variable language_&#34;&gt;this&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;ctx&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;arc&lt;/span&gt;(fish.&lt;span class=&#34;property&#34;&gt;x&lt;/span&gt;, fish.&lt;span class=&#34;property&#34;&gt;y&lt;/span&gt;, fish.&lt;span class=&#34;property&#34;&gt;size&lt;/span&gt;/&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;title class_&#34;&gt;Math&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;PI&lt;/span&gt; * &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;      &lt;span class=&#34;variable language_&#34;&gt;this&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;ctx&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;fill&lt;/span&gt;();&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;    &amp;#125;);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;    &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 绘制UI&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;    &lt;span class=&#34;variable language_&#34;&gt;this&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;ctx&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;fillStyle&lt;/span&gt; = &lt;span class=&#34;string&#34;&gt;&amp;#x27;#000&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;    &lt;span class=&#34;variable language_&#34;&gt;this&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;ctx&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;font&lt;/span&gt; = &lt;span class=&#34;string&#34;&gt;&amp;#x27;20px Arial&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;    &lt;span class=&#34;variable language_&#34;&gt;this&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;ctx&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;fillText&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;`金币: &lt;span class=&#34;subst&#34;&gt;$&amp;#123;&lt;span class=&#34;variable language_&#34;&gt;this&lt;/span&gt;.player.gold&amp;#125;&lt;/span&gt;`&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;20&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;30&lt;/span&gt;);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;    &lt;span class=&#34;variable language_&#34;&gt;this&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;ctx&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;fillText&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;`分数: &lt;span class=&#34;subst&#34;&gt;$&amp;#123;&lt;span class=&#34;variable language_&#34;&gt;this&lt;/span&gt;.player.score&amp;#125;&lt;/span&gt;`&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;20&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;60&lt;/span&gt;);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;    &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;    &lt;span class=&#34;title function_&#34;&gt;requestAnimationFrame&lt;/span&gt;(&lt;span class=&#34;function&#34;&gt;() =&amp;gt;&lt;/span&gt; &lt;span class=&#34;variable language_&#34;&gt;this&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;gameLoop&lt;/span&gt;());&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;FishingGame&lt;/span&gt;();&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;三、游戏功能扩展建议&#34;&gt;&lt;a href=&#34;#三、游戏功能扩展建议&#34; class=&#34;headerlink&#34; title=&#34;三、游戏功能扩展建议&#34;&gt;&lt;/a&gt;三、游戏功能扩展建议&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;高级功能&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;添加多种武器系统（激光炮、渔网）&lt;/li&gt;
&lt;li&gt;实现鱼群特殊行为（BOSS鱼、鱼群迁徙）&lt;/li&gt;
&lt;li&gt;道具系统（金币加倍、冰冻效果）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;性能优化&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;WebSocket实现实时通信&lt;/li&gt;
&lt;li&gt;对象池重用鱼对象&lt;/li&gt;
&lt;li&gt;精灵图代替纯色绘制&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;安全增强&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;炮弹消耗验证&lt;/li&gt;
&lt;li&gt;频率限制（防作弊）&lt;/li&gt;
&lt;li&gt;数据加密传输&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;商业化功能&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;内购金币系统&lt;/li&gt;
&lt;li&gt;每日任务奖励&lt;/li&gt;
&lt;li&gt;玩家排行榜&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;四、部署注意事项&#34;&gt;&lt;a href=&#34;#四、部署注意事项&#34; class=&#34;headerlink&#34; title=&#34;四、部署注意事项&#34;&gt;&lt;/a&gt;四、部署注意事项&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;使用PHP 7.4+ 获取最佳性能&lt;/li&gt;
&lt;li&gt;配置OPCache加速PHP执行&lt;/li&gt;
&lt;li&gt;前端资源使用CDN加速&lt;/li&gt;
&lt;li&gt;定期备份玩家数据&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;完整实现需包含用户系统（注册/登录）、游戏商城、社交功能等模块。实际开发中建议使用游戏引擎如Phaser.js替代原生Canvas API以提高开发效率。&lt;/p&gt;
&lt;/blockquote&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://erik.xyz/2025/05/26/webman-hyperf-change/</guid>
            <title>webman和hyperf对比解析</title>
            <link>https://erik.xyz/2025/05/26/webman-hyperf-change/</link>
            <category>php</category>
            <category>hyperf</category>
            <category>webman</category>
            <pubDate>Mon, 26 May 2025 21:55:00 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;好的，我们来深入探讨一下 &lt;code&gt;webman&lt;/code&gt;、&lt;code&gt;Hyperf&lt;/code&gt; 的底层原理以及 PHP 中注解（Annotations）的实现原理。&lt;/p&gt;
&lt;h2 id=&#34;1-webman-底层原理&#34;&gt;&lt;a href=&#34;#1-webman-底层原理&#34; class=&#34;headerlink&#34; title=&#34;1. webman 底层原理&#34;&gt;&lt;/a&gt;1. webman 底层原理&lt;/h2&gt;&lt;p&gt;&lt;code&gt;webman&lt;/code&gt; 的核心设计理念是 &lt;strong&gt;轻量、高性能、易用&lt;/strong&gt;。它构建在强大的异步事件驱动网络库 &lt;strong&gt;Workerman&lt;/strong&gt; 之上，充分利用了 PHP 的 CLI（命令行接口）模式和事件循环机制，摒弃了传统的 PHP-FPM 模式，从而实现了高性能和高并发。&lt;/p&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;
&lt;h3 id=&#34;核心原理剖析&#34;&gt;&lt;a href=&#34;#核心原理剖析&#34; class=&#34;headerlink&#34; title=&#34;核心原理剖析&#34;&gt;&lt;/a&gt;核心原理剖析&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;基于 Workerman：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;事件驱动：&lt;/strong&gt; Workerman 使用 &lt;code&gt;libevent&lt;/code&gt; (默认)、&lt;code&gt;event&lt;/code&gt; 或 &lt;code&gt;swoole&lt;/code&gt; 扩展提供的事件循环库。它在一个或多个主进程中创建和管理一个或多个事件循环 (&lt;code&gt;event loop&lt;/code&gt;)。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;非阻塞 I/O：&lt;/strong&gt; 所有网络操作（TCP/UDP/Unix Socket 监听和连接）都是非阻塞的。当一个连接上有数据可读、可写或发生错误时，事件循环会触发注册的回调函数进行处理。这避免了为每个连接创建线程或进程的巨大开销。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;多进程模型：&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;主进程 (Master)：&lt;/strong&gt; 负责解析配置、创建监听套接字、管理子进程（Worker 进程）、监控子进程状态（如崩溃重启）、处理信号（如 reload, stop, status）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Worker 进程 (Worker)：&lt;/strong&gt; 真正处理业务逻辑的进程。主进程 &lt;code&gt;fork&lt;/code&gt; 出多个 Worker 子进程。&lt;strong&gt;默认情况下，这些 Worker 进程是常驻内存的&lt;/strong&gt;。每个 Worker 进程都独立运行着自己的事件循环，处理分配给它的连接请求。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;进程间通信 (IPC)：&lt;/strong&gt; Master 和 Worker 之间通常通过 Unix Socket 管道进行通信（例如发送 reload 信号、状态查询）。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;协议支持：&lt;/strong&gt; Workerman 内置了对 HTTP、WebSocket、TCP、UDP 等协议的支持，并能自定义协议。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;webman 在 Workerman 上的封装：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;PSR 兼容：&lt;/strong&gt; 提供了符合 PSR-7 (HTTP 消息接口)、PSR-15 (HTTP 中间件)、PSR-11 (容器) 等标准的实现，使得开发者可以使用熟悉的中间件模式和依赖注入。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;路由：&lt;/strong&gt; 提供灵活的路由配置（如文件路由 &lt;code&gt;route.php&lt;/code&gt;），将 HTTP 请求映射到对应的控制器方法或闭包。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;中间件：&lt;/strong&gt; 实现了洋葱圈模型的中间件机制，方便处理请求前、后的逻辑（如鉴权、日志、跨域）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;控制器：&lt;/strong&gt; 组织业务逻辑代码。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;视图：&lt;/strong&gt; 支持简单的模板渲染。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;数据库/Redis：&lt;/strong&gt; 提供便捷的封装，但需要注意&lt;strong&gt;在默认 Worker 进程模型下，数据库连接不能像 Swoole 协程那样自动释放/重用，需要开发者自行管理连接的生命周期&lt;/strong&gt;（通常在一个请求处理周期内创建和关闭，或使用连接池）。webman 官方提供了 &lt;code&gt;webman/redis-queue&lt;/code&gt; 等插件来帮助管理。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;文件监控与热更新：&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;php webman start&lt;/code&gt; 默认启动时带 &lt;code&gt;-w&lt;/code&gt; 参数开启监控。&lt;/li&gt;
&lt;li&gt;Workerman 利用 Linux 内核的 &lt;code&gt;inotify&lt;/code&gt; 机制（或 macOS 的 &lt;code&gt;kqueue&lt;/code&gt;）监控项目文件（&lt;code&gt;.php&lt;/code&gt;, &lt;code&gt;.env&lt;/code&gt; 等）的更改。&lt;/li&gt;
&lt;li&gt;当检测到文件修改，主进程会向所有 Worker 进程发送 &lt;code&gt;SIGUSR1&lt;/code&gt; 信号。&lt;/li&gt;
&lt;li&gt;Worker 进程收到信号后，安全地退出当前正在处理的请求（如果有），然后优雅地重启自身（重新加载修改后的代码），而主进程保持运行并重新 &lt;code&gt;fork&lt;/code&gt; 新的 Worker 进程。这个过程&lt;strong&gt;非常快速&lt;/strong&gt;，用户几乎感知不到服务中断，实现了“热更新”。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;高性能关键点：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;常驻内存：&lt;/strong&gt; 最大的优势。框架核心、业务代码、配置等在 Worker 进程启动时加载一次，驻留在内存中。处理后续请求时&lt;strong&gt;无需重复初始化框架、加载核心文件、连接数据库（如果连接池管理得当）&lt;/strong&gt;，极大减少了开销。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;事件驱动 &amp;amp; 非阻塞：&lt;/strong&gt; 高效处理高并发连接，尤其适合 I/O 密集型场景。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;轻量级：&lt;/strong&gt; 框架本身代码量少，抽象层薄，开销小。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;总结 webman 原理：&lt;/strong&gt; 利用 Workerman 的事件驱动、非阻塞 I/O 和多进程模型提供高性能网络基础。webman 在其上构建了一个符合现代 PHP 开发规范（PSR）的轻量级 Web 框架，并通过文件监控实现了便捷的热更新。其核心优势在于常驻内存带来的性能提升和 Workerman 的稳定性。&lt;/p&gt;
&lt;h2 id=&#34;2-Hyperf-底层原理&#34;&gt;&lt;a href=&#34;#2-Hyperf-底层原理&#34; class=&#34;headerlink&#34; title=&#34;2. Hyperf 底层原理&#34;&gt;&lt;/a&gt;2. Hyperf 底层原理&lt;/h2&gt;&lt;p&gt;&lt;code&gt;Hyperf&lt;/code&gt; 是一个 &lt;strong&gt;高性能、高灵活性的企业级协程框架&lt;/strong&gt;。它的核心建立在 &lt;strong&gt;Swoole&lt;/strong&gt; 扩展之上，深度利用了 Swoole 提供的 &lt;strong&gt;协程&lt;/strong&gt; 能力来实现高性能和高并发，并引入了大量 Java Spring Cloud 等框架的设计理念（如依赖注入、AOP、注解驱动）。&lt;/p&gt;
&lt;h3 id=&#34;核心原理剖析-1&#34;&gt;&lt;a href=&#34;#核心原理剖析-1&#34; class=&#34;headerlink&#34; title=&#34;核心原理剖析&#34;&gt;&lt;/a&gt;核心原理剖析&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;基于 Swoole：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;协程：&lt;/strong&gt; Swoole 的核心能力。协程是用户态的轻量级线程，由框架或运行时自身调度，切换成本极低（通常只有函数调用的开销）。Hyperf &lt;strong&gt;深度拥抱协程&lt;/strong&gt;，几乎所有组件（HTTP Server、Database Client、Redis Client、RPC Client/Server、AMQP 等）都设计为&lt;strong&gt;协程安全&lt;/strong&gt;或&lt;strong&gt;协程友好&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;协程调度：&lt;/strong&gt; Swoole 提供了协程调度器。当一个协程遇到 I/O 操作（如数据库查询、网络请求、文件读写）时，它会自动挂起（&lt;code&gt;yield&lt;/code&gt;），将 CPU 让给其他就绪的协程。当 I/O 操作完成，调度器会恢复（&lt;code&gt;resume&lt;/code&gt;）该协程继续执行。这使得&lt;strong&gt;单进程内可以并发处理成千上万个连接/任务&lt;/strong&gt;，且代码逻辑依然是&lt;strong&gt;顺序编写&lt;/strong&gt;（异步回调的 &lt;code&gt;callback hell&lt;/code&gt; 问题得到极大缓解）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;事件驱动：&lt;/strong&gt; 底层仍然是事件驱动（基于 &lt;code&gt;epoll&lt;/code&gt;/&lt;code&gt;kqueue&lt;/code&gt; 等），Swoole 的事件循环驱动着协程的调度。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Server：&lt;/strong&gt; 提供高性能的 HTTP Server、WebSocket Server、TCP/UDP Server 等。Hyperf 主要使用 HTTP Server。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Hyperf 在 Swoole 上的高级封装与架构：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;强大的依赖注入容器 (DI Container)：&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;是整个框架的基石（基于 &lt;code&gt;hyperf/di&lt;/code&gt; 组件）。&lt;/li&gt;
&lt;li&gt;实现了 &lt;code&gt;PSR-11&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;支持自动装配（Autowiring）、接口绑定实现、构造函数注入、属性注入、方法注入。&lt;/li&gt;
&lt;li&gt;管理着应用中几乎所有对象的生命周期（单例、原型等）。&lt;/li&gt;
&lt;li&gt;是 AOP 和注解驱动实现的基础。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;注解驱动开发 (Annotation-Driven Development)：&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;Hyperf &lt;strong&gt;重度依赖注解&lt;/strong&gt;来配置路由、定义中间件、声明 AOP 切面、标记定时任务、配置依赖注入、定义 RPC 服务等。&lt;/li&gt;
&lt;li&gt;框架启动时（或在 &lt;code&gt;Worker&lt;/code&gt; 进程启动时，取决于注解作用域），会通过&lt;strong&gt;反射&lt;/strong&gt;扫描代码，解析类、方法、属性上的注解，收集元数据，并动态生成代理类或进行相应的配置注册（如将路由信息注册到路由器）。&lt;/li&gt;
&lt;li&gt;极大提高了开发效率和代码的可读性、可维护性（配置紧贴代码）。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;面向切面编程 (AOP)：&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;基于 DI 容器和动态代理实现。&lt;/li&gt;
&lt;li&gt;允许开发者定义“切面”（&lt;code&gt;Aspect&lt;/code&gt;）类，其中包含“通知”（&lt;code&gt;Advice&lt;/code&gt; - 如 &lt;code&gt;@Before&lt;/code&gt;, &lt;code&gt;@After&lt;/code&gt;, &lt;code&gt;@Around&lt;/code&gt;）和“切入点”（&lt;code&gt;Pointcut&lt;/code&gt; - 通过注解或表达式指定哪些类的哪些方法需要被切入）。&lt;/li&gt;
&lt;li&gt;框架在运行时，会为匹配 &lt;code&gt;Pointcut&lt;/code&gt; 的目标类&lt;strong&gt;生成代理类&lt;/strong&gt;。当调用目标方法时，实际上是调用代理类的方法，代理类会按顺序执行相关的 &lt;code&gt;Advice&lt;/code&gt; 逻辑（如日志记录、性能监控、事务管理、缓存处理、权限校验等），然后再调用或环绕调用原始目标方法。&lt;/li&gt;
&lt;li&gt;实现了横切关注点（Cross-Cutting Concerns）与核心业务逻辑的解耦。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;协程上下文管理：&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;由于协程是轻量级且并发执行的，传统的全局变量、单例模式在协程环境下可能不安全（一个协程修改会影响其他协程）。&lt;/li&gt;
&lt;li&gt;Hyperf 提供了 &lt;code&gt;hyperf/context&lt;/code&gt; 组件，利用 Swoole 的协程 API (&lt;code&gt;Swoole\Coroutine::getContext()&lt;/code&gt;) 实现&lt;strong&gt;协程级别的上下文隔离&lt;/strong&gt;。&lt;code&gt;Context&lt;/code&gt; 类允许安全地在同一个协程内存储和获取数据。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;连接池：&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;为昂贵的资源（如数据库连接、Redis 连接、HTTP 客户端连接）提供池化管理。&lt;/li&gt;
&lt;li&gt;当协程需要资源时，从池中获取；使用完毕后，归还到池中。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;避免频繁创建和销毁连接的开销&lt;/strong&gt;，极大提升性能，并且&lt;strong&gt;天然适配协程模型&lt;/strong&gt;（每个协程使用独立的连接，避免并发问题）。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;组件化与异步非阻塞客户端：&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;Hyperf 提供了大量开箱即用的高性能协程组件：数据库 (&lt;code&gt;hyperf/database&lt;/code&gt; - 基于 Eloquent/Doctrine, 带连接池)、Redis (&lt;code&gt;hyperf/redis&lt;/code&gt; - 带连接池)、缓存、队列 (&lt;code&gt;hyperf/async-queue&lt;/code&gt;)、RPC (&lt;code&gt;hyperf/json-rpc&lt;/code&gt;)、服务注册与发现 (&lt;code&gt;hyperf/service-governance&lt;/code&gt;)、配置中心 (&lt;code&gt;hyperf/config&lt;/code&gt;)、分布式追踪 (&lt;code&gt;hyperf/tracer&lt;/code&gt;)、限流熔断 (&lt;code&gt;hyperf/rate-limit&lt;/code&gt;, &lt;code&gt;hyperf/circuit-breaker&lt;/code&gt;)、GraphQL、gRPC、AMQP、WebSocket 等。&lt;/li&gt;
&lt;li&gt;这些客户端底层都使用 Swoole 提供的协程 Client 或自行实现的协程化 Client，确保所有 I/O 操作都是&lt;strong&gt;异步非阻塞&lt;/strong&gt;的，能够被协程调度器挂起和恢复。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;进程模型：&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;主进程 (Master)：&lt;/strong&gt; 管理服务生命周期。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Manager 进程：&lt;/strong&gt; 管理 Worker/TaskWorker 进程（创建、回收）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Worker 进程：&lt;/strong&gt; 处理网络请求（HTTP, WebSocket, TCP 等）。&lt;strong&gt;每个 Worker 进程是一个独立的协程调度单元&lt;/strong&gt;，内部可以并发运行大量协程处理请求。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;TaskWorker 进程 (可选)：&lt;/strong&gt; 专门处理耗时较长的同步阻塞任务（如某些复杂计算、调用不支持协程的库）。Worker 进程通过 &lt;code&gt;task()&lt;/code&gt; 投递任务到 TaskWorker。Hyperf 也提供了基于消息队列 (&lt;code&gt;async-queue&lt;/code&gt;) 的异步任务处理方案。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;热更新：&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;原理类似 webman/Workerman，使用 &lt;code&gt;inotify&lt;/code&gt;/&lt;code&gt;kqueue&lt;/code&gt; 监控文件变化。&lt;/li&gt;
&lt;li&gt;向 Worker 进程发送信号 (&lt;code&gt;SIGUSR1&lt;/code&gt; 或 &lt;code&gt;SIGTERM&lt;/code&gt;) 通知其优雅重启（完成当前请求后退出，主进程重新拉起新 Worker 加载新代码）。Hyperf 的 DI 容器和代理类生成机制使得热更新相对可靠。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;总结 Hyperf 原理：&lt;/strong&gt; 深度集成 Swoole 协程，构建了一个高性能、企业级的微服务框架。其核心在于强大的依赖注入容器、基于注解的元编程和配置、AOP 解耦横切关注点、完善的协程上下文和连接池管理，以及大量开箱即用的高性能协程组件。它更适合构建复杂的、分布式的高并发系统（如微服务架构）。&lt;/p&gt;
&lt;h2 id=&#34;3-PHP-注解-Annotations-原理&#34;&gt;&lt;a href=&#34;#3-PHP-注解-Annotations-原理&#34; class=&#34;headerlink&#34; title=&#34;3. PHP 注解 (Annotations) 原理&#34;&gt;&lt;/a&gt;3. PHP 注解 (Annotations) 原理&lt;/h2&gt;&lt;p&gt;注解（PHP 8 之前常称为 DocBlock Annotations，PHP 8 引入了原生 Attributes）是一种&lt;strong&gt;元数据&lt;/strong&gt;机制。它允许你将结构化的信息（元数据）附加到代码元素（类、方法、属性、函数、参数）上。这些信息本身&lt;strong&gt;不会直接影响代码的逻辑执行&lt;/strong&gt;，但可以被&lt;strong&gt;外部工具（如框架、库、IDE、文档生成器）在运行时或编译时读取并利用&lt;/strong&gt;。&lt;/p&gt;
&lt;h3 id=&#34;实现原理-重点在框架如何利用&#34;&gt;&lt;a href=&#34;#实现原理-重点在框架如何利用&#34; class=&#34;headerlink&#34; title=&#34;实现原理 (重点在框架如何利用)&#34;&gt;&lt;/a&gt;实现原理 (重点在框架如何利用)&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;PHP 8 之前 (DocBlock Annotations)：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;存储位置：&lt;/strong&gt; 元数据以特定格式的注释块（&lt;code&gt;/** ... */&lt;/code&gt;）形式写在代码元素的上方。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;格式：&lt;/strong&gt; 遵循 PHPDoc 标准，但框架会定义自己的特殊标签（如 &lt;code&gt;@Route&lt;/code&gt;, &lt;code&gt;@Inject&lt;/code&gt;, &lt;code&gt;@Cacheable&lt;/code&gt;）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;解析：&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;反射 (Reflection)：&lt;/strong&gt; 框架利用 PHP 的反射 API (&lt;code&gt;ReflectionClass&lt;/code&gt;, &lt;code&gt;ReflectionMethod&lt;/code&gt;, &lt;code&gt;ReflectionProperty&lt;/code&gt;) 获取代码元素（类、方法、属性）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;获取 DocComment：&lt;/strong&gt; 通过反射对象的 &lt;code&gt;getDocComment()&lt;/code&gt; 方法获取该元素上的文档注释字符串。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;解析字符串：&lt;/strong&gt; 框架需要编写自己的解析器（或使用库如 &lt;code&gt;doctrine/annotations&lt;/code&gt;）来解析这个字符串。解析器：&lt;ul&gt;
&lt;li&gt;识别以 &lt;code&gt;@&lt;/code&gt; 开头的标记（Tags）。&lt;/li&gt;
&lt;li&gt;解析标记后的参数（可能是简单的字符串、键值对、数组、甚至嵌套结构）。&lt;/li&gt;
&lt;li&gt;将解析结果转换为结构化的数据（通常是数组或特定的注解对象）。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;处理：&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;启动时扫描：&lt;/strong&gt; 框架通常在启动阶段（或首次请求时）扫描指定的目录或命名空间下的所有 PHP 文件。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;反射与解析：&lt;/strong&gt; 对扫描到的类、方法、属性使用反射获取 DocComment 并进行解析。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;元数据收集：&lt;/strong&gt; 将解析得到的结构化注解信息收集并存储起来（例如，将 &lt;code&gt;@Route&lt;/code&gt; 信息注册到路由表中；将 &lt;code&gt;@Inject&lt;/code&gt; 信息用于 DI 容器的自动装配配置）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;运行时利用：&lt;/strong&gt; 在处理请求或执行特定逻辑时，框架会根据之前收集的注解元数据来指导行为（如根据路由注解匹配控制器方法；根据缓存注解决定是否从缓存读取数据）。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;PHP 8 及之后 (原生 Attributes)：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;语言级支持：&lt;/strong&gt; PHP 8 将注解作为&lt;strong&gt;一级语言特性&lt;/strong&gt;引入，称为 &lt;strong&gt;Attributes&lt;/strong&gt;。它们不再是注释，而是&lt;strong&gt;正式的语法结构&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;定义：&lt;/strong&gt; 使用 &lt;code&gt;#[...]&lt;/code&gt; 语法定义。Attribute 本身就是一个普通的 PHP 类（通常继承自 &lt;code&gt;\Attribute&lt;/code&gt;），可以有自己的构造函数、属性和方法，用于定义和验证元数据的结构。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;反射获取：&lt;/strong&gt; 反射 API 新增了 &lt;code&gt;getAttributes()&lt;/code&gt; 方法（例如 &lt;code&gt;ReflectionClass::getAttributes()&lt;/code&gt;）。这个方法返回一个 &lt;code&gt;ReflectionAttribute&lt;/code&gt; 对象数组。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;实例化：&lt;/strong&gt; 可以通过 &lt;code&gt;ReflectionAttribute::newInstance()&lt;/code&gt; 方法实例化 Attribute 类对象（如果定义了类），传入的参数就是在 Attribute 定义时提供的参数。这样就得到了一个&lt;strong&gt;强类型的、结构化的注解对象&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;优势：&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;性能：&lt;/strong&gt; 原生语法，解析速度比解析 DocComment 字符串快得多。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;验证：&lt;/strong&gt; Attribute 类可以定义构造函数参数类型，PHP 引擎会在定义时就进行参数类型检查，避免运行时解析错误。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;结构清晰：&lt;/strong&gt; 强类型对象比解析字符串得到的数组更清晰、更安全。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;IDE 支持：&lt;/strong&gt; IDE 能更好地识别、自动补全和检查 Attributes。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;框架处理流程 (类似 DocBlock，但更高效安全)：&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;启动扫描目录/命名空间。&lt;/li&gt;
&lt;li&gt;使用反射 API 获取类/方法/属性。&lt;/li&gt;
&lt;li&gt;调用 &lt;code&gt;getAttributes()&lt;/code&gt; 获取附加的 Attribute 列表。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;newInstance()&lt;/code&gt; 实例化需要的 Attribute 对象。&lt;/li&gt;
&lt;li&gt;收集这些 Attribute 对象包含的元数据。&lt;/li&gt;
&lt;li&gt;根据元数据配置框架（注册路由、配置 DI、定义 AOP 切入点等）。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;总结注解原理：&lt;/strong&gt; 无论是旧的 DocBlock 还是新的原生 Attribute，注解的本质都是&lt;strong&gt;附加在代码元素上的元数据&lt;/strong&gt;。框架通过 &lt;strong&gt;反射机制&lt;/strong&gt; 在&lt;strong&gt;启动阶段（或按需）&lt;/strong&gt; 扫描代码，&lt;strong&gt;解析&lt;/strong&gt;这些元数据，将其转换为&lt;strong&gt;结构化信息&lt;/strong&gt;，并&lt;strong&gt;利用这些信息来动态配置框架行为、生成代理代码（AOP）或指导运行时逻辑&lt;/strong&gt;。原生 Attributes 在性能、类型安全性和开发体验上带来了显著提升。像 Hyperf 这类现代框架已全面转向使用原生 Attributes。&lt;/p&gt;
&lt;h2 id=&#34;webman-vs-Hyperf-核心原理对比摘要&#34;&gt;&lt;a href=&#34;#webman-vs-Hyperf-核心原理对比摘要&#34; class=&#34;headerlink&#34; title=&#34;webman vs Hyperf 核心原理对比摘要&#34;&gt;&lt;/a&gt;webman vs Hyperf 核心原理对比摘要&lt;/h2&gt;&lt;div class=&#34;table-container&#34;&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left&#34;&gt;特性&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;webman&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;Hyperf&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;strong&gt;核心引擎&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Workerman (事件驱动, 多进程)&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Swoole (事件驱动 + &lt;strong&gt;协程&lt;/strong&gt;, 多进程)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;strong&gt;编程模型&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;事件回调 + 传统同步逻辑 (需自行管理阻塞I/O)&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;strong&gt;协程&lt;/strong&gt; (同步写法, 异步非阻塞I/O)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;strong&gt;性能关键&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;常驻内存 (减少初始化开销)&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;常驻内存 + &lt;strong&gt;协程&lt;/strong&gt; (高并发, 低资源消耗)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;strong&gt;连接管理&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;需手动管理或借助插件/连接池&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;strong&gt;内置协程连接池&lt;/strong&gt; (DB, Redis, HTTP Client等)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;strong&gt;核心机制&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;轻量路由、中间件、PSR 封装&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;strong&gt;强大的DI容器&lt;/strong&gt;、&lt;strong&gt;注解驱动&lt;/strong&gt;、&lt;strong&gt;AOP&lt;/strong&gt;、丰富组件化&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;strong&gt;并发能力&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;高 (多进程)&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;strong&gt;极高&lt;/strong&gt; (多进程 + 单进程内高协程并发)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;strong&gt;复杂度&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;strong&gt;轻量简单&lt;/strong&gt;，学习曲线平缓&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;strong&gt;功能强大复杂&lt;/strong&gt;，学习曲线较陡 (需理解DI, AOP, 协程)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;strong&gt;定位&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;高性能 HTTP API / 简单实时应用&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;企业级、微服务、分布式系统、复杂高并发应用&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;strong&gt;热更新&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;支持 (基于 inotify/kqueue)&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;支持 (基于 inotify/kqueue)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;strong&gt;代表技术&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;文件监听、Workerman API&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Attributes、AOP、依赖注入、连接池、服务治理&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://erik.xyz/2025/03/22/github-open-project-im/</guid>
            <title>github开源的即时通讯项目</title>
            <link>https://erik.xyz/2025/03/22/github-open-project-im/</link>
            <category>php</category>
            <category>im</category>
            <pubDate>Sat, 22 Mar 2025 10:01:00 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;以下是 GitHub 上当前活跃且功能强大的开源即时通讯（IM）项目，涵盖企业级解决方案、轻量级应用和创新型平台，适合不同开发需求：&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;🔧-一、企业级解决方案（高可用、可扩展）&#34;&gt;&lt;a href=&#34;#🔧-一、企业级解决方案（高可用、可扩展）&#34; class=&#34;headerlink&#34; title=&#34;🔧 一、企业级解决方案（高可用、可扩展）&#34;&gt;&lt;/a&gt;🔧 &lt;strong&gt;一、企业级解决方案（高可用、可扩展）&lt;/strong&gt;&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;OpenIM&lt;/strong&gt;  &lt;ul&gt;
&lt;li&gt;&lt;strong&gt;技术栈&lt;/strong&gt;：Go 语言服务端，支持 Android/iOS/Web/Flutter 等全平台 SDK 。  &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;核心特性&lt;/strong&gt;：  &lt;ul&gt;
&lt;li&gt;私有化部署，数据完全自控，支持集群扩展至亿级用户 。  &lt;/li&gt;
&lt;li&gt;消息必达（100% 可靠性），支持单聊、群聊（10 万人超大群）、已读回执、消息撤回等 。  &lt;/li&gt;
&lt;li&gt;集成组织架构、工作圈、音视频通话，适合政企办公场景 。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;适用场景&lt;/strong&gt;：替代商业 IM 云服务（如融云、环信），降低长期成本 。  &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;项目地址&lt;/strong&gt;：&lt;a href=&#34;https://github.com/OpenIMSDK&#34;&gt;GitHub - OpenIMSDK&lt;/a&gt; | 🌟 &lt;strong&gt;Star 9k+&lt;/strong&gt; 。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;
&lt;hr&gt;
&lt;h3 id=&#34;🖥️-二、轻量级跨平台应用&#34;&gt;&lt;a href=&#34;#🖥️-二、轻量级跨平台应用&#34; class=&#34;headerlink&#34; title=&#34;🖥️ 二、轻量级跨平台应用&#34;&gt;&lt;/a&gt;🖥️ &lt;strong&gt;二、轻量级跨平台应用&lt;/strong&gt;&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;HuLa&lt;/strong&gt;  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;技术栈&lt;/strong&gt;：基于 Tauri（Rust 跨平台框架） + Vue 3 + TypeScript，支持 Windows/macOS/Linux 。  &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;核心特性&lt;/strong&gt;：  &lt;ul&gt;
&lt;li&gt;轻量高效（资源占用低），支持文字、语音、视频通话及文件传输 。  &lt;/li&gt;
&lt;li&gt;内置主题定制、表情包、群组管理，界面简洁易用 。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;适用场景&lt;/strong&gt;：个人开发者快速构建桌面端聊天应用。  &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;项目地址&lt;/strong&gt;：&lt;a href=&#34;https://github.com/HuLaSpark/HuLa&#34;&gt;GitHub - HuLaSpark&lt;/a&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Tailchat&lt;/strong&gt;  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;技术栈&lt;/strong&gt;：React + TypeScript + Node.js，插件化架构（类似 Discord）。  &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;核心特性&lt;/strong&gt;：  &lt;ul&gt;
&lt;li&gt;高度可扩展的插件系统（30+ 官方插件），支持身份组权限管理、自定义面板 。  &lt;/li&gt;
&lt;li&gt;多端同步（Web/移动/桌面），集成开放平台（机器人、第三方登录）。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;适用场景&lt;/strong&gt;：社区协作、游戏社交等需定制化功能的场景。  &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;项目地址&lt;/strong&gt;：&lt;a href=&#34;https://github.com/msgbyte/tailchat&#34;&gt;GitHub - Tailchat&lt;/a&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h3 id=&#34;🔌-三、垂直场景与集成方案&#34;&gt;&lt;a href=&#34;#🔌-三、垂直场景与集成方案&#34; class=&#34;headerlink&#34; title=&#34;🔌 三、垂直场景与集成方案&#34;&gt;&lt;/a&gt;🔌 &lt;strong&gt;三、垂直场景与集成方案&lt;/strong&gt;&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;基于环信 SDK 的社交应用&lt;/strong&gt;  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;代表项目&lt;/strong&gt;：高仿微信、图忆（LBS 社交）、美肤 GO（电商客服）。  &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;特点&lt;/strong&gt;：提供完整 UI 和业务逻辑源码，适合快速集成社交功能。  &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;项目示例&lt;/strong&gt;：&lt;a href=&#34;https://github.com/CameloeAnthony/Perfect_IM_SNS&#34;&gt;GitHub - 环信 Demo 合集&lt;/a&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;FreeTube（隐私向 IM 扩展）&lt;/strong&gt;  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;技术栈&lt;/strong&gt;：JavaScript 桌面应用，专注隐私保护 。  &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;特色&lt;/strong&gt;：无广告、无追踪，本地存储用户数据，适合安全敏感场景。  &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;项目地址&lt;/strong&gt;：&lt;a href=&#34;https://github.com/FreeTubeApp/FreeTube&#34;&gt;GitHub - FreeTube&lt;/a&gt; | 🌟 Star 15k+。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h3 id=&#34;📊-核心项目对比&#34;&gt;&lt;a href=&#34;#📊-核心项目对比&#34; class=&#34;headerlink&#34; title=&#34;📊 核心项目对比&#34;&gt;&lt;/a&gt;📊 &lt;strong&gt;核心项目对比&lt;/strong&gt;&lt;/h3&gt;&lt;div class=&#34;table-container&#34;&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;项目&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;技术优势&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;适用场景&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;部署复杂度&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;OpenIM&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;高并发、企业级功能全&lt;/td&gt;
&lt;td&gt;政务/大型企业 IM&lt;/td&gt;
&lt;td&gt;中高（需 Docker）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;HuLa&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;轻量跨平台、开发快捷&lt;/td&gt;
&lt;td&gt;个人/小团队桌面应用&lt;/td&gt;
&lt;td&gt;低&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Tailchat&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;插件化、高度可定制&lt;/td&gt;
&lt;td&gt;社区/游戏社交平台&lt;/td&gt;
&lt;td&gt;中&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h3 id=&#34;💡-四、选型建议&#34;&gt;&lt;a href=&#34;#💡-四、选型建议&#34; class=&#34;headerlink&#34; title=&#34;💡 四、选型建议&#34;&gt;&lt;/a&gt;💡 &lt;strong&gt;四、选型建议&lt;/strong&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;追求企业级稳定性&lt;/strong&gt;：选择 &lt;strong&gt;OpenIM&lt;/strong&gt;，支持私有化部署和国产化需求 。  &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;快速开发桌面端应用&lt;/strong&gt;：&lt;strong&gt;HuLa&lt;/strong&gt; 的现代前端技术栈（Vue3 + Tauri）可大幅提升效率 。  &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;需要高度定制化&lt;/strong&gt;：&lt;strong&gt;Tailchat&lt;/strong&gt; 的插件机制允许自由扩展功能 。  &lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;💡 更多项目源码和部署指南可访问对应 GitHub 仓库。若需替代商业 IM 服务（如融云、环信），OpenIM 的私有化方案能显著降低成本并提升数据安全性 。&lt;/p&gt;
&lt;/blockquote&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://erik.xyz/2025/01/03/php-serial-port-development/</guid>
            <title>php串口开发</title>
            <link>https://erik.xyz/2025/01/03/php-serial-port-development/</link>
            <category>php</category>
            <category>php串口开发</category>
            <pubDate>Fri, 03 Jan 2025 15:30:00 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;使用外置设备，通过串口发送和接收数据。那么，就要在php端有个串口的操作代码。&lt;br&gt;PHP 的 dio 扩展（Direct I/O）提供了对底层 I/O 操作的访问，包括串口通信。通过 dio 扩展，你可以直接操作串口设备文件（如 /dev/ttyUSB0 或 COM1）来实现串口通信。&lt;br&gt; &lt;span id=&#34;more&#34;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;1-安装-dio-扩展&#34;&gt;&lt;a href=&#34;#1-安装-dio-扩展&#34; class=&#34;headerlink&#34; title=&#34;1. 安装 dio 扩展&#34;&gt;&lt;/a&gt;1. 安装 dio 扩展&lt;/h3&gt;&lt;p&gt;dio 扩展是 PHP 的一个 PECL 扩展。你可以通过以下步骤安装：&lt;/p&gt;
&lt;p&gt;在 Linux 上安装：&lt;br&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;sudo apt-get install php-dev  # 安装 PHP 开发工具&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sudo pecl install dio         # 安装 dio 扩展&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;安装完成后，在 php.ini 文件中启用扩展：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;extension=dio.so&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;2-使用-dio-实现串口通信&#34;&gt;&lt;a href=&#34;#2-使用-dio-实现串口通信&#34; class=&#34;headerlink&#34; title=&#34;2. 使用 dio 实现串口通信&#34;&gt;&lt;/a&gt;2. 使用 dio 实现串口通信&lt;/h3&gt;&lt;p&gt;以下是一个使用 dio 扩展实现串口通信的示例代码：&lt;br&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;?php&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;// 串口设备路径&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$device = &amp;#x27;/dev/pts/4&amp;#x27;; // Linux&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;// $device = &amp;#x27;COM1&amp;#x27;;      // Windows&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;// 打开串口设备&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$fd = dio_open($device, O_RDWR | O_NOCTTY | O_NONBLOCK);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;if (!$fd) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    die(&amp;quot;无法打开串口设备: $device\n&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;// 配置串口参数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dio_tcsetattr($fd, [&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#x27;baud&amp;#x27; =&amp;gt; 9600,          // 波特率&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#x27;bits&amp;#x27; =&amp;gt; 8,             // 数据位&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#x27;stop&amp;#x27; =&amp;gt; 1,             // 停止位&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#x27;parity&amp;#x27; =&amp;gt; 0,           // 校验位 (0: none, 1: odd, 2: even)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#x27;flow_control&amp;#x27; =&amp;gt; 0,     // 流控制 (0: none, 1: hardware)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;// 发送数据到串口&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$message = &amp;quot;你好我在https://erik.xyz上出生了！&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dio_write($fd, $message);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;echo &amp;quot;已发送: $message&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;// 从串口读取数据&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$data = dio_read($fd, 1024); // 读取最多 1024 字节&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;echo &amp;quot;已接收: $data\n&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;// 关闭串口&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dio_close($fd);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&#34;3-代码说明&#34;&gt;&lt;a href=&#34;#3-代码说明&#34; class=&#34;headerlink&#34; title=&#34;3. 代码说明&#34;&gt;&lt;/a&gt;3. 代码说明&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;dio_open: 打开串口设备文件。O_RDWR 表示以读写模式打开，O_NOCTTY 表示不将设备作为控制终端，O_NONBLOCK 表示非阻塞模式。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;dio_tcsetattr: 配置串口参数，包括波特率、数据位、停止位、校验位和流控制。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;dio_write: 向串口写入数据。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;dio_read: 从串口读取数据。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;dio_close: 关闭串口设备。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;4-串口参数配置&#34;&gt;&lt;a href=&#34;#4-串口参数配置&#34; class=&#34;headerlink&#34; title=&#34;4. 串口参数配置&#34;&gt;&lt;/a&gt;4. 串口参数配置&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;dio_tcsetattr 的配置选项：&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;baud: 波特率（如 9600、19200、38400、57600、115200）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;bits: 数据位（通常为 8）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;stop: 停止位（1 或 2）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;parity: 校验位（0: 无校验，1: 奇校验，2: 偶校验）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;flow_control: 流控制（0: 无流控制，1: 硬件流控制）。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;那么这时候需要测试一下代码。那总不能真的找个串口设备吧，然而虚拟串口真香。&#34;&gt;&lt;a href=&#34;#那么这时候需要测试一下代码。那总不能真的找个串口设备吧，然而虚拟串口真香。&#34; class=&#34;headerlink&#34; title=&#34;那么这时候需要测试一下代码。那总不能真的找个串口设备吧，然而虚拟串口真香。&#34;&gt;&lt;/a&gt;那么这时候需要测试一下代码。那总不能真的找个串口设备吧，然而虚拟串口真香。&lt;/h2&gt;&lt;h3 id=&#34;5-在Linux中使用-socat-模拟虚拟串口&#34;&gt;&lt;a href=&#34;#5-在Linux中使用-socat-模拟虚拟串口&#34; class=&#34;headerlink&#34; title=&#34;5.在Linux中使用 socat 模拟虚拟串口&#34;&gt;&lt;/a&gt;5.在Linux中使用 socat 模拟虚拟串口&lt;/h3&gt;&lt;p&gt;socat 是一个强大的工具，可以创建虚拟串口对。&lt;/p&gt;
&lt;p&gt;安装 socat：&lt;br&gt;在Debian/Ubuntu系统上：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;sudo apt update&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sudo apt install socat&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;创建虚拟串口对：&lt;br&gt;运行以下命令创建一对虚拟串口：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;socat -d -d pty,raw,echo=0 pty,raw,echo=0&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;运行后如图：&lt;br&gt;&lt;img src=&#34;/img/2024/20250103151316.png&#34; alt=&#34;https://erik.xyz&#34;&gt;&lt;br&gt;这样可以看到出现两个虚拟串口。&lt;br&gt;把上面的php代码放到文件中运行一下:&lt;br&gt;&lt;img src=&#34;/img/2024/20250103151620.png&#34; alt=&#34;https://erik.xyz&#34;&gt;&lt;/p&gt;
&lt;p&gt;同时新开个窗口执行：&lt;code&gt;cat /dev/pts/5&lt;/code&gt;来读取串口数据。&lt;br&gt;如下图：&lt;br&gt;&lt;img src=&#34;/img/2024/20250103151927.png&#34; alt=&#34;https://erik.xyz&#34;&gt;&lt;/p&gt;
&lt;p&gt;这里是发送数据，那接收数据怎么看呢。&lt;br&gt;那就在代码上改造一下加个for：&lt;br&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;// 从串口读取数据&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$data = dio_read($fd, 1024); // 读取最多 1024 字节&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;echo &amp;quot;已接收: $data\n&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;这里改造主要是测试用，实际上不需要。&lt;br&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;//测试接收&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;for($i=0;$i&amp;lt;20;$i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sleep(3);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;// 从串口读取数据&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$data = dio_read($fd, 1024); // 读取最多 1024 字节&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;echo &amp;quot;已接收: $data\n&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;那么，再次运行php代码,然后在新窗口运行&lt;code&gt;echo &amp;quot;欢迎你出生在https://erik.xyz&amp;quot; &amp;gt; /dev/pts/5&lt;/code&gt;来发送信息，你会看到如图的接收：&lt;br&gt;&lt;img src=&#34;/img/2024/20250103152421.png&#34; alt=&#34;https://erik.xyz&#34;&gt;&lt;/p&gt;
&lt;p&gt;到这里，发送和接收串口已经好了。&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://erik.xyz/2021/06/08/php-extension/</guid>
            <title>php扩展</title>
            <link>https://erik.xyz/2021/06/08/php-extension/</link>
            <category>php扩展</category>
            <category>php</category>
            <pubDate>Tue, 08 Jun 2021 11:12:00 +0800</pubDate>
            <description><![CDATA[ &lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://pecl.php.net/package/yar&#34;&gt;yar&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Yar(Yet Another RPC framework)是一个轻量级支持并行调用的PHP RPC框架
学习地址 https://www.laruence.com/2020/03/16/5578.html
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://pecl.php.net/yac&#34;&gt;yac&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;无锁共享内存Cache

学习地址 https://www.laruence.com/2013/03/18/2846.html
&lt;/code&gt;&lt;/pre&gt;&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/laruence/yaconf&#34;&gt;yconf&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;高性能的配置管理扩展

学习地址 https://www.laruence.com/2015/06/12/3051.html
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://pecl.php.net/package/taint&#34;&gt;taint&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;检测XSS/SQL/Shell注入漏洞

学习地址 https://www.laruence.com/2012/02/14/2544.html
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/igbinary/igbinary/&#34;&gt;igbinary&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;php 序列化程序的替代
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://pecl.php.net/package/solr&#34;&gt;solr&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  全文搜索引擎
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://pecl.php.net/package/xhprof&#34;&gt;xhprof&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  性能测试工具
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://erik.xyz/2020/04/27/php-spl-info/</guid>
            <title>php的spl详解</title>
            <link>https://erik.xyz/2020/04/27/php-spl-info/</link>
            <category>php</category>
            <category>php的SPL</category>
            <category>SPL手册</category>
            <pubDate>Mon, 27 Apr 2020 08:56:00 +0800</pubDate>
            <description><![CDATA[ &lt;ul&gt;
&lt;li&gt;&lt;h2 id=&#34;数据结构&#34;&gt;&lt;a href=&#34;#数据结构&#34; class=&#34;headerlink&#34; title=&#34;数据结构&#34;&gt;&lt;/a&gt;数据结构&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;SplDoublyLinkedList （双向链表）&lt;pre&gt;&lt;code&gt;SplDoublyLinkedList::add —在指定的索引处添加/插入新值
SplDoublyLinkedList::bottom —从双向链表的开头偷看节点
SplDoublyLinkedList::__ construct —构造一个新的双向链表
SplDoublyLinkedList::count —计算双向链接列表中的元素数
SplDoublyLinkedList::current —返回当前数组条目
SplDoublyLinkedList::getIteratorMode —返回迭代模式
SplDoublyLinkedList::isEmpty —检查双向链接列表是否为空
SplDoublyLinkedList::key —返回当前节点索引
SplDoublyLinkedList::next —移至下一个条目
SplDoublyLinkedList::offsetExists —返回所请求的$ index是否存在
SplDoublyLinkedList::offsetGet —返回指定的$ index处的值
SplDoublyLinkedList::offsetSet —将指定的$ index处的值设置为$ newval
SplDoublyLinkedList::offsetUnset —取消指定$ index处的值
SplDoublyLinkedList::pop —从双向链接列表的末尾弹出一个节点
SplDoublyLinkedList::prev —移至上一个条目
SplDoublyLinkedList::push —将元素推入双向链接列表的末尾
SplDoublyLinkedList::rewind —将迭代器倒回开始
SplDoublyLinkedList::serialize —序列化存储
SplDoublyLinkedList::setIteratorMode —设置迭代模式
SplDoublyLinkedList::shift —从双链表的开头移出一个节点
SplDoublyLinkedList::top —从双向链表末尾窥视节点
SplDoublyLinkedList::unserialize —反序列化​​存储
SplDoublyLinkedList::unshift —为双向链接列表添加一个元素
SplDoublyLinkedList::valid —检查双向链表是否包含更多节点
&lt;/code&gt;&lt;/pre&gt;&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;        &lt;/li&gt;
&lt;li&gt;&lt;p&gt;SplStack （栈）&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  SplStack::__ construct —构造一个使用双链表实现的新堆栈
  SplStack::setIteratorMode —设置迭代模式
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;SplQueue    （队列)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  SplQueue::__ construct —构造一个使用双链表实现的新队列
  SplQueue::dequeue —使节点从队列中退出
  SplQueue::enqueue —将元素添加到队列
  SplQueue::setIteratorMode —设置迭代模式
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;SplHeap    (堆)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  SplHeap::compare —比较元素以便在筛选时将它们正确放置在堆中
  SplHeap::__ construct —构造一个新的空堆
  SplHeap::count —计算堆中元素的数量
  SplHeap::current —返回迭代器指向的当前节点
  SplHeap::extract —从堆的顶部提取一个节点并进行筛选
  SplHeap::insert —通过筛选将元素插入堆中
  SplHeap::isCorrupted —告诉堆是否处于损坏状态
  SplHeap::isEmpty —检查堆是否为空
  SplHeap::key —返回当前节点索引
  SplHeap::next —移至下一个节点
  SplHeap::recoverFromCorruption —从损坏的状态中恢复并允许对堆进行进一步的操作
  SplHeap::rewind —将迭代器倒回开始（无操作）
  SplHeap::top —窥视堆顶部的节点
  SplHeap::valid —检查堆是否包含更多节点
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;SplMaxHeap (最大堆)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  SplMaxHeap::compare —比较元素以便在筛选时将它们正确放置在堆中
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;SplMinHeap (最小堆)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  SplMinHeap::compare —比较元素以便在筛选时将其正确放置在堆中
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;SplPriorityQueue    (优先级队列)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  SplPriorityQueue::比较—比较优先级以便在筛选时将元素正确放置在堆中
  SplPriorityQueue::__construct —构造一个新的空队列
  SplPriorityQueue::count —计算队列中的元素数
  SplPriorityQueue::current —返回迭代器指向的当前节点
  SplPriorityQueue::extract —从堆顶部提取一个节点并进行筛选
  SplPriorityQueue::getExtractFlags —获取提取标志
  SplPriorityQueue::insert —通过筛选将元素插入队列
  SplPriorityQueue::isCorrupted —告诉优先级队列是否处于损坏状态
  SplPriorityQueue::isEmpty —检查队列是否为空
  SplPriorityQueue::key —返回当前节点索引
  SplPriorityQueue::next —移动到下一个节点
  SplPriorityQueue::recoverFromCorruption —从损坏的状态中恢复并允许对队列进行进一步的操作
  SplPriorityQueue::rewind —将迭代器后退到开始（无操作）
  SplPriorityQueue::setExtractFlags —设置提取模式
  SplPriorityQueue::top —从队列顶部窥视节点
  SplPriorityQueue::valid —检查队列是否包含更多节点
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;SplFixedArray     (处理数组相关的主要功能)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  SplFixedArray::__ construct —构造一个新的固定数组
  SplFixedArray::count —返回数组的大小
  SplFixedArray::current —返回当前数组条目
  SplFixedArray::fromArray —在SplFixedArray实例中导入PHP数组
  SplFixedArray::getSize —获取数组的大小
  SplFixedArray::key —返回当前数组索引
  SplFixedArray::next —移至下一个条目
  SplFixedArray::offsetExists —返回所请求的索引是否存在
  SplFixedArray::offsetGet —返回指定索引处的值
  SplFixedArray::offsetSet —在指定的索引处设置一个新值
  SplFixedArray::offsetUnset —取消设置指定$ index处的值
  SplFixedArray::rewind —将迭代器倒回开始
  SplFixedArray::setSize —更改数组的大小
  SplFixedArray::toArray —从固定数组返回一个PHP数组
  SplFixedArray::valid —检查数组是否包含更多元素
  SplFixedArray::__ wakeup —在反序列化之后重新初始化数组
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;SplObjectStorage  (数据结构对象容器)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  SplObjectStorage::addAll —从另一个存储添加所有对象
  SplObjectStorage::attach —在存储中添加一个对象
  SplObjectStorage::contains —检查存储是否包含特定对象
  SplObjectStorage::count —返回存储中的对象数
  SplObjectStorage::current —返回当前的存储条目
  SplObjectStorage::detach —从存储中删除对象
  SplObjectStorage::getHash —计算所包含对象的唯一标识符
  SplObjectStorage::getInfo —返回与当前迭代器条目关联的数据
  SplObjectStorage::key —返回当前迭代器所在的索引
  SplObjectStorage::next —移至下一个条目
  SplObjectStorage::offsetExists —检查存储中是否存在对象
  SplObjectStorage::offsetGet —返回与对象关联的数据
  SplObjectStorage::offsetSet-将数据关联到存储中的对象
  SplObjectStorage::offsetUnset —从存储中删除一个对象
  SplObjectStorage::removeAll —从当前存储中删除另一个存储中包含的对象
  SplObjectStorage::removeAllExcept-从当前存储中删除除另一个存储中包含的对象以外的所有对象
  SplObjectStorage::rewind —将迭代器后退到第一个存储元素
  SplObjectStorage::serialize —序列化存储
  SplObjectStorage::setInfo —设置与当前迭代器条目关联的数据
  SplObjectStorage::unserialize —从其字符串表示形式反序列化存储
  SplObjectStorage::Valid —返回当前迭代器条目是否有效
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;h2 id=&#34;迭代器&#34;&gt;&lt;a href=&#34;#迭代器&#34; class=&#34;headerlink&#34; title=&#34;迭代器&#34;&gt;&lt;/a&gt;迭代器&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;AppendIterator    (陆续遍历几个迭代器)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  AppendIterator::append —附加一个迭代器
  AppendIterator::__ construct —构造一个AppendIterator
  AppendIterator::current —获取当前值
  AppendIterator::getArrayIterator —获取ArrayIterator
  AppendIterator::getInnerIterator —获取内部迭代器
  AppendIterator::getIteratorIndex —获取迭代器的索引
  AppendIterator::key —获取当前密钥
  AppendIterator::next-移至下一个元素
  AppendIterator::rewind —倒退Iterator
  AppendIterator::valid —检查当前元素的有效性
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ArrayIterator    (允许在遍历数组和对象时删除和更新值与键)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  ArrayIterator::append —追加元素
  ArrayIterator::asort —按值对数组排序
  ArrayIterator::__ construct —构造一个ArrayIterator
  ArrayIterator::count —计数元素
  ArrayIterator::current —返回当前数组条目
  ArrayIterator::getArrayCopy —获取数组副本
  ArrayIterator::getFlags —获取行为标志
  ArrayIterator::key —返回当前的数组键
  ArrayIterator::ksort —按键对数组排序
  ArrayIterator::natcasesort —自然地对数组排序，不区分大小写
  ArrayIterator::natsort —自然地对数组排序
  ArrayIterator::next —移至下一个条目
  ArrayIterator::offsetExists —检查偏移量是否存在
  ArrayIterator::offsetGet —获取偏移量的值
  ArrayIterator::offsetSet —设置偏移量的值
  ArrayIterator::offsetUnset —偏移量的未设置值
  ArrayIterator::rewind —将数组倒回开始
  ArrayIterator::seek —寻求位置
  ArrayIterator::serialize —序列化
  ArrayIterator::setFlags —设置行为标志
  ArrayIterator::uasort —使用用户定义的比较函数排序并维护索引关联
  ArrayIterator::uksort —使用用户定义的比较功能按键排序
  ArrayIterator::unserialize —反序列化
  ArrayIterator::valid —检查数组是否包含更多条目
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;CachingIterator    (缓存迭代)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  CachingIterator::__ construct —为迭代器构造一个新的CachingIterator对象
  CachingIterator::count —迭代器中的元素数
  CachingIterator::current —返回当前元素
  CachingIterator::getCache —检索缓存的内容
  CachingIterator::getFlags —获取使用的标志
  CachingIterator::getInnerIterator —返回内部迭代器
  CachingIterator::hasNext —检查内部迭代器是否具有有效的next元素
  CachingIterator::key —返回当前元素的密钥
  CachingIterator::next —向前移动迭代器
  CachingIterator::offsetExists — offsetExists目的
  CachingIterator::offsetGet — offsetGet目的
  CachingIterator::offsetSet — offsetSet的目的
  CachingIterator::offsetUnset — offsetUnset用途
  CachingIterator::rewind —倒退迭代器
  CachingIterator::setFlags — setFlags的目的
  CachingIterator::__ toString —返回当前元素的字符串表示形式
  CachingIterator::valid —检查当前元素是否有效
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;CallbackFilterIterator    (迭代回调)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  CallbackFilterIterator::accept —以当前值，当前键和内部迭代器作为参数调用回调
  CallbackFilterIterator::__ construct —从另一个迭代器创建一个过滤的迭代器
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;DirectoryIterator    (查看文件系统目录内容)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  DirectoryIterator::__ construct —从路径构造一个新的目录迭代器
  DirectoryIterator::current —返回当前的DirectoryIterator项
  DirectoryIterator::getATime —获取当前DirectoryIterator项的上次访问时间
  DirectoryIterator::getBasename —获取当前DirectoryIterator项的基本名称
  DirectoryIterator::getCTime —获取当前DirectoryIterator项的inode更改时间
  DirectoryIterator::getExtension —获取文件扩展名
  DirectoryIterator::getFilename —返回当前DirectoryIterator项的文件名
  DirectoryIterator::getGroup —获取当前DirectoryIterator项的组
  DirectoryIterator::getInode —获取当前DirectoryIterator项的inode
  DirectoryIterator::getMTim​​e —获取当前DirectoryIterator项的最后修改时间
  DirectoryIterator::getOwner —获取当前DirectoryIterator项的所有者
  DirectoryIterator::getPath —获取没有文件名的当前Iterator项的路径
  DirectoryIterator::getPathname —当前DirectoryIterator项的返回路径和文件名
  DirectoryIterator::getPerms —获取当前DirectoryIterator项的权限
  DirectoryIterator::getSize —获取当前DirectoryIterator项的大小
  DirectoryIterator::getType —确定当前DirectoryIterator项的类型
  DirectoryIterator::isDir —确定当前DirectoryIterator项是否为目录
  DirectoryIterator::isDot —确定当前DirectoryIterator项是否为&amp;#39;。要么 &amp;#39;..&amp;#39;
  DirectoryIterator::isExecutable —确定当前DirectoryIterator项是否可执行
  DirectoryIterator::isFile —确定当前DirectoryIterator项是否为常规文件
  DirectoryIterator::isLink —确定当前DirectoryIterator项是否是符号链接
  DirectoryIterator::isReadable —确定是否可以读取当前的DirectoryIterator项
  DirectoryIterator::isWritable —确定是否可以将当前DirectoryIterator项写入
  DirectoryIterator::key —返回当前DirectoryIterator项的密钥
  DirectoryIterator::next-前进到下一个DirectoryIterator项
  DirectoryIterator::rewind —将DirectoryIterator倒回开始
  DirectoryIterator::seek —寻求DirectoryIterator项
  DirectoryIterator::__ toString —以字符串形式获取文件名
  DirectoryIterator::valid —检查当前DirectoryIterator位置是否为有效文件
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;EmptyIterator    (空迭代器)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  EmptyIterator::current — current()方法
  EmptyIterator::key — key()方法
  EmptyIterator::next — next()方法
  EmptyIterator::rewind — rewind()方法
  EmptyIterator::valid —valid(）方法
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;FilesystemIterator    (文件系统迭代器)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  FilesystemIterator::__ construct —构造一个新的文件系统迭代器
  FilesystemIterator::current —当前文件
  FilesystemIterator::getFlags —获取处理标志
  FilesystemIterator::key —检索当前文件的密钥
  FilesystemIterator::next-移至下一个文件
  FilesystemIterator::rewind —回溯到开头
  FilesystemIterator::setFlags —设置处理标志
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;FilterIterator    ()&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  FilterIterator::accept —检查迭代器的当前元素是否可接受
  FilterIterator::__ construct —构造一个filterIterator
  FilterIterator::current —获取当前元素值
  FilterIterator::getInnerIterator —获取内部迭代器
  FilterIterator::key —获取当前密钥
  FilterIterator::next —向前移动迭代器
  FilterIterator::rewind —倒退迭代器
  FilterIterator::valid —检查当前元素是否有效
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;GlobIterator    (遍历一个文件系统行为)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  GlobIterator::__ construct —使用glob构造目录
  GlobIterator::count —获取目录和文件的数量
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;InfiniteIterator    (无限迭代)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  InfiniteIterator::__ construct —构造一个InfiniteIterator
  InfiniteIterator::next-将内部Iterator向前或向后移动
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;IteratorIterator    (将可遍历的任何内容转换为迭代器)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  IteratorIterator::__ construct —从任何可遍历的东西创建一个迭代器
  IteratorIterator::current —获取当前值
  IteratorIterator::getInnerIterator —获取内部迭代器
  IteratorIterator::key —获取当前元素的键
  IteratorIterator::next —转发到下一个元素
  IteratorIterator::rewind —倒退到第一个元素
  IteratorIterator::valid —检查迭代器是否有效
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;LimitIterator    (遍历一个 Iterator 的限定子集的元素)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  LimitIterator::__ construct —构造一个LimitIterator
  LimitIterator::current —获取当前元素
  LimitIterator::getInnerIterator —获取内部迭代器
  LimitIterator::getPosition —返回当前位置
  LimitIterator::key —获取当前键
  LimitIterator::next —向前移动迭代器
  LimitIterator::rewind —将迭代器后退到指定的起始偏移量
  LimitIterator::seek —寻求给定位置
  LimitIterator::valid —检查当前元素是否有效
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;MultipleIterator    (依次迭代所有附加迭代器的迭代器)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  MultipleIterator::attachIterator —附加迭代器信息
  MultipleIterator::__ construct —构造一个新的MultipleIterator
  MultipleIterator::containsIterator —检查是否附加了迭代器
  MultipleIterator::countIterators —获取附加的迭代器实例的数量
  MultipleIterator::current —获取注册的迭代器实例
  MultipleIterator::detachIterator —分离迭代器
  MultipleIterator::getFlags —获取标志信息
  MultipleIterator::key —获取注册的迭代器实例
  MultipleIterator::next-将所有附加的迭代器实例向前移动
  MultipleIterator::rewind —倒退所有附加的迭代器实例
  MultipleIterator::setFlags —设置标志
  MultipleIterator::valid —检查子迭代器的有效性
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;NoRewindIterator    (多个局部foreach循环中处理迭代器)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  NoRewindIterator::__ construct —构造一个NoRewindIterator
  NoRewindIterator::current —获取当前值
  NoRewindIterator::getInnerIterator —获取内部迭代器
  NoRewindIterator::key —获取当前密钥
  NoRewindIterator::next —转发到下一个元素
  NoRewindIterator::rewind —防止在内部迭代器上进行倒带操作
  NoRewindIterator::valid —验证迭代器
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ParentIterator    (使用RecursiveIteratorIterator进行递归迭代)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  ParentIterator::accept —确定可接受性
  ParentIterator::__ construct —构造一个ParentIterator
  ParentIterator::getChildren —返回ParentIterator中包含的内部迭代器的子代
  ParentIterator::hasChildren —检查内部迭代器的当前元素是否有子代
  ParentIterator::next-向前移动迭代器
  ParentIterator::rewind —倒退迭代器
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;RecursiveArrayIterator    (遍历Array和Object时取消设置和修改值和键)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  RecursiveArrayIterator::getChildren —返回当前项的迭代器（如果它是数组或对象）
  RecursiveArrayIterator::hasChildren —返回当前条目是数组还是对象
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;RecursiveCachingIterator    ()&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  RecursiveCachingIterator::__ construct —构造
  RecursiveCachingIterator::getChildren —将内部迭代器的子级作为RecursiveCachingIterator返回
  RecursiveCachingIterator::hasChildren —检查内部迭代器的当前元素是否有子代
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;RecursiveCallbackFilterIterator    ()&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  RecursiveCallbackFilterIterator::__ construct —从RecursiveIterator创建一个RecursiveCallbackFilterIterator
  RecursiveCallbackFilterIterator::getChildren —返回包含在RecursiveCallbackFilterIterator中的内部迭代器的子级
  RecursiveCallbackFilterIterator::hasChildren —检查内部迭代器的当前元素是否有子代
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;RecursiveDirectoryIterator    (在文件系统目录上进行递归迭代的接口)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  RecursiveDirectoryIterator::__ construct —构造一个RecursiveDirectoryIterator
  RecursiveDirectoryIterator::getChildren —返回当前条目的迭代器（如果它是目录）
  RecursiveDirectoryIterator::getSubPath —获取子路径
  RecursiveDirectoryIterator::getSubPathname —获取子路径和名称
  RecursiveDirectoryIterator::hasChildren —返回当前条目是否是目录，而不是&amp;#39;。 要么 &amp;#39;..&amp;#39;
  RecursiveDirectoryIterator::key —当前目录条目的返回路径和文件名
  RecursiveDirectoryIterator::next —移至下一个条目
  RecursiveDirectoryIterator::rewind —将目录倒回开始
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;RecursiveFilterIterator    (自定义过滤器/必须在子类中实现)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  RecursiveFilterIterator::__ construct —从RecursiveIterator创建一个RecursiveFilterIterator
  RecursiveFilterIterator::getChildren —返回RecursiveFilterIterator中包含的内部迭代器的子代
  RecursiveFilterIterator::hasChildren —检查内部迭代器的当前元素是否有子代
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;RecursiveIteratorIterator    (通过递归迭代器进行迭代)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  RecursiveIteratorIterator::beginChildren —开始子级
  RecursiveIteratorIterator::beginIteration —开始迭代
  RecursiveIteratorIterator::callGetChildren —获取孩子
  RecursiveIteratorIterator::callHasChildren —有孩子
  RecursiveIteratorIterator::__ construct —构造一个RecursiveIteratorIterator
  RecursiveIteratorIterator::current —访问当前元素值
  RecursiveIteratorIterator::endChildren —结束子级
  RecursiveIteratorIterator::endIteration —结束迭代
  RecursiveIteratorIterator::getDepth —获取递归迭代的当前深度
  RecursiveIteratorIterator::getInnerIterator —获取内部迭代器
  RecursiveIteratorIterator::getMaxDepth —获取最大深度
  RecursiveIteratorIterator::getSubIterator —当前的活动子迭代器
  RecursiveIteratorIterator::key —访问当前密钥
  RecursiveIteratorIterator::next —移至下一个元素
  RecursiveIteratorIterator::nextElement —下一个元素
  RecursiveIteratorIterator::rewind —将迭代器后退到顶级内部迭代器的第一个元素
  RecursiveIteratorIterator::setMaxDepth —设置最大深度
  RecursiveIteratorIterator::valid —检查当前位置是否有效
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;RecursiveRegexIterator    (通过正则表达式过滤另一个递归迭代器)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  RecursiveRegexIterator::__ construct —创建一个新的RecursiveRegexIterator
  RecursiveRegexIterator::getChildren —返回当前条目的迭代器
  RecursiveRegexIterator::hasChildren —返回是否可以为当前条目获取迭代器
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;RecursiveTreeIterator    (允许在RecursiveIterator上进行迭代以生成ASCII图形树)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  RecursiveTreeIterator::beginChildren —开始子级
  RecursiveTreeIterator::beginIteration —开始迭代
  RecursiveTreeIterator::callGetChildren —获取孩子
  RecursiveTreeIterator::callHasChildren —有孩子
  RecursiveTreeIterator::__ construct —构造一个RecursiveTreeIterator
  RecursiveTreeIterator::current —获取当前元素
  RecursiveTreeIterator::endChildren —结束子级
  RecursiveTreeIterator::endIteration —结束迭代
  RecursiveTreeIterator::getEntry —获取当前条目
  RecursiveTreeIterator::getPostfix —获取后缀
  RecursiveTreeIterator::getPrefix —获取前缀
  RecursiveTreeIterator::key —获取当前元素的键
  RecursiveTreeIterator::next —移至下一个元素
  RecursiveTreeIterator::nextElement —下一个元素
  RecursiveTreeIterator::rewind —倒退迭代器
  RecursiveTreeIterator::setPostfix —设置后缀
  RecursiveTreeIterator::setPrefixPart —设置前缀的一部分
  RecursiveTreeIterator::valid —检查有效性
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;RegexIterator    (基于正则表达式过滤另一个迭代器)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  RegexIterator::accept —获取接受状态
  RegexIterator::__ construct —创建一个新的RegexIterator
  RegexIterator::getFlags —获取标志
  RegexIterator::getMode —返回操作模式
  RegexIterator::getPregFlags —返回正则表达式标志
  RegexIterator::getRegex —返回当前的正则表达式
  RegexIterator::setFlags —设置标志
  RegexIterator::setMode-设置操作模式
  RegexIterator::setPregFlags —设置正则表达式标志
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;&lt;h2 id=&#34;接口&#34;&gt;&lt;a href=&#34;#接口&#34; class=&#34;headerlink&#34; title=&#34;接口&#34;&gt;&lt;/a&gt;接口&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Countable (验证变量的内容是可计数的值)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  Countable::count — 统计一个对象的元素个数
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;OuterIterator (迭代迭代器)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  OuterIterator::getInnerIterator —返回当前条目的内部迭代器
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;RecursiveIterator (递归迭代迭代器)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;RecursiveIterator::getChildren —返回当前条目的迭代器
RecursiveIterator::hasChildren —返回是否可以为当前条目创建迭代器
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;SeekableIterator ()&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;h2 id=&#34;异常&#34;&gt;&lt;a href=&#34;#异常&#34; class=&#34;headerlink&#34; title=&#34;异常&#34;&gt;&lt;/a&gt;异常&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;BadFunctionCallException (如果回调引用未定义的函数或缺少某些参数，则抛出异常)&lt;/li&gt;
&lt;li&gt;BadMethodCallException (当一个回调方法是一个未定义的方法或缺失一些参数时会抛出该异常)&lt;/li&gt;
&lt;li&gt;DomainException (如果值不遵循定义的有效数据域，则抛出异常)&lt;/li&gt;
&lt;li&gt;InvalidArgumentException (如果参数不是期望的类型，则抛出异常)&lt;/li&gt;
&lt;li&gt;LengthException (如果长度无效，则抛出异常)&lt;/li&gt;
&lt;li&gt;LogicException (表示程序逻辑错误的异常。 这种异常应直接导致代码中的修复)&lt;/li&gt;
&lt;li&gt;OutOfBoundsException (如果值不是有效键，则抛出异常。 这表示在编译时无法检测到的错误)&lt;/li&gt;
&lt;li&gt;OutOfRangeException (请求非法索引时引发异常)&lt;/li&gt;
&lt;li&gt;OverflowException (将元素添加到完整容器中时引发异常)&lt;/li&gt;
&lt;li&gt;RangeException (引发异常以指示程序执行期间的范围错误。通常，这意味着除下溢/上溢外还存在算术错误。)&lt;/li&gt;
&lt;li&gt;RuntimeException (如果发生仅在运行时才能发现的错误，则引发异常。)&lt;/li&gt;
&lt;li&gt;UnderflowException (对空容器执行无效操作（例如删除元素）时引发的异常。)&lt;/li&gt;
&lt;li&gt;UnexpectedValueException (如果一个值与一组值不匹配，则抛出异常。通常，当一个函数调用另一个函数并期望返回值是某种类型或不包括与算术或缓冲区相关的错误的值时，就会发生这种情况。)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;h2 id=&#34;SPL函数&#34;&gt;&lt;a href=&#34;#SPL函数&#34; class=&#34;headerlink&#34; title=&#34;SPL函数&#34;&gt;&lt;/a&gt;SPL函数&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.php.net/manual/zh/function.class-implements.php&#34;&gt;class_implements&lt;/a&gt; — 返回指定的类实现的所有接口。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.php.net/manual/zh/function.class-parents.php&#34;&gt;class_parents&lt;/a&gt; — 返回指定类的父类。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.php.net/manual/zh/function.class-uses.php&#34;&gt;class_uses&lt;/a&gt; — 返回给定类使用的类型&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.php.net/manual/zh/function.iterator-apply.php&#34;&gt;iterator_apply&lt;/a&gt; — 为迭代器中每个元素调用一个用户自定义函数&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.php.net/manual/zh/function.iterator-count.php&#34;&gt;iterator_count&lt;/a&gt; — 计算迭代器中元素的个数&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.php.net/manual/zh/function.iterator-to-array.php&#34;&gt;iterator_to_array&lt;/a&gt; — 将迭代器中的元素拷贝到数组&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.php.net/manual/zh/function.spl-autoload-call.php&#34;&gt;spl_autoload_call&lt;/a&gt; — 尝试调用所有已注册的__autoload()函数来装载请求类&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.php.net/manual/zh/function.spl-autoload-extensions.php&#34;&gt;spl_autoload_extensions&lt;/a&gt; — 注册并返回spl_autoload函数使用的默认文件扩展名。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.php.net/manual/zh/function.spl-autoload-functions.php&#34;&gt;spl_autoload_functions&lt;/a&gt; — 返回所有已注册的__autoload()函数。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.php.net/manual/zh/function.spl-autoload-register.php&#34;&gt;spl_autoload_register&lt;/a&gt; — 注册给定的函数作为 __autoload 的实现&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.php.net/manual/zh/function.spl-autoload-unregister.php&#34;&gt;spl_autoload_unregister&lt;/a&gt; — 注销已注册的__autoload()函数&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.php.net/manual/zh/function.spl-autoload.php&#34;&gt;spl_autoload&lt;/a&gt; — __autoload()函数的默认实现&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.php.net/manual/zh/function.spl-classes.php&#34;&gt;spl_classes&lt;/a&gt; — 返回所有可用的SPL类&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.php.net/manual/zh/function.spl-object-hash.php&#34;&gt;spl_object_hash&lt;/a&gt; — 返回指定对象的hash id&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.php.net/manual/zh/function.spl-object-id.php&#34;&gt;spl_object_id&lt;/a&gt; — 返回给定对象的整数对象句柄&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;&lt;h2 id=&#34;文件处理&#34;&gt;&lt;a href=&#34;#文件处理&#34; class=&#34;headerlink&#34; title=&#34;文件处理&#34;&gt;&lt;/a&gt;文件处理&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;SplFileInfo (单个文件的信息提供了一个高级的面向对象的接口)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;SplFileInfo::__ construct —构造一个新的SplFileInfo对象&lt;/li&gt;
&lt;li&gt;SplFileInfo::getATime —获取文件的最后访问时间&lt;/li&gt;
&lt;li&gt;SplFileInfo::getBasename —获取文件的基本名称&lt;/li&gt;
&lt;li&gt;SplFileInfo::getCTime —获取文件inode修改时间&lt;/li&gt;
&lt;li&gt;SplFileInfo::getExtension —获取文件扩展名&lt;/li&gt;
&lt;li&gt;SplFileInfo::getFileInfo —获取文件的SplFileInfo对象&lt;/li&gt;
&lt;li&gt;SplFileInfo::getFilename —获取文件名&lt;/li&gt;
&lt;li&gt;SplFileInfo::getGroup —获取文件组&lt;/li&gt;
&lt;li&gt;SplFileInfo::getInode —获取文件的索引节点&lt;/li&gt;
&lt;li&gt;SplFileInfo::getLinkTarget —获取链接的目标&lt;/li&gt;
&lt;li&gt;SplFileInfo::getMTim​​e —获取上次修改时间&lt;/li&gt;
&lt;li&gt;SplFileInfo::getOwner —获取文件的所有者&lt;/li&gt;
&lt;li&gt;SplFileInfo::getPath —获取不带文件名的路径&lt;/li&gt;
&lt;li&gt;SplFileInfo::getPathInfo —获取路径的SplFileInfo对象&lt;/li&gt;
&lt;li&gt;SplFileInfo::getPathname —获取文件的路径&lt;/li&gt;
&lt;li&gt;SplFileInfo::getPerms —获取文件权限&lt;/li&gt;
&lt;li&gt;SplFileInfo::getRealPath —获取文件的绝对路径&lt;/li&gt;
&lt;li&gt;SplFileInfo::getSize —获取文件大小&lt;/li&gt;
&lt;li&gt;SplFileInfo::getType —获取文件类型&lt;/li&gt;
&lt;li&gt;SplFileInfo::isDir —判断文件是否为目录&lt;/li&gt;
&lt;li&gt;SplFileInfo::isExecutable —告诉文件是否可执行&lt;/li&gt;
&lt;li&gt;SplFileInfo::isFile —告诉对象是否引用常规文件&lt;/li&gt;
&lt;li&gt;SplFileInfo::isLink —告诉文件是否是链接&lt;/li&gt;
&lt;li&gt;SplFileInfo::isReadable —告诉文件是否可读&lt;/li&gt;
&lt;li&gt;SplFileInfo::isWritable —告诉条目是否可写&lt;/li&gt;
&lt;li&gt;SplFileInfo::openFile —获取文件的SplFileObject对象&lt;/li&gt;
&lt;li&gt;SplFileInfo::setFileClass —设置与SplFileInfo::openFile一起使用的类&lt;/li&gt;
&lt;li&gt;SplFileInfo::setInfoClass —设置与SplFileInfo::getFileInfo和SplFileInfo::getPathInfo一起使用的类&lt;/li&gt;
&lt;li&gt;SplFileInfo::__ toString —以字符串形式返回文件的路径&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;SplFileObject (为文件提供了一个面向对象接口)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;SplFileObject::__construct —构造一个新的文件对象&lt;/li&gt;
&lt;li&gt;SplFileObject::current —检索文件的当前行&lt;/li&gt;
&lt;li&gt;SplFileObject::eof —文件结尾&lt;/li&gt;
&lt;li&gt;SplFileObject::fflush —将输出刷新到文件&lt;/li&gt;
&lt;li&gt;SplFileObject::fgetc —从文件中获取字符&lt;/li&gt;
&lt;li&gt;SplFileObject::fgetcsv —从文件中获取行并将其解析为CSV字段&lt;/li&gt;
&lt;li&gt;SplFileObject::fgets —从文件中获取行&lt;/li&gt;
&lt;li&gt;SplFileObject::fgetss —从文件和条带HTML标签获取行&lt;/li&gt;
&lt;li&gt;SplFileObject::flock —便携式文件锁定&lt;/li&gt;
&lt;li&gt;SplFileObject::fpassthru —在文件指针上输出所有剩余数据&lt;/li&gt;
&lt;li&gt;SplFileObject::fputcsv —将字段数组写为CSV行&lt;/li&gt;
&lt;li&gt;SplFileObject::fread —从文件读取&lt;/li&gt;
&lt;li&gt;SplFileObject::fscanf —根据格式分析文件中的输入&lt;/li&gt;
&lt;li&gt;SplFileObject::fseek —寻找位置&lt;/li&gt;
&lt;li&gt;SplFileObject::fstat —获取有关文件的信息&lt;/li&gt;
&lt;li&gt;SplFileObject::ftell —返回当前文件位置&lt;/li&gt;
&lt;li&gt;SplFileObject::ftruncate —将文件截断为给定的长度&lt;/li&gt;
&lt;li&gt;SplFileObject::fwrite-写入文件&lt;/li&gt;
&lt;li&gt;SplFileObject::getChildren —无目的&lt;/li&gt;
&lt;li&gt;SplFileObject::getCsvControl —获取CSV的分隔符，附件和转义符&lt;/li&gt;
&lt;li&gt;SplFileObject::getCurrentLine — SplFileObject::fgets的别名&lt;/li&gt;
&lt;li&gt;SplFileObject::getFlags —获取SplFileObject的标志&lt;/li&gt;
&lt;li&gt;SplFileObject::getMaxLineLen —获取最大行长&lt;/li&gt;
&lt;li&gt;SplFileObject::hasChildren — SplFileObject没有孩子&lt;/li&gt;
&lt;li&gt;SplFileObject::key —获取行号&lt;/li&gt;
&lt;li&gt;SplFileObject::next —阅读下一行&lt;/li&gt;
&lt;li&gt;SplFileObject::rewind —将文件倒退到第一行&lt;/li&gt;
&lt;li&gt;SplFileObject::seek —搜寻到指定的行&lt;/li&gt;
&lt;li&gt;SplFileObject::setCsvControl —设置CSV的分隔符，附件和转义符&lt;/li&gt;
&lt;li&gt;SplFileObject::setFlags —设置SplFileObject的标志&lt;/li&gt;
&lt;li&gt;SplFileObject::setMaxLineLen —设置最大行长&lt;/li&gt;
&lt;li&gt;SplFileObject::__ toString — SplFileObject::fgets的别名&lt;/li&gt;
&lt;li&gt;SplFileObject::valid —不在EOF&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;SplTempFileObject (为临时文件提供了一个面向对象的接口)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;SplTempFileObject::__ construct —构造一个新的临时文件对象&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;h2 id=&#34;各种类及接口&#34;&gt;&lt;a href=&#34;#各种类及接口&#34; class=&#34;headerlink&#34; title=&#34;各种类及接口&#34;&gt;&lt;/a&gt;各种类及接口&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;ArrayObject (允许对象作为数组)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ArrayObject::append —追加新的值作为最后一个元素。&lt;/li&gt;
&lt;li&gt;ArrayObject::asort —按值对条目进行排序&lt;/li&gt;
&lt;li&gt;ArrayObject::__ construct —构造一个新的数组对象&lt;/li&gt;
&lt;li&gt;ArrayObject::count —统计ArrayObject内公共属性的数量&lt;/li&gt;
&lt;li&gt;ArrayObject::exchangeArray —将阵列交换为另一个&lt;/li&gt;
&lt;li&gt;ArrayObject::getArrayCopy —创建ArrayObject的副本&lt;/li&gt;
&lt;li&gt;ArrayObject::getFlags —获取行为标志&lt;/li&gt;
&lt;li&gt;ArrayObject::getIterator —从ArrayObject实例创建一个新的迭代器&lt;/li&gt;
&lt;li&gt;ArrayObject::getIteratorClass —获取ArrayObject的迭代器类名&lt;/li&gt;
&lt;li&gt;ArrayObject::ksort —按键对条目进行排序&lt;/li&gt;
&lt;li&gt;ArrayObject::natcasesort —使用不区分大小写的“自然顺序”算法对数组进行排序&lt;/li&gt;
&lt;li&gt;ArrayObject::natsort —使用“自然顺序”算法对条目进行排序&lt;/li&gt;
&lt;li&gt;ArrayObject::offsetExists —返回所请求的索引是否存在&lt;/li&gt;
&lt;li&gt;ArrayObject::offsetGet —返回指定索引处的值&lt;/li&gt;
&lt;li&gt;ArrayObject::offsetSet —为指定索引设置新的值&lt;/li&gt;
&lt;li&gt;ArrayObject::offsetUnset —重置指定索引处的值&lt;/li&gt;
&lt;li&gt;ArrayObject::serialize —序列化ArrayObject&lt;/li&gt;
&lt;li&gt;ArrayObject::setFlags —设置行为标志&lt;/li&gt;
&lt;li&gt;ArrayObject::setIteratorClass —设置ArrayObject的迭代器类名&lt;/li&gt;
&lt;li&gt;ArrayObject::uasort —使用用户定义的比较函数对条目进行排序并维护键关联&lt;/li&gt;
&lt;li&gt;ArrayObject::uksort —使用用户定义的比较函数按键对条目进行排序&lt;/li&gt;
&lt;li&gt;ArrayObject::unserialize —反序列化​​ArrayObject&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;SplObserver (SplObserver接口与SplSubject一起使用以实现观察者设计模式)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;SplObserver::update —接收主题更新&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;SplSubject (SplSubject接口与SplObserver一起使用以实现观察者设计模式)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;SplSubject::attach —附加一个SplObserver&lt;/li&gt;
&lt;li&gt;SplSubject::detach —分离观察者&lt;/li&gt;
&lt;li&gt;SplSubject::notify —通知观察者&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://erik.xyz/2019/11/16/php-design-pattern/</guid>
            <title>php设计模式</title>
            <link>https://erik.xyz/2019/11/16/php-design-pattern/</link>
            <category>php</category>
            <category>php设计模式</category>
            <pubDate>Sat, 16 Nov 2019 21:42:00 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;设计模式 一书介绍了很多此类概念。当时，我还在学习面向对象 (OO)，因此我发现那本书中有许多概念都很难领会。但是，随着越来越熟悉 OO 概念 —— 尤其是接口和继承的使用 —— 我开始看到设计模式中的实际价值。作为一名应用程序开发人员，即使从不了解任何模式或者如何及何时使用这些模式，对您的职业生涯也没有什么大的影响。但是，我发现了解这些模式以及 developerWorks 文章 “五种常见 PHP 设计模式” 中介绍的那些模式的优秀知识后（请参阅 参考资料），您可以完成两件事情：&lt;/p&gt;
&lt;p&gt;启用高带宽会话&lt;br&gt;如果了解设计模式，您将能够更快地构建可靠的 OO 应用程序。但当整个开发团队知道各种模式时，您可以突然拥有非常高的带宽会话。您不再需要讨论将到处使用的所有类。相反，您可以与其他人谈论模式。“我要在这里引用一个单例（singleton），然后使用迭代器遍历对象集合，然后……” 比遍历构成这些模式的类、方法和接口快很多。单是通信效率一项就值得花时间以团队的形式通过会话来研究模式。&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;&lt;br&gt;减少痛苦的教训&lt;br&gt;每个设计模式都描述了一种经过验证的解决常见问题的方法。因此，您无需担心设计是不是正确的，只要您已经选择了提供所需优点的模式。&lt;br&gt;缺陷&lt;br&gt;有句谚语说得好：“当您手中拿着一把锤子时，所有事物看上去都像钉子”。当您认为自己找到一个优秀模式时，您可能会尝试到处使用它，即使在不应当使用它的位置。记住您必须考虑正在学习的模式的使用目的，不要为了使用模式而把这些模式强行应用到应用程序的各个部分中。&lt;/p&gt;
&lt;p&gt;本文将介绍可用于改进 PHP 代码的五个模式。每个模式都将介绍一个特定场景。可以在 下载 部分中获得这些模式的 PHP 代码。&lt;/p&gt;
&lt;p&gt;要求&lt;br&gt;要发挥本文的最大功效并使用示例，需要在计算机中安装以下软件：&lt;/p&gt;
&lt;p&gt;PHP V5 或更高版本（本文是使用 PHP V5.2.4 撰写的）&lt;br&gt;压缩程序，例如 WinZIP（用于压缩可下载的代码归档）&lt;br&gt;注：虽然您也可以使用纯文本编辑器，但是我发现拥有语法高亮显示和语法纠错功能的编辑器真的很有帮助。本文中的示例是使用 Eclipse PHP Development Tools (PDT) 编写的。&lt;/p&gt;
&lt;p&gt;——摘自《另外五个PHP设计模式》&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;命令链模式&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;?php&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; * 艾瑞可erik&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; * https://erik.xyz&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; * 命令链模式&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; * Interface ICommand&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;interface ICommand&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    function onCommand($name, $args);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;class CommandChain&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    private $_command = [];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    public static function load()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        return new CommandChain();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    public function addCommand($cmd)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        $this-&amp;gt;_command[] = $cmd;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    public function runCommand($name, $args)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        foreach ($this-&amp;gt;_command as $cmd) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            if ($cmd-&amp;gt;onCommand($name, $args)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                return;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;class UserCommand implements ICommand&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    public static function load()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        return new UserCommand();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    public function OnCommand($name, $args)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if ($name != &amp;#x27;addUser&amp;#x27;) return false;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        echo(&amp;quot;UserCommand handling &amp;#x27;addUser&amp;#x27;\n&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        return true;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;class MailCommand implements ICommand&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    public static function load()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        return new MailCommand();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    public function onCommand($name, $args)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if ($name != &amp;#x27;mail&amp;#x27;) return false;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        echo(&amp;quot;MailCommand handling &amp;#x27;mail&amp;#x27;\n&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        return true;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$cc = CommandChain::load();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$cc-&amp;gt;addCommand(UserCommand::load());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$cc-&amp;gt;addCommand(MailCommand::load());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$cc-&amp;gt;runCommand(&amp;#x27;addUser&amp;#x27;, null);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$cc-&amp;gt;runCommand(&amp;#x27;mail&amp;#x27;, null);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;委托模式&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;?php&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; * 艾瑞可erik&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; * https://erik.xyz&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; * Class bank&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; * 委托模式&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;class bank&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    protected $info = [];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    public static function load()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        return new bank();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    /**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     * 传入参数，设置基本信息&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     * @param $type&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     * @param $money&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     * 设置银行存款类型&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    public function updateBankInfo($type, $money)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        $this-&amp;gt;info[$type] = $money;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    public function bankWithdraw($bankType)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        $obj = $bankType::load();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        return $obj-&amp;gt;bankMain($this-&amp;gt;info);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; * 存款操作&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; * Class bankDeposit&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;class bankDeposit&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    public static function load()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        return new bankDeposit();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    public function bankMain($data)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        return $data[&amp;#x27;bankDeposit&amp;#x27;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; * 取款操作&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; * Class bankWithdraw&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;class bankWithdraw&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    public static function load()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        return new bankWithdraw();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    public function bankMain($data)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        return $data[&amp;#x27;bankWithdraw&amp;#x27;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$bank = bank::load();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//设置数据&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$bank-&amp;gt;updateBankInfo(&amp;quot;bankWithdraw&amp;quot;, 500);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$bank-&amp;gt;updateBankInfo(&amp;quot;bankDeposit&amp;quot;, 100);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//存款&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$bankReturn = $bank-&amp;gt;bankWithdraw(&amp;quot;bankDeposit&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;echo &amp;quot;存款&amp;quot; . $bankReturn . PHP_EOL;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//取款&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$bankReturn = $bank-&amp;gt;bankWithdraw(&amp;quot;bankWithdraw&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;echo &amp;quot;取款&amp;quot; . $bankReturn . PHP_EOL;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;工厂模式(1)&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;?php&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; * 艾瑞可erik&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; * https://erik.xyz&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; * 工厂模式&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; /**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  * 支付接口&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;interface PayErik&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    public function payMethodErik();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;class AlipayErik implements PayErik&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    public function payMethodErik()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        echo &amp;#x27;支付宝支付&amp;#x27;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;class WxpayErik implements PayErik&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    public function payMethodErik()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        echo &amp;#x27;微信支付&amp;#x27;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; * 支付工厂类&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;class PayFactoryErik&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    public static function factoryErik($class_name)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        return new $class_name();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$obj=PayFactoryErik::factoryErik(&amp;#x27;alipayErik&amp;#x27;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$pay=$obj-&amp;gt;PayMethodErik();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;echo PHP_EOL;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print_r($pay);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;echo PHP_EOL;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;工厂模式(2)&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;?php&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; * 艾瑞可erik&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; * https://erik.xyz&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; * 工厂模式&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; /**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  * 支付接口&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;interface PayErik&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    public function payMethodErik();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;class AlipayErik implements PayErik&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    public function load()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        return new alipayErik();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    public function payMethodErik()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        echo &amp;#x27;支付宝支付&amp;#x27;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;class WxpayErik implements PayErik&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    public function load()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        return new wxpayErik();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    public function payMethodErik()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        echo &amp;#x27;微信支付&amp;#x27;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$alipayErik=AlipayErik::load();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$payErik=$alipayErik-&amp;gt;payMethodErik();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;echo PHP_EOL;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print_r($payErik);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;unset($alipayErik);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;echo PHP_EOL;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$wxpayErik=WxpayErik::load();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$payEriks=$wxpayErik-&amp;gt;payMethodErik();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;echo PHP_EOL;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print_r($payEriks);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;unset($payEriks);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;echo PHP_EOL;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;观察者模式&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;?php&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; *艾瑞可erik&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; *https://erik.xyz&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; * 观察者模式&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; * Interface PayLoggerErik&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//支付日志&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;interface PayLoggerErik&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    public function onChangeErik($sender, $args);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//支付选择&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;interface PayTypeErik&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    public function addObserverErik($observer);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;class PayListErik implements PayTypeErik&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    private $observers = [];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    public function load()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        return new PayListErik();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    public function addCustomerErik($method, $name)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if (empty($method)) &amp;#123;     &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            return false;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        foreach ($this-&amp;gt;observers as $obs) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            $obs-&amp;gt;$method($this, $name);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    public function addObserverErik($observer)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        $this-&amp;gt;observers[] = $observer;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;/**  日志记录&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; * Class PayListLoggerErik&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;class PayListLoggerErik implements PayLoggerErik&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    public function load()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        return new PayListLoggerErik();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    public function onChangeErik($sender, $args)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        echo &amp;quot;选择成功！&amp;quot; . $args . PHP_EOL;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    public function setLoggerErik($sender, $args)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        echo &amp;quot;设置成功了！&amp;quot; . $args. PHP_EOL;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$payList = PayListErik::load();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$payList-&amp;gt;addObserverErik(PayListLoggerErik::load());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$payList-&amp;gt;addCustomerErik(&amp;#x27;onChangeErik&amp;#x27;, &amp;quot;艾瑞可erik(https://erik.xyz),新增日志记录引入&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$data = $payList-&amp;gt;addCustomerErik(&amp;#x27;setLoggerErik&amp;#x27;, &amp;quot;艾瑞可erik(https://erik.xyz)&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;单例模式&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;?php&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; * 艾瑞可erik&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; * https://erik.xyz&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; * &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; * 单例模式&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;class SingleErik&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   private $props=[];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   private static $instanceErik;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   final private function __construct()&amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   //单例方法&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   public static function getInstanceErik()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      if(empty(self::$instanceErik))&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;         self::$instanceErik=new SingleErik();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      return self::$instanceErik;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   //单例定义方法&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   public function setPropertyErik($key,$val)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      $this-&amp;gt;props[$key]=$val;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   public function getPropertyErik($key)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      return $this-&amp;gt;props[$key];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   final protected function __clone()&amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$perf=singleErik::getInstanceErik();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$perf-&amp;gt;setPropertyErik(&amp;quot;blog&amp;quot;,[&amp;quot;title&amp;quot;=&amp;gt;&amp;quot;艾瑞可erik&amp;quot;,&amp;quot;url&amp;quot;=&amp;gt;&amp;quot;https://erik.xyz&amp;quot;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$getData=$perf-&amp;gt;getPropertyErik(&amp;quot;blog&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print_r($getData);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//销毁引用，释放空间&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;unset($perf);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;策略模式&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;89&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;?php&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; * 艾瑞可erik&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; * https://erik.xyz&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; * Interface IStrategy&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; * 策略模式&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;interface IStrategyErik&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    function filter($record);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;class FindAfterStrategyErik implements IStrategyErik&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    private $_name;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    public function __construct($name)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        $this-&amp;gt;_name = $name;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    public static function load($name)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        return new FindAfterStrategyErik($name);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    public function filter($record)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        return strcmp($this-&amp;gt;_name, $record) &amp;lt;= 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;class RandomStrategyErik implements IStrategyErik&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    public static function load()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        return new RandomStrategyErik();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    public function filter($record)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        return rand(0, 1) &amp;gt;= 0.5;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;class UserListErik&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    private $_list = [];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    public static function load($arr = [])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        return new UserListErik($arr);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    public function __construct($names)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if ($names != null) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            foreach ($names as $name) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                $this-&amp;gt;_list[] = $name;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    public function add($name)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        $this-&amp;gt;_list[] = $name;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    public function find($filter)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        $recs = [];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        foreach ($this-&amp;gt;_list as $user) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            if ($filter-&amp;gt;filter($user)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                $recs[] = $user;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        return $recs;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$ul = UserListErik::load([&amp;quot;Andy&amp;quot;, &amp;quot;Jack&amp;quot;, &amp;quot;Lori&amp;quot;, &amp;quot;Megan&amp;quot;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$f1 = $ul-&amp;gt;find(FindAfterStrategyErik::load(&amp;quot;J&amp;quot;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print_r($f1);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$f2 = $ul-&amp;gt;find(RandomStrategyErik::load());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print_r($f2);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;参考资料：&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.ibm.com/developerworks/cn/opensource/os-php-designpatterns/?mhsrc=ibmsearch_a&amp;amp;mhq=php%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F&#34;&gt;另外五个 PHP 设计模式&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.kancloud.cn/digest/php-src/136249&#34;&gt;PHPer进阶&lt;/a&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://erik.xyz/2019/11/03/php-get-day-data/</guid>
            <title>php获取本年、本月、本周时间戳和日期</title>
            <link>https://erik.xyz/2019/11/03/php-get-day-data/</link>
            <category>php</category>
            <category>php时间</category>
            <pubDate>Sun, 03 Nov 2019 19:12:00 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;设置时区&lt;br&gt;date_default_timezone_set(“Asia/Shanghai”);&lt;br&gt;date_default_timezone_set(‘PRC’);//这两种方法效果相同&lt;br&gt;1&lt;br&gt;2&lt;br&gt;时间戳转日期，可以用date(‘Y-m-s h:i:s’, 具体时间戳来实现)&lt;br&gt;日期转换时间戳，用strtotime(“date()”).&lt;br&gt;&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;&lt;br&gt;时间戳格式&lt;br&gt;    //获取今日开始时间戳和结束时间戳&lt;br&gt;    $beginToday=mktime(0,0,0,date(‘m’),date(‘d’),date(‘Y’));&lt;br&gt;    $endToday=mktime(0,0,0,date(‘m’),date(‘d’)+1,date(‘Y’))-1;  &lt;/p&gt;
&lt;pre&gt;&lt;code&gt;//获取昨日起始时间戳和结束时间戳  
$beginYesterday=mktime(0,0,0,date(&amp;#39;m&amp;#39;),date(&amp;#39;d&amp;#39;)-1,date(&amp;#39;Y&amp;#39;));  
$endYesterday=mktime(0,0,0,date(&amp;#39;m&amp;#39;),date(&amp;#39;d&amp;#39;),date(&amp;#39;Y&amp;#39;))-1;  

//获取本周起始时间戳和结束时间戳   
$beginThisweek = mktime(0,0,0,date(&amp;#39;m&amp;#39;),date(&amp;#39;d&amp;#39;)-date(&amp;#39;w&amp;#39;)+1,date(&amp;#39;y&amp;#39;));  
$endThisweek=time();  

//获取上周起始时间戳和结束时间戳  
$beginLastweek=mktime(0,0,0,date(&amp;#39;m&amp;#39;),date(&amp;#39;d&amp;#39;)-date(&amp;#39;w&amp;#39;)+1-7,date(&amp;#39;Y&amp;#39;));  
$endLastweek=mktime(23,59,59,date(&amp;#39;m&amp;#39;),date(&amp;#39;d&amp;#39;)-date(&amp;#39;w&amp;#39;)+7-7,date(&amp;#39;Y&amp;#39;));  

//获取本月起始时间戳和结束时间戳  
$beginThismonth=mktime(0,0,0,date(&amp;#39;m&amp;#39;),1,date(&amp;#39;Y&amp;#39;));  
$endThismonth=mktime(23,59,59,date(&amp;#39;m&amp;#39;),date(&amp;#39;t&amp;#39;),date(&amp;#39;Y&amp;#39;));  

 //上个月的起始时间:  
$begin_time = strtotime(date(&amp;#39;Y-m-01 00:00:00&amp;#39;,strtotime(&amp;#39;-1 month&amp;#39;)));  
$end_time = strtotime(date(&amp;quot;Y-m-d 23:59:59&amp;quot;, strtotime(-date(&amp;#39;d&amp;#39;).&amp;#39;day&amp;#39;)));  

$begin_year = strtotime(date(&amp;quot;Y&amp;quot;,time()).&amp;quot;-1&amp;quot;.&amp;quot;-1&amp;quot;); //本年开始  
$end_year = strtotime(date(&amp;quot;Y&amp;quot;,time()).&amp;quot;-12&amp;quot;.&amp;quot;-31&amp;quot;); //本年结束  

//现在的时间到第二天凌晨相差的时间戳  
$time = (strtotime(date(&amp;#39;Y-m-d&amp;#39;))+3600*24) - time() ; 
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;日期格式&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;echo &amp;#x27;&amp;lt;br&amp;gt;上周起始时间:&amp;lt;br&amp;gt;&amp;#x27;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;echo date(&amp;quot;Y-m-d H:i:s&amp;quot;,mktime(0, 0 , 0,date(&amp;quot;m&amp;quot;),date(&amp;quot;d&amp;quot;)-date(&amp;quot;w&amp;quot;)+1-7,date(&amp;quot;Y&amp;quot;))),&amp;quot;\n&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;echo date(&amp;quot;Y-m-d H:i:s&amp;quot;,mktime(23,59,59,date(&amp;quot;m&amp;quot;),date(&amp;quot;d&amp;quot;)-date(&amp;quot;w&amp;quot;)+7-7,date(&amp;quot;Y&amp;quot;))),&amp;quot;\n&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;echo &amp;#x27;&amp;lt;br&amp;gt;本周起始时间:&amp;lt;br&amp;gt;&amp;#x27;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;echo date(&amp;quot;Y-m-d H:i:s&amp;quot;,mktime(0, 0 , 0,date(&amp;quot;m&amp;quot;),date(&amp;quot;d&amp;quot;)-date(&amp;quot;w&amp;quot;)+1,date(&amp;quot;Y&amp;quot;))),&amp;quot;\n&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;echo date(&amp;quot;Y-m-d H:i:s&amp;quot;,mktime(23,59,59,date(&amp;quot;m&amp;quot;),date(&amp;quot;d&amp;quot;)-date(&amp;quot;w&amp;quot;)+7,date(&amp;quot;Y&amp;quot;))),&amp;quot;\n&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;echo &amp;#x27;&amp;lt;br&amp;gt;上月起始时间:&amp;lt;br&amp;gt;&amp;#x27;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;echo date(&amp;quot;Y-m-d H:i:s&amp;quot;,mktime(0, 0 , 0,date(&amp;quot;m&amp;quot;)-1,1,date(&amp;quot;Y&amp;quot;))),&amp;quot;\n&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;echo date(&amp;quot;Y-m-d H:i:s&amp;quot;,mktime(23,59,59,date(&amp;quot;m&amp;quot;) ,0,date(&amp;quot;Y&amp;quot;))),&amp;quot;\n&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;echo &amp;#x27;&amp;lt;br&amp;gt;本月起始时间:&amp;lt;br&amp;gt;&amp;#x27;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;echo date(&amp;quot;Y-m-d H:i:s&amp;quot;,mktime(0, 0 , 0,date(&amp;quot;m&amp;quot;),1,date(&amp;quot;Y&amp;quot;))),&amp;quot;\n&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;echo date(&amp;quot;Y-m-d H:i:s&amp;quot;,mktime(23,59,59,date(&amp;quot;m&amp;quot;),date(&amp;quot;t&amp;quot;),date(&amp;quot;Y&amp;quot;))),&amp;quot;\n&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//本年起始&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;echo date(‘Y-01-01’); &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//结束日期 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;echo date(‘Y-12-31’);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;原文链接：&lt;a href=&#34;https://blog.csdn.net/qq_40018938/article/details/81031414&#34;&gt;https://blog.csdn.net/qq_40018938/article/details/81031414&lt;/a&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://erik.xyz/2019/09/03/zhua-qu-tu-pian-dao-ben-di-bing-sheng-cheng-sql/</guid>
            <title>抓取页面图到本地，并生成sql</title>
            <link>https://erik.xyz/2019/09/03/zhua-qu-tu-pian-dao-ben-di-bing-sheng-cheng-sql/</link>
            <category>php</category>
            <category>php抓取图片</category>
            <category>php批量抓取页面图片</category>
            <pubDate>Tue, 03 Sep 2019 16:21:00 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;闲来无事就做个图片抓取。&lt;br&gt;把某网站的图片抓取后，保存在本地指定目录，同时生成写入数据库的sql语句。&lt;/p&gt;
&lt;p&gt;思路如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;获取页面图的url&lt;/li&gt;
&lt;li&gt;根据图片url下载到本地&lt;/li&gt;
&lt;li&gt;把下载好的图片存储到指定目录，同时生成写入数据库的sql&lt;/li&gt;
&lt;/ol&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;
&lt;p&gt;完整代码如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;?php


class RetileImg
&amp;#123;

    protected $url;   //请求地址

    protected $url_status = false; // false是http请求 true是https请求

    protected $img_path;  //图片存储地址

    protected $sql_path;  //sql语句保存地址

    protected $domain_name; //域名  如果有图片是相对路径就需要填写域名

    public function __construct($url, $url_status, $img_path, $sql_path, $domain_name)
    &amp;#123;
        $this-&amp;gt;url = $url;
        $this-&amp;gt;url_status = $url_status;
        $this-&amp;gt;img_path = $img_path . &amp;quot;/&amp;quot; . date(&amp;quot;Ymd&amp;quot;) . &amp;quot;/&amp;quot;;
        $this-&amp;gt;sql_path = $sql_path . &amp;quot;/&amp;quot;;
        $this-&amp;gt;domain_name = $domain_name;
    &amp;#125;

    /**获取页面
     * @return bool|string
     */
    public function curl_web()
    &amp;#123;
        $url = $this-&amp;gt;url;
        $url_status = $this-&amp;gt;url_status;
        $ch = curl_init($url);
        curl_setopt($ch, CURLOPT_URL, $url);
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
        curl_setopt($ch, CURLOPT_TIMEOUT, 100);
        curl_setopt($ch, CURLOPT_CONNECTTIMEOUT, 100);
        curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, $url_status);
        $ch_content = curl_exec($ch);
        return $ch_content;
    &amp;#125;

    /**匹配页面的图片路径
     * @param $content
     * @return mixed|null
     */
    public function get_img_from_html($content)
    &amp;#123;
        $pattern = &amp;quot;/&amp;lt;img.*?src=[\&amp;#39;|\&amp;quot;](.*?)[\&amp;#39;|\&amp;quot;].*?[\/]?&amp;gt;/&amp;quot;;
        $html_data = htmlspecialchars_decode($content);
        preg_match_all($pattern, $html_data, $match);
        if (!empty($match[1])) &amp;#123;
            return $match[1];
        &amp;#125;
        return null;
    &amp;#125;

    /**获取页面的所有图片路径
     * @return mixed|null
     */
    public function get_img_urls()
    &amp;#123;
        $url = $this-&amp;gt;url;
        $html_data = $this-&amp;gt;curl_web($url);
        $img_urls = $this-&amp;gt;get_img_from_html($html_data) ?? null;
        $domain_name = $this-&amp;gt;domain_name;
        $urls = [];
        foreach ($img_urls as $k =&amp;gt; $v) &amp;#123;
            if (empty($v)) &amp;#123;
                unset($k[$v]);
            &amp;#125;
            $http_top = mb_substr($v, 0, 4);
            if ($http_top != &amp;#39;http&amp;#39; &amp;amp;&amp;amp; !empty($domain_name)) &amp;#123;
                $v = $domain_name . $v;
            &amp;#125;;
            $urls[] = $v;
        &amp;#125;
        return $urls;
    &amp;#125;

    /**下载图片到本地
     * @throws Exception
     */
    public function download()
    &amp;#123;
        $img_urls = $this-&amp;gt;get_img_urls();
        $img_path = $this-&amp;gt;img_path;
        $sql_path = $this-&amp;gt;sql_path;
        $mimes = array(
            &amp;#39;bmp&amp;#39;,
            &amp;#39;gif&amp;#39;,
            &amp;#39;jpg&amp;#39;,
            &amp;#39;png&amp;#39;,
        );

        $sql = &amp;quot;insert into img_data (&amp;#39;img_name&amp;#39;,&amp;#39;img_url&amp;#39;,&amp;#39;img_description&amp;#39;,&amp;#39;add_time&amp;#39;) value (&amp;quot;;
        foreach ($img_urls as $k =&amp;gt; $v) &amp;#123;
            $ext = mb_substr($v, -3);
            // 如果符合我们要的类型
            if (in_array($ext, $mimes)) &amp;#123;
                $number = random_int(10, 99999);
                $img_name = date(&amp;quot;YmdHis&amp;quot;) . $number;
                $content = file_get_contents($v);
                if (!is_dir($img_path)) &amp;#123;
                    mkdir($img_path, 0777, true);
                &amp;#125;
                //echo &amp;quot;图片下载&amp;quot; . $content . PHP_EOL;
                $file_name = md5($img_name);
                $file_path = $img_path . $file_name . &amp;quot;.&amp;quot; . $ext;
                file_put_contents($file_path, $content);
                $sql .= &amp;quot;&amp;#39;&amp;quot; . $file_name . &amp;quot;&amp;#39;,&amp;quot;;
                $sql .= &amp;quot;&amp;#39;&amp;quot; . $file_path . &amp;quot;&amp;#39;,&amp;quot;;
                $sql .= &amp;quot;&amp;#39;&amp;quot; . $file_name . &amp;quot;&amp;#39;,&amp;quot;;
                $sql .= date(&amp;quot;Y-m-d H:i:s&amp;quot;);
            &amp;#125;
        &amp;#125;
        $sql .= &amp;quot;);&amp;quot;;
        if (!is_dir($sql_path)) &amp;#123;
            mkdir($sql_path, 0777, true);
        &amp;#125;
        file_put_contents($sql_path . &amp;quot;sql.txt&amp;quot;, $sql);
    &amp;#125;
&amp;#125;


//执行图片获取
header(&amp;quot;Content-type: text/html; charset=utf-8&amp;quot;);
$img_data = new RetileImg(
    &amp;quot;https://erik.xyz/2014/10/17/zhe-shi-yi-ge-kai-shi-de-jie-shu/&amp;quot;,
    true,
    &amp;quot;./img&amp;quot;,
    &amp;quot;./sql&amp;quot;,
    &amp;quot;https://erik.xyz&amp;quot;
);
$img_data-&amp;gt;download();
&lt;/code&gt;&lt;/pre&gt; ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://erik.xyz/2019/07/30/php-pei-zhi-zookeeper3-5-5-kuo-zhan/</guid>
            <title>php配置zookeeper3.5.5扩展</title>
            <link>https://erik.xyz/2019/07/30/php-pei-zhi-zookeeper3-5-5-kuo-zhan/</link>
            <category>php</category>
            <category>php-zookeeper</category>
            <category>zookeeper3.5.5</category>
            <category>php-zookeeper扩展</category>
            <pubDate>Tue, 30 Jul 2019 11:16:00 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;这两天想用用zookeeper，顺便做个提升。查了下官方给出的3.5.5和3.4.14。而php手册也有介绍配置方法，不过扩展好久没更新，就是试试用了。&lt;/p&gt;
&lt;p&gt;下载php-zookeeper扩展，放到本地编译、安装。在执行make命令的时候总是报错缺少lzookeeper_mt.so库。&lt;br&gt;官方搜索教程都是老版本的，说是在文件根目录src/c下生成库。可是我用的是3.5.5版本的，目录下根本没有。&lt;br&gt;根据官方文档可知，新版本分为bin和源码版，也就是说bin是编译好的，下载后配置一下cfg文件就可以用了。&lt;br&gt;&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;我下载的是bin版，已经编译好的，那就下载源码（&lt;a href=&#34;https://www-us.apache.org/dist/zookeeper/,&#34;&gt;zookeeper下载&lt;/a&gt;）版吧。在3.5.5中需要使用c端就必须编译安装库，在项目根目录下zookeeper-client中，怎么编译呢很懵逼。看官方文档（&lt;a href=&#34;https://erik.xyz/dev_books/zookeeper3.5.5/zookeeperProgrammers.html#C+Binding,,&#34;&gt;zookeeper3.5.5手册&lt;/a&gt;）是这样说的&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/img/201907/2019-07-30_18-10.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;感觉很复杂，其实梳理一下就明白了。不过我这被坑好几天。&lt;br&gt;先在zookeeper根目录下执行 ant compile_jute 命令，在zookeeper-client/zookeeper-client-c下生成目录generated&lt;/p&gt;
&lt;p&gt;然后在zookeeper-client/zookeeper-client-c执行命令autoreconf -if 如果此时报错，一般就是autoconf，automake和libtool这个三个软件没安装，安装好后重新执行autoreconf -if&lt;/p&gt;
&lt;p&gt;最后执行 ./configure –enable-debug 如果是开发或者测试环境就加–enable-debug&lt;/p&gt;
&lt;p&gt;接下make一下，一般来说到这里会报错&lt;br&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;rc/zookeeper.c: In function ‘print_completion_queue’:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;src/zookeeper.c:2542:5: error: null argument where non-null required (argument 1) [-Werror=nonnull]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     fprintf(LOGSTREAM,&amp;quot;Completion queue: &amp;quot;,&amp;quot;empty\n&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     ^~~~~~~&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;src/zookeeper.c:2542:23: error: too many arguments for format [-Werror=format-extra-args]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     fprintf(LOGSTREAM,&amp;quot;Completion queue: &amp;quot;,&amp;quot;empty\n&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                       ^~~~~~~~~~~~~~~~~~~~&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;src/zookeeper.c:2550:9: error: null argument where non-null required (argument 1) [-Werror=nonnull]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;         fprintf(LOGSTREAM,&amp;quot;%d,&amp;quot;,cptr-&amp;gt;xid);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;         ^~~~~~~&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;src/zookeeper.c:2553:5: error: null argument where non-null required (argument 1) [-Werror=nonnull]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     fprintf(LOGSTREAM,&amp;quot;end\n&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     ^~~~~~~&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;src/zookeeper.c: In function ‘format_endpoint_info’:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;src/zookeeper.c:4410:21: error: ‘%d’ directive writing between 1 and 5 bytes into a region of size between 0 and 127 [-Werror=format-overflow=]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     sprintf(buf,&amp;quot;%s:%d&amp;quot;,addrstr,ntohs(port));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                     ^~&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;src/zookeeper.c:4410:17: note: directive argument in the range [0, 65535]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     sprintf(buf,&amp;quot;%s:%d&amp;quot;,addrstr,ntohs(port));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                 ^~~~~~~&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;src/zookeeper.c:4410:5: note: ‘sprintf’ output between 3 and 134 bytes into a destination of size 128&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     sprintf(buf,&amp;quot;%s:%d&amp;quot;,addrstr,ntohs(port));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cc1: all warnings being treated as errors&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/img/201907/2019-07-30_14-21.jpg&#34; alt=&#34;&#34;&gt;&lt;br&gt;这里卡了好久,通过网上查找才知道编译的时候gcc版本不同。我本地是gcc8.8，立马换系统centos7&lt;/p&gt;
&lt;p&gt;在docker中安装centos7复制zookeeper源码、配置jdk、安装make、vim等软件后，以上步骤重新走一次就生成了，然后把生成的库（lib文件、include文件）复制一份放到本地zookeeper目录&lt;/p&gt;
&lt;p&gt;编译php-zookeeper扩展，执行。、configure的时候指定一下库目录就可以啦。&lt;br&gt;结束了。&lt;/p&gt;
&lt;p&gt;上一份跟官方组合的源码，带编译库&lt;a href=&#34;https://github.com/erikwang2013/zookeeper3.5.5&#34;&gt;zookeeper3.5.5&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/img/201907/2019-07-30_18-29.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://erik.xyz/2019/05/29/wu-xian-ji-fen-lei-chu-li/</guid>
            <title>无限极分类处理</title>
            <link>https://erik.xyz/2019/05/29/wu-xian-ji-fen-lei-chu-li/</link>
            <category>php</category>
            <category>无限极分类</category>
            <category>php无限极</category>
            <category>分类tree</category>
            <category>无限极分类树型</category>
            <pubDate>Wed, 29 May 2019 19:14:00 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;&lt;img src=&#34;https://erik.xyz/wp-content/uploads/2019/2019-05-29_18-41.png&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;近期有个关于无限分类关系的统计处理。要求使用树型结构，无奈用了layui的表格展示，外加插件treetable和导出插件excel。&lt;br&gt;针对无限极这块从父级查询子级很长见，但是要从子级查父级一下子懵逼了。&lt;br&gt;自己反复探索了几次。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;上代码。&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;111&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;112&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;113&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;114&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;115&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;116&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;117&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;118&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;119&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;120&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;121&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;122&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;123&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;124&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;125&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;126&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;128&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;129&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;130&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;131&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;132&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;133&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$arr = [&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    [&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#x27;id&amp;#x27; =&amp;gt; 1,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#x27;parentId&amp;#x27; =&amp;gt; -1,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#x27;name&amp;#x27; =&amp;gt; &amp;#x27;广东省&amp;#x27;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ],&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    [&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#x27;id&amp;#x27; =&amp;gt; 2,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#x27;parentId&amp;#x27; =&amp;gt; 1,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#x27;name&amp;#x27; =&amp;gt; &amp;#x27;深圳市&amp;#x27;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ],&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    [&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#x27;id&amp;#x27; =&amp;gt; 3,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#x27;parentId&amp;#x27; =&amp;gt; 2,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#x27;name&amp;#x27; =&amp;gt; &amp;#x27;南山区&amp;#x27;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ],&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    [&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#x27;id&amp;#x27; =&amp;gt; 4,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#x27;parentId&amp;#x27; =&amp;gt; 3,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#x27;name&amp;#x27; =&amp;gt; &amp;#x27;粤海街道办&amp;#x27;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ],&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    [&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#x27;id&amp;#x27; =&amp;gt; 5,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#x27;parentId&amp;#x27; =&amp;gt; -1,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#x27;name&amp;#x27; =&amp;gt; &amp;#x27;江西省&amp;#x27;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ],&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    [&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#x27;id&amp;#x27; =&amp;gt; 6,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#x27;parentId&amp;#x27; =&amp;gt; 5,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#x27;name&amp;#x27; =&amp;gt; &amp;#x27;吉安市&amp;#x27;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ],&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    [&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#x27;id&amp;#x27; =&amp;gt; 7,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#x27;parentId&amp;#x27; =&amp;gt; 6,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#x27;name&amp;#x27; =&amp;gt; &amp;#x27;吉州区&amp;#x27;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ],&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    [&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#x27;id&amp;#x27; =&amp;gt; 8,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#x27;parentId&amp;#x27; =&amp;gt; 7,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#x27;name&amp;#x27; =&amp;gt; &amp;#x27;河东街道办&amp;#x27;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ],&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    [&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#x27;id&amp;#x27; =&amp;gt; 9,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#x27;parentId&amp;#x27; =&amp;gt; 3,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#x27;name&amp;#x27; =&amp;gt; &amp;#x27;西丽街道办&amp;#x27;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ],&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    [&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#x27;id&amp;#x27; =&amp;gt; 10,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#x27;parentId&amp;#x27; =&amp;gt; 7,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#x27;name&amp;#x27; =&amp;gt; &amp;#x27;文山街道办&amp;#x27;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ],&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    [&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#x27;id&amp;#x27; =&amp;gt; 11,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#x27;parentId&amp;#x27; =&amp;gt; 6,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#x27;name&amp;#x27; =&amp;gt; &amp;#x27;青原区&amp;#x27;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//提取id为键&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;function changeData($data)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    $lists = [];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    foreach ($data as $k =&amp;gt; $v) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        $lists[$v[&amp;#x27;id&amp;#x27;]] = $v;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return $lists;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//父级查询子级&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;function getParent($data)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    $list = changeData($data);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    $tree = [];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    foreach ($list as $k) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if (isset($list[$k[&amp;#x27;parentId&amp;#x27;]]) &amp;amp;&amp;amp; $k[&amp;#x27;parentId&amp;#x27;] != -1) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            $list[$k[&amp;#x27;parentId&amp;#x27;]][&amp;#x27;items&amp;#x27;][$k[&amp;#x27;id&amp;#x27;]] =&amp;amp; $list[$k[&amp;#x27;id&amp;#x27;]];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125; else &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            $tree[$k[&amp;#x27;id&amp;#x27;]] =&amp;amp; $list[$k[&amp;#x27;id&amp;#x27;]];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return $tree;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//子级查询父级&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;function getChild($data)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    $list = changeData($data);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    $tree = [];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    foreach ($list as $k =&amp;gt; $v) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if ($v[&amp;#x27;parentId&amp;#x27;] != -1) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            $list[$v[&amp;#x27;id&amp;#x27;]][&amp;#x27;items&amp;#x27;][$v[&amp;#x27;parentId&amp;#x27;]] =&amp;amp; $list[$v[&amp;#x27;parentId&amp;#x27;]];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125; else &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            $tree =&amp;amp; $list;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return $tree;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//组合子级到父级关系&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;function getData($gets)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    $list = [];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    $tem = &amp;#x27;&amp;#x27;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    foreach ($gets as $k =&amp;gt; $v) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if ($v[&amp;#x27;parentId&amp;#x27;] != -1) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            $temp = $v[&amp;#x27;name&amp;#x27;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            if (count($v[&amp;#x27;items&amp;#x27;]) &amp;gt; 0) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                $tem = $v[&amp;#x27;items&amp;#x27;][$v[&amp;#x27;parentId&amp;#x27;]][&amp;#x27;name&amp;#x27;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                if (count($v[&amp;#x27;items&amp;#x27;][$v[&amp;#x27;parentId&amp;#x27;]][&amp;#x27;items&amp;#x27;]) &amp;gt; 0) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    $tp = getData($v[&amp;#x27;items&amp;#x27;][$v[&amp;#x27;parentId&amp;#x27;]][&amp;#x27;items&amp;#x27;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            if (empty($tem)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                $tems = $v[&amp;#x27;name&amp;#x27;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125; else &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                $tems = $temp . &amp;#x27;-&amp;gt;&amp;#x27; . $tem;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            if (count($tp) &amp;gt; 0) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                $list[] = $tems . &amp;#x27;-&amp;gt;&amp;#x27; . $tp[0];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                unset($tp);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125; else &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                $list[] = $tems;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125; else &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            $list[] = $v[&amp;#x27;name&amp;#x27;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return $list;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$gets = getChild($arr);;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$ss = getData($gets);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print_r($ss);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;exit;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt; ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://erik.xyz/2017/11/10/you-guan-php-jia-mi-de/</guid>
            <title>有关php加密的</title>
            <link>https://erik.xyz/2017/11/10/you-guan-php-jia-mi-de/</link>
            <category>php</category>
            <category>php加密</category>
            <category>php技术</category>
            <pubDate>Fri, 10 Nov 2017 21:18:00 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;php加密，最早接触的是php5.3版本，zend的加密技术。解密还要安装扩展运行，解密后的代码不可运行。 php目前官方介绍了几种加密扩展： crack扩展，官方目前不扩绑在php中， caprng扩展，目前支持5.2以上版本, hash扩展， mcrypt扩展，php7.1.0废除，php7.2.0会移到pecl, mhash扩展， openssl扩展，opessl库来对称/非对称加解密，以及 PBKDF2、 PKCS7、 PKCS12、 X509 和其他加密操作, 密码散列算法 API 提供了简单易用的 &lt;a href=&#34;http://php.net/manual/zh/function.crypt.php&#34;&gt;crypt()&lt;/a&gt; 包装， 以一种简洁易用安全的方式创建和管理密码。 网友给出的加密技术： md5加密， crypt加密算法， sha1加密算法， url编码加密技术， Base64信息编码加密。 加密扩展呢，在官方文档里有介绍使用方法，这个大家自己可以去看看。   具体不详细介绍，参考php官方文档&lt;a href=&#34;http://php.net/manual/zh/&#34;&gt;http://php.net/manual/zh/&lt;/a&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://erik.xyz/2017/09/01/php-zhong-xml-zhuan-huan-cheng-php-shu-zu/</guid>
            <title>php中xml转换成php数组</title>
            <link>https://erik.xyz/2017/09/01/php-zhong-xml-zhuan-huan-cheng-php-shu-zu/</link>
            <category>php</category>
            <pubDate>Fri, 01 Sep 2017 21:38:00 +0800</pubDate>
            <description><![CDATA[ &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;public function xmlArray($xml)&amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  if(!$xml)&amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    $data=&amp;quot;数据异常&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    error\_log(&amp;quot;数据错误&amp;quot;.print\_r($data).&amp;quot;\\r\\n&amp;quot;,3,&amp;#x27;wx\_error.log&amp;#x27;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    exit; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  //将XML转为array &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  //禁止引用外部xml实体 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  libxml\_disable\_entity\_loader(true);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  $data= json\_decode(json\_encode(simplexml\_load\_string($xml, &amp;#x27;SimpleXMLElement&amp;#x27;, LIBXML_NOCDATA)), true); &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  return $data; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt; ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://erik.xyz/2017/08/11/php-cao-zuo-fu/</guid>
            <title>php操作符</title>
            <link>https://erik.xyz/2017/08/11/php-cao-zuo-fu/</link>
            <category>php</category>
            <pubDate>Fri, 11 Aug 2017 00:05:00 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;引用操作符 &amp;amp; 引用操作符主要用在关联赋值中，一个变量赋值给另一个变量的时候，先产生原变量的副本，然后再将副本保存在内存中。&lt;br&gt;例如： $a=1; $b=$a;  echo $b; 结果为 1&lt;br&gt;如果  $a=2;  则 echo $b;  结果还是  1  。&lt;br&gt;因为$a的赋值副本依然在内存中，赋值依然是第一个值的副本。 这样就用引用操作符 &amp;amp; ，引用操作符会重置原来的指向地址。&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://erik.xyz/2015/05/28/zai-php-zhong-you-guan-mysql-de-yi-xie-han-shu/</guid>
            <title>在PHP中有关mysql的一些函数</title>
            <link>https://erik.xyz/2015/05/28/zai-php-zhong-you-guan-mysql-de-yi-xie-han-shu/</link>
            <category>php</category>
            <category>mysql</category>
            <category>mysql函数</category>
            <category>php中mysql函数</category>
            <pubDate>Thu, 28 May 2015 15:39:00 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;PHP中的MYSQL常用函数总结 &lt;/p&gt;
&lt;p&gt;1、mysql_connect()-建立数据库连接 格式： resource mysql_connect([string hostname [:port] [:/path/to/socket] [, string username] [, string password]]) &lt;/p&gt;
&lt;p&gt;例： $conn = @mysql_connect(“localhost”, “username”, “password”) or die(“不能连接到Mysql Server”);&lt;/p&gt;
&lt;p&gt;说明：使用该连接必须显示的关闭连接 &lt;span id=&#34;more&#34;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;2、mysql_pconnect()-建立数据库连接 格式： resource mysql_pconnect([string hostname [:port] [:/path/to/socket] [, string username] [, string password]]) 例： $conn = @mysql_pconnect(“localhost”, “username”, “password”) or dir(“不能连接到Mysql Server”); 说明：使用该连接函数不需要显示的关闭连接，它相当于使用了连接池 &lt;/p&gt;
&lt;p&gt;3、mysql_close()-关闭数据库连接 例： $conn = @mysql_connect(“localhost”, “username”, “password”) or die(“不能连接到Mysql Server”); @mysql_select_db(“MyDatabase”) or die(“不能选择这个数据库，或数据库不存在”); echo “你已经连接到MyDatabase数据库”; mysql_close(); &lt;/p&gt;
&lt;p&gt;4、mysql_select_db()-选择数据库 格式： boolean mysql_select_db(string db_name [, resource link_id]) 例： $conn = @mysql_connect(“localhost”, “username”, “password”) or die(“不能连接到Mysql Server”); @mysql_select_db(“MyDatabase”) or die(“不能选择这个数据库，或数据库不存在”); &lt;/p&gt;
&lt;p&gt;5、mysql_query()-查询MySQL 格式： resource mysql_query (string query, [resource link_id]) 例： $linkId = @mysql_connect(“localhost”, “username”, “password”) or die(“不能连接到Mysql Server”); @mysql_select_db(“MyDatabase”) or die(“不能选择这个数据库，或者数据库不存在”); $query = “select * from MyTable”; $result = mysql_query($query); mysql_close(); 说明：若SQL查询执行成功，则返回资源标识符，失败时返回FALSE。若执行更新成功，则返回TRUE，否则返回FALSE&lt;/p&gt;
&lt;p&gt;6、mysql_db_query()-查询MySQL 格式： resource mysql_db_query(string database, string query [, resource link_id]) 例： $linkId = @mysql_connect(“localhost”, “username”, “password”) or die(“不能连接到MysqlServer”); $query = “select * from MyTable”; $result = mysql_db_query(“MyDatabase”, $query); mysql_close(); 说明：为了使代码清晰，不推荐使用这个函数调用 &lt;/p&gt;
&lt;p&gt;7、mysql_result()-获取和显示数据 格式： mixed mysql_result (resource result_set, int row [, mixed field]) 例： $query = “select id, name from MyTable order by name”; $result = mysql_query($query); for($count=0;$count&amp;lt;=mysql_numrows($result);$count++) { $c_id = mysql_result($result, 0, “id”); $c_name = mysql_result($result, 0, “name”); echo $c_id,$c_name; } 说明：最简单、也是效率最低的数据获取函数 &lt;/p&gt;
&lt;p&gt;8、mysql_fetch_row()-获取和显示数据 格式： array mysql_fetch_row (resource result_set) 例： $query = “select id, name from MyTable order by name”; $result = mysql_query($query); while (list($id, $name) = mysql_fetch_row($result)) { echo(“Name: $name ($id) &lt;br /&gt;“); } 说明：函数从result_set中获取整个数据行，将值放在一个索引数组中。通常会结使list()函数使用 &lt;/p&gt;
&lt;p&gt;9、mysql_fetch_array()-获取和显示数据 格式： array mysql_fetch_array (resource result_set [, int result_type]) 例： $query = “select id, name from MyTable order by name”; $result = mysql_query($query); while($row = mysql_fetch_array($result, MYSQL_ASSOC)) { $id = $row[“id”]; $name = $row[“name”]; echo “Name: $name ($id) &lt;br /&gt;“; } 又例： $query = “select id, name from MyTable order by name”; $result = mysql_query($query); while($row = mysql_fetch_array($result, MYSQL_NUM)) { $id = $row[0]; $name = $row[1]; echo “Name: $name ($id) &lt;br /&gt;“; } 说明： result_type的值有： MYSQL_ASSOC: 字段名表示键，字段内容为值 MYSQL_NUM: 数值索引数组，操作与mysql_fetch_ros()函数一样 MYSQL_BOTH: 即作为关联数组又作为数值索引数组返回。result_type的默认值。 &lt;/p&gt;
&lt;p&gt;10、mysql_fetch_assoc()-获取和显示数据 格式： array mysql_fetch_assoc (resource result_set) 相当于调用 mysql_fetch_array(resource, MYSQL_ASSOC);&lt;/p&gt;
&lt;p&gt;11、mysql_fetch_object()-获取和显示数据 格式： object mysql_fetch_object(resource result_set) 例： $query = “select id, name from MyTable order by name”; while ($row = mysql_fetch_object($result)) { $id = $row-&amp;gt;id; $name = $row-&amp;gt;name; echo “Name: $name ($id) &lt;br /&gt;“; } 说明：返回一个对象，在操作上与mysql_fetch_array()相同 &lt;/p&gt;
&lt;p&gt;12、mysql_num_rows()-所选择的记录的个数 格式： int mysql_num_rows(resource result_set) 例： query = “select id, name from MyTable where id &amp;gt; 65”; $result = mysql_query($query); echo “有”.mysql_num_rows($result).”条记录的ID大于65”; 说明：只在确定select查询所获取的记录数时才有用。 &lt;/p&gt;
&lt;p&gt;13、mysql_affected_rows()－受Insert,update,delete影响的记录的个数 格式： int mysql_affected_rows([resource link_id]) 例： $query = “update MyTable set name=’CheneyFu’ where id&amp;gt;=5”; $result = mysql_query($query); echo “ID大于等于5的名称被更新了的记录数：”.mysql_affected_rows(); 说明：该函数获取受INSERT,UPDATE或DELETE更新语句影响的行数 &lt;/p&gt;
&lt;p&gt;14、mysql_list_dbs()-获取数据库列表信息 格式： resource mysql_list_dbs([resource link_id]) 例： mysql_connect(“localhost”, “username”, “password”); $dbs = mysql_list_dbs(); echo “Databases: &lt;br /&gt;“; while (list($db) = mysql_fetch_rows($dbs)) { echo “$db &lt;br /&gt;“; } 说明：显示所有数据库名称 &lt;/p&gt;
&lt;p&gt;15、mysql_db_name()-获取数据库名 格式： string mysql_db_name(resource result_set, integer index) 说明：该函数获取在mysql_list_dbs()所返回result_set中位于指定index索引的数据库名 &lt;/p&gt;
&lt;p&gt;16、mysql_list_tables()-获取数据库表列表 格式： resource mysql_list_tables(string database [, resource link_id]) 例： mysql_connect(“localhost”, “username”, “password”); $tables = mysql_list_tables(“MyDatabase”); while (list($table) = mysql_fetch_row($tables)) { echo “$table &lt;br /&gt;“; } 说明：该函数获取database中所有表的表名 17、mysql_tablename()-获取某个数据库表名 格式： string mysql_tablename(resource result_set, integer index) 例： mysql_connect(“localhost”, “username”, “password”); $tables = mysql_list_tables(“MyDatabase”); $count = -1; while (++$count &amp;lt; mysql_numrows($tables)) { echo mysql_tablename($tables, $count).”&lt;br /&gt;“; } 说明：该函数获取mysql_list_tables()所返回result_set中位于指定index索引的表名 18、mysql_fetch_field()-获取字段信息 格式： object mysql_fetch_field(resource result [, int field_offset]) 例： mysql_connect(“localhost”, “username”, “password”); mysql_select_db(“MyDatabase”); $query = “select * from MyTable”;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://erik.xyz/2015/05/06/php-shi-jian-dao-ji-shi/</guid>
            <title>PHP时间倒计时</title>
            <link>https://erik.xyz/2015/05/06/php-shi-jian-dao-ji-shi/</link>
            <category>php</category>
            <category>php倒计时</category>
            <category>php时间</category>
            <category>倒计时</category>
            <category>计算时间</category>
            <pubDate>Wed, 06 May 2015 23:32:00 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;在网站或者商城需要做一次活动，到某个时间结束，这就用到倒计时。 首先，获取当前时区的时间，然后，获取结束日期的时间，两个时间相减就是活动时间。 &lt;a href=&#34;http://www.erik.xyz/phptime&#34;&gt;&lt;img src=&#34;http://i1.tietuku.com/2f9c2daabed1d1a4.png&#34; alt=&#34;倒计时&#34;&gt;&lt;/a&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://erik.xyz/2015/03/31/guo-wai-cheng-xu-yuan-shou-ji-zheng-li-de-php-zi-yuan-da-quan/</guid>
            <title>国外程序员收集整理的 PHP 资源大全</title>
            <link>https://erik.xyz/2015/03/31/guo-wai-cheng-xu-yuan-shou-ji-zheng-li-de-php-zi-yuan-da-quan/</link>
            <category>php</category>
            <category>php大全</category>
            <category>php资料</category>
            <pubDate>Tue, 31 Mar 2015 20:05:00 +0800</pubDate>
            <description><![CDATA[ &lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://my.oschina.net/yearnfar/blog/364673#OSC_h2_1&#34;&gt;其他的依赖管理&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://my.oschina.net/yearnfar/blog/364673#OSC_h2_2&#34;&gt;框架&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://my.oschina.net/yearnfar/blog/364673#OSC_h2_3&#34;&gt;其他框架&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://my.oschina.net/yearnfar/blog/364673#OSC_h2_4&#34;&gt;框架组件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://my.oschina.net/yearnfar/blog/364673#OSC_h2_5&#34;&gt;微型框架&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://my.oschina.net/yearnfar/blog/364673#OSC_h2_6&#34;&gt;其他微型框架&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://my.oschina.net/yearnfar/blog/364673#OSC_h2_7&#34;&gt;模板&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://my.oschina.net/yearnfar/blog/364673#OSC_h2_8&#34;&gt;静态站点生成器&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://my.oschina.net/yearnfar/blog/364673#OSC_h2_9&#34;&gt;HTTP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://my.oschina.net/yearnfar/blog/364673#OSC_h2_10&#34;&gt;URL&lt;/a&gt;&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://my.oschina.net/yearnfar/blog/364673#OSC_h2_11&#34;&gt;Email&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://my.oschina.net/yearnfar/blog/364673#OSC_h2_12&#34;&gt;文件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://my.oschina.net/yearnfar/blog/364673#OSC_h2_13&#34;&gt;Streams 流&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://my.oschina.net/yearnfar/blog/364673#OSC_h2_14&#34;&gt;Dependency Injection依赖注入&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://my.oschina.net/yearnfar/blog/364673#OSC_h2_15&#34;&gt;Imagery 图像&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://my.oschina.net/yearnfar/blog/364673#OSC_h2_16&#34;&gt;Testing 测试&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://my.oschina.net/yearnfar/blog/364673#OSC_h2_17&#34;&gt;Continuous Integration 持续集成&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://my.oschina.net/yearnfar/blog/364673#OSC_h2_18&#34;&gt;Documentation 文档&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://my.oschina.net/yearnfar/blog/364673#OSC_h2_19&#34;&gt;Security 安全&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://my.oschina.net/yearnfar/blog/364673#OSC_h2_20&#34;&gt;Passwords 密码&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://my.oschina.net/yearnfar/blog/364673#OSC_h2_21&#34;&gt;Code Analysis 代码分析&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://my.oschina.net/yearnfar/blog/364673#OSC_h2_22&#34;&gt;Debugging 调试&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://my.oschina.net/yearnfar/blog/364673#OSC_h2_23&#34;&gt;Build Tools 构建工具&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://my.oschina.net/yearnfar/blog/364673#OSC_h2_24&#34;&gt;Task Runners 任务运行器&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://my.oschina.net/yearnfar/blog/364673#OSC_h2_25&#34;&gt;Navigation导航&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://my.oschina.net/yearnfar/blog/364673#OSC_h2_26&#34;&gt;Asset Management 资源管理&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://my.oschina.net/yearnfar/blog/364673#OSC_h2_27&#34;&gt;Geolocation 地理位置&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://my.oschina.net/yearnfar/blog/364673#OSC_h2_28&#34;&gt;Date and Time 日期和时间&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://my.oschina.net/yearnfar/blog/364673#OSC_h2_29&#34;&gt;Event 事件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://my.oschina.net/yearnfar/blog/364673#OSC_h2_30&#34;&gt;Logging 日志&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://my.oschina.net/yearnfar/blog/364673#OSC_h2_31&#34;&gt;E-commerce 电子商务&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://my.oschina.net/yearnfar/blog/364673#OSC_h2_32&#34;&gt;PDF&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://my.oschina.net/yearnfar/blog/364673#OSC_h2_33&#34;&gt;Database 数据库&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://my.oschina.net/yearnfar/blog/364673#OSC_h2_34&#34;&gt;Migrations 迁移&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://my.oschina.net/yearnfar/blog/364673#OSC_h2_35&#34;&gt;NoSQL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://my.oschina.net/yearnfar/blog/364673#OSC_h2_36&#34;&gt;Queue 队列&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://my.oschina.net/yearnfar/blog/364673#OSC_h2_37&#34;&gt;Search 搜索&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://my.oschina.net/yearnfar/blog/364673#OSC_h2_38&#34;&gt;Command Line 命令行&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://my.oschina.net/yearnfar/blog/364673#OSC_h2_39&#34;&gt;Authentication 身份验证&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://my.oschina.net/yearnfar/blog/364673#OSC_h2_40&#34;&gt;Markup 标记&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://my.oschina.net/yearnfar/blog/364673#OSC_h2_41&#34;&gt;Strings 字符串&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://my.oschina.net/yearnfar/blog/364673#OSC_h2_42&#34;&gt;Numbers 数字&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://my.oschina.net/yearnfar/blog/364673#OSC_h2_43&#34;&gt;Filtering and Validation 过滤和验证&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://my.oschina.net/yearnfar/blog/364673#OSC_h2_44&#34;&gt; REST和API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://my.oschina.net/yearnfar/blog/364673#OSC_h2_45&#34;&gt;Caching 缓存&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://my.oschina.net/yearnfar/blog/364673#OSC_h2_46&#34;&gt;数据结构和存储&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://my.oschina.net/yearnfar/blog/364673#OSC_h2_47&#34;&gt;Notifications 通知&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://my.oschina.net/yearnfar/blog/364673#OSC_h2_48&#34;&gt;Deployment 部署&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://my.oschina.net/yearnfar/blog/364673#OSC_h2_49&#34;&gt;国际化和本地化&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://my.oschina.net/yearnfar/blog/364673#OSC_h2_50&#34;&gt;第三方API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://my.oschina.net/yearnfar/blog/364673#OSC_h2_51&#34;&gt;Extensions 扩展&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://my.oschina.net/yearnfar/blog/364673#OSC_h2_52&#34;&gt;Miscellaneous 杂项&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://my.oschina.net/yearnfar/blog/364673#OSC_h1_53&#34;&gt;Software 软件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://my.oschina.net/yearnfar/blog/364673#OSC_h2_54&#34;&gt;PHP安装&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://my.oschina.net/yearnfar/blog/364673#OSC_h2_55&#34;&gt;Development Environment 开发环境&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://my.oschina.net/yearnfar/blog/364673#OSC_h2_56&#34;&gt;Virtual Machines 虚拟机&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://my.oschina.net/yearnfar/blog/364673#OSC_h2_57&#34;&gt;IDE 集成开发环境&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://my.oschina.net/yearnfar/blog/364673#OSC_h2_58&#34;&gt;Web Applications Web应用&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://my.oschina.net/yearnfar/blog/364673#OSC_h1_59&#34;&gt;Resources 资源&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://my.oschina.net/yearnfar/blog/364673#OSC_h2_60&#34;&gt;PHP网站&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://my.oschina.net/yearnfar/blog/364673#OSC_h2_61&#34;&gt;Other Websites 其他网站&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://my.oschina.net/yearnfar/blog/364673#OSC_h2_62&#34;&gt;PHP 书籍&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://my.oschina.net/yearnfar/blog/364673#OSC_h2_63&#34;&gt;其他书籍&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://my.oschina.net/yearnfar/blog/364673#OSC_h2_64&#34;&gt;PHP视频&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://my.oschina.net/yearnfar/blog/364673#OSC_h2_65&#34;&gt;PHP阅读&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://my.oschina.net/yearnfar/blog/364673#OSC_h2_66&#34;&gt;PHP Internals Reading PHP内核阅读&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;ziadoz 在 Github 发起维护的一个 PHP 资源列表，内容包括：库、框架、模板、安全、代码分析、日志、第三方库、配置工具、Web 工具、书籍、电子书、经典博文等等。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;依赖管理 &lt;em&gt;依赖和包管理库&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://getcomposer.org/&#34;&gt;Composer&lt;/a&gt;/&lt;a href=&#34;http://packagist.org/&#34;&gt;Packagist&lt;/a&gt;：一个包和依赖管理器&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/composer/installers&#34;&gt;Composer Installers&lt;/a&gt;：一个多框架Composer库安装器&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/FriendsOfPHP/pickle&#34;&gt;Pickle&lt;/a&gt;：一个PHP扩展安装器&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;其他的依赖管理&#34;&gt;&lt;a href=&#34;#其他的依赖管理&#34; class=&#34;headerlink&#34; title=&#34;其他的依赖管理&#34;&gt;&lt;/a&gt;其他的依赖管理&lt;/h2&gt;&lt;p&gt;&lt;em&gt;其他的相关依赖管理&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/composer/satis&#34;&gt;Satis&lt;/a&gt;：一个静态Composer存储库生成器&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/bamarni/composition&#34;&gt;Composition&lt;/a&gt;：一个在运行时检查Composer环境的库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/herrera-io/php-version&#34;&gt;Version&lt;/a&gt;：语义版本的解析和比较库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/ralphschindler/Namespacer&#34;&gt;NameSpacer&lt;/a&gt; -转化下划线到命名空间的库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/goatherd/patch-installer&#34;&gt;Patch Installer&lt;/a&gt; -使用Composer安装补丁的库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/silpion/composer-checker&#34;&gt;Composer Checker&lt;/a&gt; -校验Composer配置的工具&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;框架&#34;&gt;&lt;a href=&#34;#框架&#34; class=&#34;headerlink&#34; title=&#34;框架&#34;&gt;&lt;/a&gt;框架&lt;/h2&gt;&lt;p&gt;&lt;em&gt;Web开发框架&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://symfony.com/&#34;&gt;Symfony2&lt;/a&gt; -一个独立组件组成的框架&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://framework.zend.com/&#34;&gt;Zend Framework 2&lt;/a&gt; -另一个由独立组件组成的框架&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://laravel.com/&#34;&gt;Laravel 4&lt;/a&gt; -另一个PHP框架&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://auraphp.com/&#34;&gt;Aura PHP&lt;/a&gt; -独立组件的框架&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/yiisoft/yii2/&#34;&gt;Yii2&lt;/a&gt; - 另一个PHP框架&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://nette.org/&#34;&gt;Nette&lt;/a&gt; - 另一个由个体组件组成的框架&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.ppi.io/&#34;&gt;PPI Framework 2&lt;/a&gt; -一个互操作性框架&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://phalconphp.com/en/&#34;&gt;Phalcon&lt;/a&gt; -通过C扩展实现的框架&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;其他框架&#34;&gt;&lt;a href=&#34;#其他框架&#34; class=&#34;headerlink&#34; title=&#34;其他框架&#34;&gt;&lt;/a&gt;其他框架&lt;/h2&gt;&lt;p&gt;&lt;em&gt;其他Web开发框架&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/symfony-cmf/symfony-cmf&#34;&gt;Symfony CMF&lt;/a&gt; - 创建自定义CMS的内容管理框架&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://rad.knplabs.com/&#34;&gt;Knp RAD Bundle&lt;/a&gt; -Symfony 2的快速应用程序（RAD）包&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;框架组件&#34;&gt;&lt;a href=&#34;#框架组件&#34; class=&#34;headerlink&#34; title=&#34;框架组件&#34;&gt;&lt;/a&gt;框架组件&lt;/h2&gt;&lt;p&gt;&lt;em&gt;来自web开发框架的独立组件&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://symfony.com/doc/master/components/index.html&#34;&gt;Symfony2 Components&lt;/a&gt; -Symfony2组件&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://packages.zendframework.com/&#34;&gt;Zend Framework 2 Components&lt;/a&gt; -ZF2组件&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://auraphp.github.com/&#34;&gt;Aura Components&lt;/a&gt; -PHP5.4组件包&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://hoa-project.net/En/&#34;&gt;Hoa Project&lt;/a&gt; -另一个PHP组件包&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;微型框架&#34;&gt;&lt;a href=&#34;#微型框架&#34; class=&#34;headerlink&#34; title=&#34;微型框架&#34;&gt;&lt;/a&gt;微型框架&lt;/h2&gt;&lt;p&gt;&lt;em&gt;微型框架和路由&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://silex.sensiolabs.org/&#34;&gt;Silex&lt;/a&gt; - 基于Symfony2组件的微型框架&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.slimframework.com/&#34;&gt;Slim&lt;/a&gt; - 另一个简单的微型框架&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://bulletphp.com/&#34;&gt;Bullet PHP&lt;/a&gt; -用于构建REST APIs的微型框架&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/nikic/FastRoute&#34;&gt;Fast Route&lt;/a&gt; - 快速路由库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/c9s/Pux&#34;&gt;Pux&lt;/a&gt; -另一个快速路由库&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;其他微型框架&#34;&gt;&lt;a href=&#34;#其他微型框架&#34; class=&#34;headerlink&#34; title=&#34;其他微型框架&#34;&gt;&lt;/a&gt;其他微型框架&lt;/h2&gt;&lt;p&gt;&lt;em&gt;其他相关的微型框架和路由&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fabpot/Silex-Skeleton&#34;&gt;Silex Skeleton&lt;/a&gt; -Silex的项目架构&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/silexphp/Silex-WebProfiler&#34;&gt;Silex Web Profiler&lt;/a&gt; -Silex web调试工具条&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/stackphp&#34;&gt;Stack&lt;/a&gt; - Silex/Symfony的可堆叠中间件库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/codeguy/Slim-Skeleton&#34;&gt;Slim Skeleton&lt;/a&gt; -Slim架构&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/codeguy/Slim-Views&#34;&gt;Slim View&lt;/a&gt; -Slim的自定义视图集合&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/codeguy/Slim-Middleware&#34;&gt;Slim Middleware&lt;/a&gt; -Slim的自定义中间件集合&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;模板&#34;&gt;&lt;a href=&#34;#模板&#34; class=&#34;headerlink&#34; title=&#34;模板&#34;&gt;&lt;/a&gt;模板&lt;/h2&gt;&lt;p&gt;&lt;em&gt;模板化和词法分析的库和工具&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://twig.sensiolabs.org/&#34;&gt;Twig&lt;/a&gt; -一个全面的模板语言&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/asm89/twig-cache-extension&#34;&gt;Twig Cache Extension&lt;/a&gt; -一个用于Twig的模板片段缓存库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/bobthecow/mustache.php&#34;&gt;Mustache&lt;/a&gt; -一个Mustache模板语言的PHP实现&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/weierophinney/phly_mustache&#34;&gt;Phly Mustache&lt;/a&gt; -另一个Mustache模板语言的PHP实现&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/arnaud-lb/MtHaml&#34;&gt;MtHaml&lt;/a&gt; - 一个HAML 模板语言的PHP实现&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://phptal.org/&#34;&gt;PHPTAL&lt;/a&gt; -一个 &lt;a href=&#34;http://en.wikipedia.org/wiki/Template_Attribute_Language&#34;&gt;TAL&lt;/a&gt; 模板语言的PHP实现&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://platesphp.com/&#34;&gt;Plates&lt;/a&gt; -一个原生PHP模板库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/pyrocms/lex&#34;&gt;Lex&lt;/a&gt; -一个轻量级模板解析器&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;静态站点生成器&#34;&gt;&lt;a href=&#34;#静态站点生成器&#34; class=&#34;headerlink&#34; title=&#34;静态站点生成器&#34;&gt;&lt;/a&gt;静态站点生成器&lt;/h2&gt;&lt;p&gt;&lt;em&gt;预处理工具来生成web页面的内容。&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://sculpin.io/&#34;&gt;Sculpin&lt;/a&gt; -转换Markdown和Twig为静态HTML的工具&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://phrozn.info/&#34;&gt;Phrozn&lt;/a&gt; - 另一个转换Textile，Markdown和Twig为HTML的工具&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;HTTP&#34;&gt;&lt;a href=&#34;#HTTP&#34; class=&#34;headerlink&#34; title=&#34;HTTP&#34;&gt;&lt;/a&gt;HTTP&lt;/h2&gt;&lt;p&gt;&lt;em&gt;用于HTTP和网站爬取的库&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/guzzle/guzzle&#34;&gt;Guzzle&lt;/a&gt; -一个全面的HTTP客户端&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/kriswallsmith/Buzz&#34;&gt;Buzz&lt;/a&gt; -另一个HTTP客户端&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/rmccue/Requests&#34;&gt;Requests&lt;/a&gt; -一个简单的HTTP库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/nategood/httpful&#34;&gt;HTTPFul&lt;/a&gt; -一个链式HTTP库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fabpot/Goutte&#34;&gt;Goutte&lt;/a&gt; -一个简单的web爬取器&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://php-vcr.github.io/&#34;&gt;PHP VCR&lt;/a&gt; -录制和重放HTTP请求的库&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;URL&#34;&gt;&lt;a href=&#34;#URL&#34; class=&#34;headerlink&#34; title=&#34;URL&#34;&gt;&lt;/a&gt;URL&lt;/h2&gt;&lt;p&gt;&lt;em&gt;解析URL的库&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/jwage/purl&#34;&gt;Purl&lt;/a&gt; -一个URL处理库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/jeremykendall/php-domain-parser&#34;&gt;PHP Domain Parser&lt;/a&gt; -一个本地前缀解析库&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;Email&#34;&gt;&lt;a href=&#34;#Email&#34; class=&#34;headerlink&#34; title=&#34;Email&#34;&gt;&lt;/a&gt;Email&lt;/h2&gt;&lt;p&gt;&lt;em&gt;发送和解析邮件的库&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://swiftmailer.org/&#34;&gt;SwiftMailer&lt;/a&gt; - 一个邮件解决方案&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/PHPMailer/PHPMailer&#34;&gt;PHPMailer&lt;/a&gt; - 另一个邮件解决方案&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/tedivm/Fetch&#34;&gt;Fetch&lt;/a&gt; -一个IMAP库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/willdurand/EmailReplyParser&#34;&gt;Email Reply Parser&lt;/a&gt; -一个邮件回复解析库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/henrikbjorn/Stampie&#34;&gt;Stampie&lt;/a&gt; -邮件服务库，不如 &lt;a href=&#34;http://sendgrid.com/&#34;&gt;SendGrid&lt;/a&gt;, &lt;a href=&#34;http://postmarkapp.com/&#34;&gt;PostMark&lt;/a&gt;, &lt;a href=&#34;http://www.mailgun.com/&#34;&gt;MailGun&lt;/a&gt; 和 &lt;a href=&#34;http://www.mandrill.com/&#34;&gt;Mandrill&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/tijsverkoyen/CssToInlineStyles&#34;&gt;CssToInlineStyles&lt;/a&gt; -一个在邮件模板内联CSS的库&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;文件&#34;&gt;&lt;a href=&#34;#文件&#34; class=&#34;headerlink&#34; title=&#34;文件&#34;&gt;&lt;/a&gt;文件&lt;/h2&gt;&lt;p&gt;&lt;em&gt;文件处理和MIME类型检测库&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/KnpLabs/Gaufrette&#34;&gt;Gaufrette&lt;/a&gt; -一个文件系统抽象层&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/FrenkyNet/Flysystem&#34;&gt;Flysystem&lt;/a&gt; - 另一个文件系统抽象层&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/dflydev/dflydev-canal&#34;&gt;Canal&lt;/a&gt; -一个检测互联网媒体类型的库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/dflydev/dflydev-apache-mime-types&#34;&gt;Apache MIME Types&lt;/a&gt; -一个解析Apache MIME类型的库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/versionable/Ferret&#34;&gt;Ferret&lt;/a&gt; - 一个MIME检测库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/hoaproject/Mime&#34;&gt;Hoa Mime&lt;/a&gt; -另一个MIME检测库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/henrikbjorn/Lurker&#34;&gt;Lurker&lt;/a&gt; -一个资源跟踪库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/herrera-io/php-file-locator&#34;&gt;PHP File Locator&lt;/a&gt; -一个在大型项目定位文件的库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/alchemy-fr/PHP-FFmpeg/&#34;&gt;PHP FFmpeg&lt;/a&gt; -一个用于&lt;a href=&#34;http://www.ffmpeg.org/&#34;&gt;FFmpeg&lt;/a&gt; 视频包装的库.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/nyamsprod/Bakame.csv&#34;&gt;CSV&lt;/a&gt; - 一个CSV数据处理库&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;Streams-流&#34;&gt;&lt;a href=&#34;#Streams-流&#34; class=&#34;headerlink&#34; title=&#34;Streams 流&#34;&gt;&lt;/a&gt;Streams 流&lt;/h2&gt;&lt;p&gt;&lt;em&gt;处理流的库&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fzaninotto/Streamer&#34;&gt;Streamer&lt;/a&gt; - 一个面向对象的流包装库&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;Dependency-Injection依赖注入&#34;&gt;&lt;a href=&#34;#Dependency-Injection依赖注入&#34; class=&#34;headerlink&#34; title=&#34;Dependency Injection依赖注入&#34;&gt;&lt;/a&gt;Dependency Injection依赖注入&lt;/h2&gt;&lt;p&gt;&lt;em&gt;实现依赖注入设计模式的库&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://pimple.sensiolabs.org/&#34;&gt;Pimple&lt;/a&gt; - 一个小的依赖注入容器&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/rdlowrey/Auryn&#34;&gt;Auryn&lt;/a&gt; - 另一个依赖注入容器&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/orno/di&#34;&gt;Orno Di&lt;/a&gt; -另一个可伸缩的依赖注入容器&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://mnapoli.github.com/PHP-DI/&#34;&gt;PHP DI&lt;/a&gt; -一个使用注释实现的依赖注入&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/jeremeamia/acclimate&#34;&gt;Acclimate&lt;/a&gt; -一个依赖注入容器和服务定位的通用接口&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;Imagery-图像&#34;&gt;&lt;a href=&#34;#Imagery-图像&#34; class=&#34;headerlink&#34; title=&#34;Imagery 图像&#34;&gt;&lt;/a&gt;Imagery 图像&lt;/h2&gt;&lt;p&gt;&lt;em&gt;处理图像的库&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://imagine.readthedocs.org/en/latest/index.html&#34;&gt;Imagine&lt;/a&gt; -一个图像处理库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Sybio/ImageWorkshop&#34;&gt;PHP Image Workshop&lt;/a&gt; -另一个图像处理库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Intervention/image&#34;&gt;Intervention Image&lt;/a&gt; -另一个图像处理库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Sybio/GifFrameExtractor&#34;&gt;GIF Frame Extractor&lt;/a&gt; -一个提取GIF动画帧信息的库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Sybio/GifCreator&#34;&gt;GIF Creator&lt;/a&gt; - 一个通过多张图片创建GIF动画的库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/nmcteam/image-with-text&#34;&gt;Image With Text&lt;/a&gt; -一个在图像中嵌入文本的库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/php-loep/color-extractor&#34;&gt;Color Extractor&lt;/a&gt; -一个从图像中提取颜色的库&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;Testing-测试&#34;&gt;&lt;a href=&#34;#Testing-测试&#34; class=&#34;headerlink&#34; title=&#34;Testing 测试&#34;&gt;&lt;/a&gt;Testing 测试&lt;/h2&gt;&lt;p&gt;&lt;em&gt;测试代码和生成测试数据的库&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/sebastianbergmann/phpunit&#34;&gt;PHPUnit&lt;/a&gt; -一个单元测试框架&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/sebastianbergmann/dbunit&#34;&gt;DBUnit&lt;/a&gt; -PHPUnit的数据库测试库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/brianium/paratest&#34;&gt;ParaTest&lt;/a&gt; - PHPUnit的并行测试库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/phpspec/phpspec&#34;&gt;PHPSpec&lt;/a&gt; -基于功能点设计的单元测试库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Codeception/Codeception&#34;&gt;Codeception&lt;/a&gt; -一个全栈测试框架&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Codeception/AspectMock&#34;&gt;AspectMock&lt;/a&gt; -  PHPUnit/ Codeception 模拟框架。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/atoum/atoum&#34;&gt;Atoum&lt;/a&gt; -一个简单的测试库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/padraic/mockery&#34;&gt;Mockery&lt;/a&gt; -一个用测试的模拟对象库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/mlively/Phake&#34;&gt;Phake&lt;/a&gt; -另一个用测试的模拟对象库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/phpspec/prophecy&#34;&gt;Prophecy&lt;/a&gt; -一个可选度很高的模拟框架&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fzaninotto/Faker&#34;&gt;Faker&lt;/a&gt; -一个伪数据生成库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/mauris/samsui&#34;&gt;Samsui&lt;/a&gt; - 另一个伪数据生成库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/nelmio/alice&#34;&gt;Alice&lt;/a&gt; -富有表现力的一代库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://behat.org/&#34;&gt;Behat&lt;/a&gt; -一个行为驱动开发（BDD）测试框架&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/danielstjules/pho&#34;&gt;Pho&lt;/a&gt; -一个行为驱动开发测试框架&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://mink.behat.org/&#34;&gt;Mink&lt;/a&gt; -Web验收测试&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/InterNations/http-mock&#34;&gt;HTTP Mock&lt;/a&gt; - 一个在单元测试模拟HTTP请求的库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/mikey179/vfsStream&#34;&gt;VFS Stream&lt;/a&gt; -一个用于测试的虚拟文件系统流的包装器&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/adlawson/vfs.php&#34;&gt;VFS&lt;/a&gt; -另一个用于测试虚拟文件系统&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://locust.io/&#34;&gt;Locust&lt;/a&gt; -一个用Python编写的现代加载测试库&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;Continuous-Integration-持续集成&#34;&gt;&lt;a href=&#34;#Continuous-Integration-持续集成&#34; class=&#34;headerlink&#34; title=&#34;Continuous Integration 持续集成&#34;&gt;&lt;/a&gt;Continuous Integration 持续集成&lt;/h2&gt;&lt;p&gt;&lt;em&gt;持续集成的库和应用&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://travis-ci.org/&#34;&gt;Travis CI&lt;/a&gt; - 一个持续集成平台&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.phptesting.org/&#34;&gt;PHPCI&lt;/a&gt; -一个PHP的开源持续集成平台&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://sismo.sensiolabs.org/&#34;&gt;Sismo&lt;/a&gt; - 一个持续测试服务库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://jenkins-ci.org/&#34;&gt;Jenkins&lt;/a&gt;一个 &lt;a href=&#34;http://jenkins-php.org/index.html&#34;&gt;PHP 支持&lt;/a&gt;的持续集成平台&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/jolicode/JoliCi&#34;&gt;JoliCi&lt;/a&gt; - 一个用PHP编写的由Docker支持的持续集成客户端&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;Documentation-文档&#34;&gt;&lt;a href=&#34;#Documentation-文档&#34; class=&#34;headerlink&#34; title=&#34;Documentation 文档&#34;&gt;&lt;/a&gt;Documentation 文档&lt;/h2&gt;&lt;p&gt;&lt;em&gt;生成项目文档的库&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fabpot/Sami&#34;&gt;Sami&lt;/a&gt; -一个API文档生成器&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/apigen/apigen&#34;&gt;APIGen&lt;/a&gt; -另一个API文档生成器&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/phpDocumentor/phpDocumentor2&#34;&gt;PHP Documentor 2&lt;/a&gt; -一个API文档生成器&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://phpdox.de/&#34;&gt;phpDox&lt;/a&gt; - 一个PHP项目的文档生成器（不限于API文档）&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;Security-安全&#34;&gt;&lt;a href=&#34;#Security-安全&#34; class=&#34;headerlink&#34; title=&#34;Security 安全&#34;&gt;&lt;/a&gt;Security 安全&lt;/h2&gt;&lt;p&gt;&lt;em&gt;生成安全的随机数，加密数据，扫描漏洞的库&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/ezyang/htmlpurifier&#34;&gt;HTML Purifier&lt;/a&gt; -一个兼容标准的HTML过滤器&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/ircmaxell/RandomLib&#34;&gt;RandomLib&lt;/a&gt; -一个生成随机数和字符串的库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/pixeloution/true-random&#34;&gt;True Random&lt;/a&gt; -使用 &lt;a href=&#34;http://www.random.org/&#34;&gt;www.random.org&lt;/a&gt;生成随机数的库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/padraic/SecurityMultiTool&#34;&gt;SecurityMultiTool&lt;/a&gt; -一个PHP安全库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://phpseclib.sourceforge.net/&#34;&gt;PHPSecLib&lt;/a&gt; -一个纯PHP安全通信库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/timoh6/TCrypto&#34;&gt;TCrypto&lt;/a&gt; -一个简单的键值加密存储库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/PHPIDS/PHPIDS&#34;&gt;PHP IDS&lt;/a&gt; - 一个结构化的PHP安全层&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Herzult/php-ssh&#34;&gt;PHP SSH&lt;/a&gt; -一个试验的面向对象的SSH包装库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/psecio/iniscan&#34;&gt;IniScan&lt;/a&gt; -一个扫描PHP INI文件安全的库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://security.sensiolabs.org/&#34;&gt;SensioLabs Security Check&lt;/a&gt; -一个为检查Composer依赖提供安全建议的web工具&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.owasp.org/index.php/OWASP_Zed_Attack_Proxy_Project&#34;&gt;Zed&lt;/a&gt; - 一个集成的web应用渗透测试工具&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;Passwords-密码&#34;&gt;&lt;a href=&#34;#Passwords-密码&#34; class=&#34;headerlink&#34; title=&#34;Passwords 密码&#34;&gt;&lt;/a&gt;Passwords 密码&lt;/h2&gt;&lt;p&gt;&lt;em&gt;处理和存储密码的库和工具&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/ircmaxell/password_compat&#34;&gt;Password Compat&lt;/a&gt; -一个新的PHP5.5密码函数的兼容库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.openwall.com/phpass/&#34;&gt;phpass&lt;/a&gt; - 一个便携式的密码哈希框架&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/ircmaxell/PHP-PasswordLib&#34;&gt;PHP Password Lib&lt;/a&gt; -一个生成和校验密码的库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/ircmaxell/password-policy&#34;&gt;Password Policy&lt;/a&gt; - 一个PHP和JavaScript的密码策略库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/jeremykendall/password-validator&#34;&gt;Password Validator&lt;/a&gt; - 校验和升级密码哈希的库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/bjeavons/zxcvbn-php&#34;&gt;Zxcvbn PHP&lt;/a&gt; -一个基于Zxcvbn JS的现实的PHP密码强度估计库&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;Code-Analysis-代码分析&#34;&gt;&lt;a href=&#34;#Code-Analysis-代码分析&#34; class=&#34;headerlink&#34; title=&#34;Code Analysis 代码分析&#34;&gt;&lt;/a&gt;Code Analysis 代码分析&lt;/h2&gt;&lt;p&gt;&lt;em&gt;分析，解析和处理代码库的库的工具&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/nikic/PHP-Parser&#34;&gt;PHP Parser&lt;/a&gt; -一个PHP编写的PHP解析器&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/ircmaxell/PHPPHP&#34;&gt;PHPPHP&lt;/a&gt; - 一个PHP实现的PHP虚拟机&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fieryprophet/php-sandbox&#34;&gt;PHPSandbox&lt;/a&gt; -一个PHP沙盒环境&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/jakubledl/dissect&#34;&gt;Dissect&lt;/a&gt; -一个词法和语法分析的工具集合&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://phpmd.org/&#34;&gt;PHP Mess Detector&lt;/a&gt; -一个扫描代码缺陷,次优代码，未使用的参数等等的库。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/squizlabs/PHP_CodeSniffer&#34;&gt;PHP Code Sniffer&lt;/a&gt; -一个检测PHP、CSS和JS代码标准冲突的库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/sebastianbergmann/phpcpd&#34;&gt;PHPCPD&lt;/a&gt; - 一个检测复制和粘贴代码的库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/scrutinizer-ci/php-analyzer&#34;&gt;PHP Analyser&lt;/a&gt; -一个分析PHP代码查找缺陷和错误的库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fabpot/PHP-CS-Fixer&#34;&gt;PHP CS Fixer&lt;/a&gt; - 一个编码标准库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/schmittjoh/php-manipulator&#34;&gt;PHP Manipulator&lt;/a&gt; -一个分析和修改PHP源代码的库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Halleck45/PhpMetrics&#34;&gt;PHP Metrics&lt;/a&gt; -一个静态测量库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/QafooLabs/php-refactoring-browser&#34;&gt;PHP Refactoring Browser&lt;/a&gt; -一个重构PHP代码的命令行工具集&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/devster/ubench&#34;&gt;UBench&lt;/a&gt; - 一个简单的微型基准检测库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/polyfractal/athletic&#34;&gt;Athletic&lt;/a&gt; -一个基于注释的基准检测库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Trismegiste/Mondrian&#34;&gt;Mondrian&lt;/a&gt; - 使用使用图论的代码分析工具&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://scrutinizer-ci.com/&#34;&gt;Scrutinizer&lt;/a&gt; -一个审查PHP代码的web工具&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/sebastianbergmann/phploc&#34;&gt;PHPLOC&lt;/a&gt; -一个快速测量PHP项目大小的工具&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/phacility/xhprof&#34;&gt;xHprof&lt;/a&gt; -另一个PHP分析工具&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/jbrooksuk/phpcheckstyle&#34;&gt;PHPCheckstyle&lt;/a&gt; -一个帮助遵守特定的编码惯例的工具。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;Debugging-调试&#34;&gt;&lt;a href=&#34;#Debugging-调试&#34; class=&#34;headerlink&#34; title=&#34;Debugging 调试&#34;&gt;&lt;/a&gt;Debugging 调试&lt;/h2&gt;&lt;p&gt;&lt;em&gt;调试代码的库和工具&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/xdebug/xdebug&#34;&gt;xDebug&lt;/a&gt; -一个调试和分析PHP的工具&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://phpdebugbar.com/&#34;&gt;PHP Debug Bar&lt;/a&gt; - 一个调试工具栏&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Seldaek/php-console&#34;&gt;PHP Console&lt;/a&gt; -一个web调试控制台&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/barbushin/php-console&#34;&gt;Barbushin PHP Console&lt;/a&gt; -另一个使用Google Chrome的web调试控制台&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://phpdbg.com/&#34;&gt;PHPDBG&lt;/a&gt; - 一个交互的PHP调试器&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/nette/tracy&#34;&gt;Tracy&lt;/a&gt; -一个简单的错误检测，写日志和时间测量库&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;Build-Tools-构建工具&#34;&gt;&lt;a href=&#34;#Build-Tools-构建工具&#34; class=&#34;headerlink&#34; title=&#34;Build Tools 构建工具&#34;&gt;&lt;/a&gt;Build Tools 构建工具&lt;/h2&gt;&lt;p&gt;&lt;em&gt;项目构建和自动化工具&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/herrera-io/php-go&#34;&gt;Go&lt;/a&gt; -一个简单的PHP构建工具&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/CHH/bob&#34;&gt;Bob&lt;/a&gt; - 一个简单的项目自动化工具&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/jaz303/phake&#34;&gt;Phake&lt;/a&gt; -一个PHP克隆库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/kherge/Box&#34;&gt;Box&lt;/a&gt; - 一个构建PHAR文件的工具&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.phing.info/&#34;&gt;Phing&lt;/a&gt; -一个灵感来自于Apache Ant的PHP项目构建系统&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;Task-Runners-任务运行器&#34;&gt;&lt;a href=&#34;#Task-Runners-任务运行器&#34; class=&#34;headerlink&#34; title=&#34;Task Runners 任务运行器&#34;&gt;&lt;/a&gt;Task Runners 任务运行器&lt;/h2&gt;&lt;p&gt;&lt;em&gt;自动运行任务的库&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://taskphp.github.io/&#34;&gt;Task&lt;/a&gt; -一个灵感来源于Grunt和Gulp的纯PHP任务运行器&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Codegyre/Robo&#34;&gt;Robo&lt;/a&gt; -一个面向对象配置的PHP任务运行器&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://bldr.io/&#34;&gt;Bldr&lt;/a&gt; -一个构建在Symfony组件上的PHP任务运行器&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;Navigation导航&#34;&gt;&lt;a href=&#34;#Navigation导航&#34; class=&#34;headerlink&#34; title=&#34;Navigation导航&#34;&gt;&lt;/a&gt;Navigation导航&lt;/h2&gt;&lt;p&gt;&lt;em&gt;构建导航结构的工具&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/KnpLabs/KnpMenu&#34;&gt;KnpMenu&lt;/a&gt; - 一个菜单库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/tackk/cartographer&#34;&gt;Cartographer&lt;/a&gt; -一个站点地图生成库&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;Asset-Management-资源管理&#34;&gt;&lt;a href=&#34;#Asset-Management-资源管理&#34; class=&#34;headerlink&#34; title=&#34;Asset Management 资源管理&#34;&gt;&lt;/a&gt;Asset Management 资源管理&lt;/h2&gt;&lt;p&gt;&lt;em&gt;管理，压缩和最小化web站点资源的工具&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/kriswallsmith/assetic&#34;&gt;Assetic&lt;/a&gt; - 一个资源管理的管道库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/CHH/pipe&#34;&gt;Pipe&lt;/a&gt; -另一个资源管理的管道库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/meenie/munee&#34;&gt;Munee&lt;/a&gt; -一个资源优化库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/tedivm/JShrink&#34;&gt;JShrink&lt;/a&gt; -一个JavaScript最小化库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/webmozart/puli&#34;&gt;Puli&lt;/a&gt; - 一个检测资源绝对路径的库&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;Geolocation-地理位置&#34;&gt;&lt;a href=&#34;#Geolocation-地理位置&#34; class=&#34;headerlink&#34; title=&#34;Geolocation 地理位置&#34;&gt;&lt;/a&gt;Geolocation 地理位置&lt;/h2&gt;&lt;p&gt;&lt;em&gt;为地理编码地址和使用纬度经度的库。&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://geocoder-php.org/&#34;&gt;GeoCoder&lt;/a&gt; -一个地理编码库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/php-loep/Geotools&#34;&gt;GeoTools&lt;/a&gt; -一个地理工具相关的库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/mjaschen/phpgeo&#34;&gt;PHPGeo&lt;/a&gt; -一个简单的地理库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/jmikola/geojson&#34;&gt;GeoJSON&lt;/a&gt; -一个地理JSON的实现&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;Date-and-Time-日期和时间&#34;&gt;&lt;a href=&#34;#Date-and-Time-日期和时间&#34; class=&#34;headerlink&#34; title=&#34;Date and Time 日期和时间&#34;&gt;&lt;/a&gt;Date and Time 日期和时间&lt;/h2&gt;&lt;p&gt;&lt;em&gt;处理日期和时间的库&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/briannesbitt/Carbon&#34;&gt;Carbon&lt;/a&gt; - 一个简单的日期时间API扩展&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/jasonlewis/expressive-date&#34;&gt;ExpressiveDate&lt;/a&gt; -另一个日期时间API扩展&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://yohan.giarel.li/CalendR&#34;&gt;CalendR&lt;/a&gt; - 一个日历管理库&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;Event-事件&#34;&gt;&lt;a href=&#34;#Event-事件&#34; class=&#34;headerlink&#34; title=&#34;Event 事件&#34;&gt;&lt;/a&gt;Event 事件&lt;/h2&gt;&lt;p&gt;&lt;em&gt;时间驱动或非阻塞事件循环实现的库&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/reactphp/react&#34;&gt;React&lt;/a&gt; -一个事件驱动的非阻塞I/O库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/asm89/Rx.PHP&#34;&gt;Rx.PHP&lt;/a&gt; - 一个reactive扩展库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/cboden/Ratchet&#34;&gt;Ratchet&lt;/a&gt; - 一个web套接字库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/hoaproject/Websocket&#34;&gt;Hoa WebSocket&lt;/a&gt; -另一个web套接字库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/hoaproject/Eventsource&#34;&gt;Hoa EventSource&lt;/a&gt; -一个事件源库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/igorw/evenement&#34;&gt;Evenement&lt;/a&gt; -一个事件分发库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fuelphp/event&#34;&gt;FuelPHP Event&lt;/a&gt; -另一个事件分发库&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;Logging-日志&#34;&gt;&lt;a href=&#34;#Logging-日志&#34; class=&#34;headerlink&#34; title=&#34;Logging 日志&#34;&gt;&lt;/a&gt;Logging 日志&lt;/h2&gt;&lt;p&gt;&lt;em&gt;生成和处理日志文件的库&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Seldaek/monolog&#34;&gt;Monolog&lt;/a&gt; - 一个全面的日志工具&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/katzgrau/KLogger&#34;&gt;KLogger&lt;/a&gt; -一个易用的PSR-3兼容的日志类&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;E-commerce-电子商务&#34;&gt;&lt;a href=&#34;#E-commerce-电子商务&#34; class=&#34;headerlink&#34; title=&#34;E-commerce 电子商务&#34;&gt;&lt;/a&gt;E-commerce 电子商务&lt;/h2&gt;&lt;p&gt;&lt;em&gt;处理支付和构建在线电子商务商店的库和应用&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/adrianmacneil/omnipay&#34;&gt;OmniPay&lt;/a&gt; -一个框架混合了多网关支付处理的库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/payum/payum&#34;&gt;Payum&lt;/a&gt; - 一个支付抽象库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.sylius.org/&#34;&gt;Sylius&lt;/a&gt; - 一个开源的电子商务解决方案&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://thelia.net/v2/&#34;&gt;Thelia&lt;/a&gt; -另一个开源的电子商务解决方案&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/mathiasverraes/money&#34;&gt;Money&lt;/a&gt; - 一个Fowler金钱模式的PHP实现&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/sebastianbergmann/money&#34;&gt;Sebastian Money&lt;/a&gt; -另一个处理货币值的库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/florianv/swap&#34;&gt;Swap&lt;/a&gt; -一个汇率库&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;PDF&#34;&gt;&lt;a href=&#34;#PDF&#34; class=&#34;headerlink&#34; title=&#34;PDF&#34;&gt;&lt;/a&gt;PDF&lt;/h2&gt;&lt;p&gt;&lt;em&gt;处理PDF文件的库和软件&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/KnpLabs/snappy&#34;&gt;Snappy&lt;/a&gt; -一个PDF和图像生成器库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/antialize/wkhtmltopdf&#34;&gt;WKHTMLToPDF&lt;/a&gt; -一个将HTML转换为PDF的工具&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;Database-数据库&#34;&gt;&lt;a href=&#34;#Database-数据库&#34; class=&#34;headerlink&#34; title=&#34;Database 数据库&#34;&gt;&lt;/a&gt;Database 数据库&lt;/h2&gt;&lt;p&gt;&lt;em&gt;使用对象关系映射（ORM）或数据映射技术的数据库交互库&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.doctrine-project.org/&#34;&gt;Doctrine&lt;/a&gt; -一个全面的DBAL和ORM&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/l3pp4rd/DoctrineExtensions&#34;&gt;Doctrine Extensions&lt;/a&gt; -一个Doctrine行为扩展的集合&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.propelorm.org/&#34;&gt;Propel&lt;/a&gt; - 一个快速的ORM，迁移库和查询构架器&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/illuminate/database&#34;&gt;Eloquent&lt;/a&gt; -Laravel 4 ORM&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/etrepat/baum&#34;&gt;Baum&lt;/a&gt; -一个Eloquent的嵌套集实现&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/vlucas/spot2&#34;&gt;Spot2&lt;/a&gt; -一个MySQL的ORM映射器&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://redbeanphp.com/&#34;&gt;RedBean&lt;/a&gt; -一个轻量级，低配置的ORM&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/chanmix51/Pomm&#34;&gt;Pomm&lt;/a&gt; -一个PostgreSQL对象模型管理器&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Ocramius/ProxyManager&#34;&gt;ProxyManager&lt;/a&gt; -一个为数据映射生成代理对象的工具集&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;Migrations-迁移&#34;&gt;&lt;a href=&#34;#Migrations-迁移&#34; class=&#34;headerlink&#34; title=&#34;Migrations 迁移&#34;&gt;&lt;/a&gt;Migrations 迁移&lt;/h2&gt;&lt;p&gt;帮助管理数据库模式和迁移的库&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/davedevelopment/phpmig&#34;&gt;PHPMig&lt;/a&gt; -另一个迁移管理库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/robmorgan/phinx&#34;&gt;Phinx&lt;/a&gt; - 另一个数据库迁移管理库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/icomefromthenet/Migrations&#34;&gt;Migrations&lt;/a&gt; -一个迁移管理库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://docs.doctrine-project.org/projects/doctrine-migrations/en/latest/toc.html&#34;&gt;Doctrine Migrations&lt;/a&gt; -一个Doctrine迁移库&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;NoSQL&#34;&gt;&lt;a href=&#34;#NoSQL&#34; class=&#34;headerlink&#34; title=&#34;NoSQL&#34;&gt;&lt;/a&gt;NoSQL&lt;/h2&gt;&lt;p&gt;&lt;em&gt;处理NoSQL后端的库&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/alexbilbie/MongoQB&#34;&gt;MongoQB&lt;/a&gt; -一个MongoDB查询构建库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/thephpleague/monga&#34;&gt;Monga&lt;/a&gt; -一个MongoDB抽象库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/nrk/predis&#34;&gt;Predis&lt;/a&gt; - 一个功能完整的Redis库&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;Queue-队列&#34;&gt;&lt;a href=&#34;#Queue-队列&#34; class=&#34;headerlink&#34; title=&#34;Queue 队列&#34;&gt;&lt;/a&gt;Queue 队列&lt;/h2&gt;&lt;p&gt;&lt;em&gt;处理事件和任务队列的库&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/pda/pheanstalk&#34;&gt;Pheanstalk&lt;/a&gt; -一个Beanstalkd 客户端库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/videlalvaro/php-amqplib&#34;&gt;PHP AMQP&lt;/a&gt; -一个纯PHP AMQP库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/videlalvaro/Thumper&#34;&gt;Thumper&lt;/a&gt; - 一个RabbitMQ模式库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/bernardphp/bernard&#34;&gt;Bernard&lt;/a&gt; -一个多后端抽象库&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;Search-搜索&#34;&gt;&lt;a href=&#34;#Search-搜索&#34; class=&#34;headerlink&#34; title=&#34;Search 搜索&#34;&gt;&lt;/a&gt;Search 搜索&lt;/h2&gt;&lt;p&gt;&lt;em&gt;在数据上索引和执行查询的库和软件&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/elasticsearch/elasticsearch-php&#34;&gt;ElasticSearch PHP&lt;/a&gt; -ElasticSearch的官方客户端库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/ruflin/Elastica&#34;&gt;Elastica&lt;/a&gt; -ElasticSearch的客户端库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.solarium-project.org/&#34;&gt;Solarium&lt;/a&gt; -Solr的客户端库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://foolcode.github.io/SphinxQL-Query-Builder/&#34;&gt;SphinxQL query builder&lt;/a&gt; -Sphinx搜索引擎的的查询库&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;Command-Line-命令行&#34;&gt;&lt;a href=&#34;#Command-Line-命令行&#34; class=&#34;headerlink&#34; title=&#34;Command Line 命令行&#34;&gt;&lt;/a&gt;Command Line 命令行&lt;/h2&gt;&lt;p&gt;&lt;em&gt;构建命令行工具的库&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/d11wtq/boris&#34;&gt;Boris&lt;/a&gt; - 一个微型PHP REPL&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/bobthecow/psysh&#34;&gt;PsySH&lt;/a&gt; - 另一个微型PHP REPL&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/mcrumm/pecan&#34;&gt;Pecan&lt;/a&gt; -一个事件驱动和非阻塞内核&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/ulrichsg/getopt-php&#34;&gt;GetOpt&lt;/a&gt; - 一个命令行选择解析器&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/CHH/optparse&#34;&gt;OptParse&lt;/a&gt; -另一个命令行选择解析器&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/nategood/commando&#34;&gt;Commando&lt;/a&gt; -另一个简单的命令行选择解析器&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/c9s/php-GetOptionKit&#34;&gt;GetOptionKit&lt;/a&gt; -另一个命令行选择解析器&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/mtdowling/cron-expression&#34;&gt;Cron Expression&lt;/a&gt; -计算cron运行日期的库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/MrRio/shellwrap&#34;&gt;ShellWrap&lt;/a&gt; -一个简单的命令行包装库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/hoaproject/Console&#34;&gt;Hoa Console&lt;/a&gt; -另一个命令行库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/php-loep/shunt&#34;&gt;Shunt&lt;/a&gt; - 一个在多台远程机器上并行运行命令行的库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Cilex/Cilex&#34;&gt;Cilex&lt;/a&gt; -一个构建命令行工具的微型框架&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;Authentication-身份验证&#34;&gt;&lt;a href=&#34;#Authentication-身份验证&#34; class=&#34;headerlink&#34; title=&#34;Authentication 身份验证&#34;&gt;&lt;/a&gt;Authentication 身份验证&lt;/h2&gt;&lt;p&gt;&lt;em&gt;实现身份验证的库&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/cartalyst/sentry&#34;&gt;Sentry&lt;/a&gt; -一个混合的身份验证和授权的框架库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://docs.cartalyst.com/sentry-social-2/introduction&#34;&gt;Sentry Social&lt;/a&gt; -一个社交网络身份验证库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/opauth/opauth&#34;&gt;Opauth&lt;/a&gt; -一个多渠道的身份验证框架&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/php-loep/oauth2-server&#34;&gt;OAuth2&lt;/a&gt; -一个OAuth2身份验证服务，资源服务器和客户端库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://bshaffer.github.io/oauth2-server-php-docs/&#34;&gt;OAuth2 Server&lt;/a&gt; -另一个OAuth2服务器实现&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Lusitanian/PHPoAuthLib&#34;&gt;PHP oAuthLib&lt;/a&gt; -另一个OAuth库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/ruudk/twitteroauth&#34;&gt;TwitterOAuth&lt;/a&gt; -一个Twitter OAuth库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/lyrixx/twitter-sdk&#34;&gt;TwitterSDK&lt;/a&gt; -一个完全测试的Twitter SDK&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/dflydev/dflydev-hawk&#34;&gt;Hawk&lt;/a&gt; -一个Hawk HTTP身份认证库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/hybridauth/hybridauth&#34;&gt;HybridAuth&lt;/a&gt; -一个开源的社交登陆库&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;Markup-标记&#34;&gt;&lt;a href=&#34;#Markup-标记&#34; class=&#34;headerlink&#34; title=&#34;Markup 标记&#34;&gt;&lt;/a&gt;Markup 标记&lt;/h2&gt;&lt;p&gt;&lt;em&gt;处理标记的库&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://milesj.me/code/php/decoda&#34;&gt;Decoda&lt;/a&gt; -一个轻量级标记解析库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/michelf/php-markdown&#34;&gt;PHP Markdown&lt;/a&gt; -一个Markdown解析器&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/thephpleague/commonmark&#34;&gt;CommonMark PHP&lt;/a&gt; -一个对 &lt;a href=&#34;https://jgm.github.io/stmd/spec.html&#34;&gt;CommonMark spec&lt;/a&gt;全支持的Markdown解析器&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/dflydev/dflydev-markdown&#34;&gt;Dflydev Markdown&lt;/a&gt; -另一个Markdown解析器&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/erusev/parsedown&#34;&gt;Parsedown&lt;/a&gt; -另一个Markdown解析器&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/kzykhys/Ciconia&#34;&gt;Ciconia&lt;/a&gt; - 另一个支持Github Markdown风格的Markdown解析器&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/cebe/markdown&#34;&gt;Cebe Markdown&lt;/a&gt; -一个快速的可扩展的Markdown解析器&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Masterminds/html5-php&#34;&gt;HTML5 PHP&lt;/a&gt; - 一个HTML5解析和序列化库&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;Strings-字符串&#34;&gt;&lt;a href=&#34;#Strings-字符串&#34; class=&#34;headerlink&#34; title=&#34;Strings 字符串&#34;&gt;&lt;/a&gt;Strings 字符串&lt;/h2&gt;&lt;p&gt;&lt;em&gt;解析和处理字符串的库&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/sensiolabs/ansi-to-html&#34;&gt;ANSI to HTML5&lt;/a&gt; -ANSI到HTML5的转化库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/nicolas-grekas/Patchwork-UTF8&#34;&gt;Patchwork UTF-8&lt;/a&gt; -一个处理UTF-8字符串的便携库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/hoaproject/String&#34;&gt;Hoa String&lt;/a&gt; -另一个UTF-8字符串库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/danielstjules/Stringy&#34;&gt;Stringy&lt;/a&gt; -一个多字节支持的字符串处理库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/mikeemoo/ColorJizz-PHP&#34;&gt;Color Jizz&lt;/a&gt; -处理和转换颜色的库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/ramsey/uuid&#34;&gt;UUID&lt;/a&gt; - 生成UUIDs的库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/cocur/slugify&#34;&gt;Slugify&lt;/a&gt; -转换字符串到slug的库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/jbroadway/urlify&#34;&gt;Urlify&lt;/a&gt; - 一个Django的 URLify.jsPHP通道&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/kzykhys/Text&#34;&gt;Text&lt;/a&gt; - 一个文本处理库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/jdorn/sql-formatter/&#34;&gt;SQL Formatter&lt;/a&gt; -一个格式化SQL语句的库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/tobie/ua-parser/tree/master/php&#34;&gt;UA Parser&lt;/a&gt; - 一个解析用户代理字符串的库&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;Numbers-数字&#34;&gt;&lt;a href=&#34;#Numbers-数字&#34; class=&#34;headerlink&#34; title=&#34;Numbers 数字&#34;&gt;&lt;/a&gt;Numbers 数字&lt;/h2&gt;&lt;p&gt;&lt;em&gt;处理数字的库&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/powder96/numbers.php&#34;&gt;Numbers PHP&lt;/a&gt; -处理数字的库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/moontoast/math&#34;&gt;Math&lt;/a&gt; -处理大数字的库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/gabrielelana/byte-units&#34;&gt;ByteUnits&lt;/a&gt; - 在二进制和度量系统中解析,格式化和转换字节单元的库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/triplepoint/php-units-of-measure&#34;&gt;PHP Units of Measure&lt;/a&gt; -一个计量单位转换的库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Crisu83/php-conversion&#34;&gt;PHP Conversion&lt;/a&gt; - 另一个计量单位转换的库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/giggsey/libphonenumber-for-php&#34;&gt;LibPhoneNumber for PHP&lt;/a&gt; -Google电话号码处理的PHP实现库&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;Filtering-and-Validation-过滤和验证&#34;&gt;&lt;a href=&#34;#Filtering-and-Validation-过滤和验证&#34; class=&#34;headerlink&#34; title=&#34;Filtering and Validation 过滤和验证&#34;&gt;&lt;/a&gt;Filtering and Validation 过滤和验证&lt;/h2&gt;&lt;p&gt;&lt;em&gt;过滤和验证数据的库&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/ircmaxell/filterus&#34;&gt;Filterus&lt;/a&gt; - 一个简单的PHP过滤库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Respect/Validation&#34;&gt;Respect Validate&lt;/a&gt; -一个简单的验证库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/vlucas/valitron&#34;&gt;Valitron&lt;/a&gt; -另一个验证库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/codeguy/Upload&#34;&gt;Upload&lt;/a&gt; - 一个处理文件上传和验证的库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/rdohms/DMS-Filter&#34;&gt;DMS Filter&lt;/a&gt; - 一个注释过滤库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/romaricdrigon/MetaYaml&#34;&gt;MetaYaml&lt;/a&gt; -一个支持YAML,JSON和XML的模式验证库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/ronanguilloux/IsoCodes&#34;&gt;ISO-codes&lt;/a&gt; -验证各种ISO和ZIP编码的库(IBAN, SWIFT/BIC, BBAN, VAT, SSN, UKNIN)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;REST和API&#34;&gt;&lt;a href=&#34;#REST和API&#34; class=&#34;headerlink&#34; title=&#34; REST和API&#34;&gt;&lt;/a&gt; REST和API&lt;/h2&gt;&lt;p&gt;&lt;em&gt;开发REST-ful API的库和web工具&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/zfcampus/zf-apigility-skeleton&#34;&gt;Apigility&lt;/a&gt; -一个使用Zend Framework 2构建的API构建器&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/willdurand/Hateoas&#34;&gt;Hateoas&lt;/a&gt; -一个HOATEOAS REST web服务库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/blongden/hal&#34;&gt;HAL&lt;/a&gt; -一个超文本应用语言（HAL)构建库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/willdurand/Negotiation&#34;&gt;Negotiation&lt;/a&gt; -一个内容协商库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/leedavis81/drest&#34;&gt;Drest&lt;/a&gt; -一个将Doctrine实体暴露为REST资源节点的库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Luracast/Restler&#34;&gt;Restler&lt;/a&gt; -一个将PHP方法暴露为RESTful web API的轻量级框架&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;Caching-缓存&#34;&gt;&lt;a href=&#34;#Caching-缓存&#34; class=&#34;headerlink&#34; title=&#34;Caching 缓存&#34;&gt;&lt;/a&gt;Caching 缓存&lt;/h2&gt;&lt;p&gt;&lt;em&gt;缓存数据的库&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.php.net/manual/en/book.apc.php&#34;&gt;Alternative PHP Cache (APC)&lt;/a&gt; - 打开PHP伪代码缓存&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/doctrine/cache&#34;&gt;Cache&lt;/a&gt; -一个缓存库（Doctrine部分）&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/tedivm/Stash&#34;&gt;Stash&lt;/a&gt; -另一个缓存库&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;数据结构和存储&#34;&gt;&lt;a href=&#34;#数据结构和存储&#34; class=&#34;headerlink&#34; title=&#34;数据结构和存储&#34;&gt;&lt;/a&gt;数据结构和存储&lt;/h2&gt;&lt;p&gt;&lt;em&gt;实现数据结构和存储技术的库&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/morrisonlevi/Ardent&#34;&gt;Ardent&lt;/a&gt; -一个数据结构库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/schmittjoh/php-collection&#34;&gt;PHP Collections&lt;/a&gt; - 一个简单的集合库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/schmittjoh/serializer&#34;&gt;Serializer&lt;/a&gt; -一个序列化和反序列化数据的库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/herrera-io/php-object-storage&#34;&gt;PHP Object Storage&lt;/a&gt; -一个对象存储库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/php-loep/fractal&#34;&gt;Fractal&lt;/a&gt; -一个转换复杂数据结构到JSON输出的库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://github.com/Wisembly/Totem&#34;&gt;Totem&lt;/a&gt; -一个管理和穿件数据交换集的库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/TimeToogo/Pinq&#34;&gt;PINQ&lt;/a&gt; -一个PHP实时Linq库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/netresearch/jsonmapper&#34;&gt;JsonMapper&lt;/a&gt; -一个将内嵌JSON结构映射为PHP类的库&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;Notifications-通知&#34;&gt;&lt;a href=&#34;#Notifications-通知&#34; class=&#34;headerlink&#34; title=&#34;Notifications 通知&#34;&gt;&lt;/a&gt;Notifications 通知&lt;/h2&gt;&lt;p&gt;&lt;em&gt;处理通知软件的库&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/filp/nod&#34;&gt;Nod&lt;/a&gt; -一个通知库（Growl等）&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/wrep/notificato&#34;&gt;Notificato&lt;/a&gt; - 一个处理推送通知的库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Ph3nol/NotificationPusher&#34;&gt;Notification Pusher&lt;/a&gt; -一个设备推送通知的独立库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/namshi/notificator&#34;&gt;Notificator&lt;/a&gt; -一个轻量级的通知库&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;Deployment-部署&#34;&gt;&lt;a href=&#34;#Deployment-部署&#34; class=&#34;headerlink&#34; title=&#34;Deployment 部署&#34;&gt;&lt;/a&gt;Deployment 部署&lt;/h2&gt;&lt;p&gt;&lt;em&gt;项目部署库&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/tamagokun/pomander&#34;&gt;Pomander&lt;/a&gt; -一个PHP应用部署工具&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Anahkiasen/rocketeer&#34;&gt;Rocketeer&lt;/a&gt; -PHP世界里的一个快速简单的部署器&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/laravel/envoy&#34;&gt;Envoy&lt;/a&gt; -一个用PHP运行SSH任务的工具&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/aerialls/Plum&#34;&gt;Plum&lt;/a&gt; - 一个部署库&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;国际化和本地化&#34;&gt;&lt;a href=&#34;#国际化和本地化&#34; class=&#34;headerlink&#34; title=&#34;国际化和本地化&#34;&gt;&lt;/a&gt;国际化和本地化&lt;/h2&gt;&lt;p&gt;&lt;em&gt;国际化（I18n）和本地化（L10n）&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/auraphp/Aura.Intl&#34;&gt;Aura.Intl&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;第三方API&#34;&gt;&lt;a href=&#34;#第三方API&#34; class=&#34;headerlink&#34; title=&#34;第三方API&#34;&gt;&lt;/a&gt;第三方API&lt;/h2&gt;&lt;p&gt;&lt;em&gt;访问第三方API的库&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/aws/aws-sdk-php&#34;&gt;Amazon Web Service SDK&lt;/a&gt; - PHP AWS SDK官方库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/gwkunze/S3StreamWrapper&#34;&gt;S3 Stream Wrapper&lt;/a&gt; -Amazon S3流包装库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/stripe/stripe-php&#34;&gt;Stripe&lt;/a&gt; -Stripe官方PHP库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://campaignmonitor.github.com/createsend-php/&#34;&gt;Campaign Monitor&lt;/a&gt; -Campaign Monitor官方PHP库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/toin0u/DigitalOcean&#34;&gt;Digital Ocean&lt;/a&gt; -Digital Ocean API 接口库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/dsyph3r/github-api3-php&#34;&gt;Github&lt;/a&gt; - Github API交互库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/KnpLabs/php-github-api&#34;&gt;PHP Github API&lt;/a&gt; -另一个Github API交互库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/widop/twitter-oauth&#34;&gt;Twitter OAuth&lt;/a&gt; -Twitter OAuth工作流交互库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/widop/twitter-rest&#34;&gt;Twitter REST&lt;/a&gt; - Twitter REST API交互库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/dropbox/dropbox-sdk-php&#34;&gt;Dropbox SDK&lt;/a&gt; - The official PHP Dropbox SDK library.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/dropbox/dropbox-sdk-php&#34;&gt;Dropbox SDK&lt;/a&gt; - Dropbox SDK官方PHP库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/twilio/twilio-php&#34;&gt;Twilio&lt;/a&gt; - The official Twilio PHP REST API.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/twilio/twilio-php&#34;&gt;Twilio&lt;/a&gt; - Twilio官方PHP REST API&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/mailgun/mailgun-php&#34;&gt;Mailgun&lt;/a&gt; The official Mailgun PHP API.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/mailgun/mailgun-php&#34;&gt;Mailgun&lt;/a&gt; Mailgun官方PHP REST API&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;Extensions-扩展&#34;&gt;&lt;a href=&#34;#Extensions-扩展&#34; class=&#34;headerlink&#34; title=&#34;Extensions 扩展&#34;&gt;&lt;/a&gt;Extensions 扩展&lt;/h2&gt;&lt;p&gt;&lt;em&gt;帮组构建PHP扩展的库&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/phalcon/zephir&#34;&gt;Zephir&lt;/a&gt; -用于开发PHP扩展，且介于PHP和C++之间的编译语言&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.php-cpp.com/&#34;&gt;PHP CPP&lt;/a&gt; -一个开发PHP扩展的C++库&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;Miscellaneous-杂项&#34;&gt;&lt;a href=&#34;#Miscellaneous-杂项&#34; class=&#34;headerlink&#34; title=&#34;Miscellaneous 杂项&#34;&gt;&lt;/a&gt;Miscellaneous 杂项&lt;/h2&gt;&lt;p&gt;&lt;em&gt;不在上面分类中的有用库和工具&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/kriswallsmith/spork&#34;&gt;Spork&lt;/a&gt; -一个处理forking的库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Seldaek/jsonlint&#34;&gt;JSON Lint&lt;/a&gt; - 一个JSON lint工具&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/willdurand/JsonpCallbackValidator&#34;&gt;JSONPCallbackValidator&lt;/a&gt; -验证JSONP回调的库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/whiteoctober/Pagerfanta&#34;&gt;Pagerfanta&lt;/a&gt; -一个分页库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/bobthecow/Ruler&#34;&gt;Ruler&lt;/a&gt; - 一个简单的无状态的生产环境规则引擎。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/beberlei/litecqrs-php&#34;&gt;LiteCQRS&lt;/a&gt; -一个CQRS(命令查询责任分离)库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/EvanDotPro/Sslurp&#34;&gt;Sslurp&lt;/a&gt; - 一个使得SSL处理减少的库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/schmittjoh/php-option&#34;&gt;PHP Option&lt;/a&gt;一个可选的类型库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/beberlei/metrics&#34;&gt;Metrics&lt;/a&gt; -一个简单的度量API库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/evert/sabre-vobject&#34;&gt;Sabre VObject&lt;/a&gt; - 一个解析VCard和iCalendar对象的库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/doctrine/annotations&#34;&gt;Annotations&lt;/a&gt; -一个注释库（Doctrine部分）&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/filp/whoops&#34;&gt;Whoops&lt;/a&gt; -一个不错的错误处理库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://yohan.giarel.li/Finite&#34;&gt;Finite&lt;/a&gt; -一个简单的PHP有限状态机&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/raulfraile/Ladybug&#34;&gt;LadyBug&lt;/a&gt; -一个dumper库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/lstrojny/Procrastinator&#34;&gt;Procrastinator&lt;/a&gt; -运行耗时任务的库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/igorw/compose&#34;&gt;Compose&lt;/a&gt; -一个功能组合库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/jeremeamia/super_closure&#34;&gt;SuperClosure&lt;/a&gt; -一个允许闭包序列化的库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/kakawait/Jumper&#34;&gt;Jumper&lt;/a&gt; - 一个远程服务执行库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://anahkiasen.github.io/underscore-php/&#34;&gt;Underscore&lt;/a&gt; -一个Undersccore JS库的PHP实现&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/eymengunay/php-passbook&#34;&gt;PHP PassBook&lt;/a&gt; -一个iOS PassBook PHP库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Kitano/php-expression&#34;&gt;PHP Expression&lt;/a&gt; -一个PHP表达式语言&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/liip/RMT&#34;&gt;RMT&lt;/a&gt; - 一个编写版本和发布软件的库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/herrera-io/php-wise&#34;&gt;Wise&lt;/a&gt; - 一个配置管理器&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/euskadi31/Opengraph&#34;&gt;Opengraph&lt;/a&gt; -一个开放图库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/felixgirault/essence&#34;&gt;Essence&lt;/a&gt; -一个提取web媒体的库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/mpratt/Embera&#34;&gt;Embera&lt;/a&gt; -一个Oembed消费库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/alexandresalome/graphviz&#34;&gt;Graphviz&lt;/a&gt; -一个图形库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/ircmaxell/monad-php&#34;&gt;Monad PHP&lt;/a&gt; 一个简单Monad库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/selvinortiz/flux&#34;&gt;Flux&lt;/a&gt; -一个正则表达式构建库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://antecedent.github.io/patchwork/&#34;&gt;Patchwork&lt;/a&gt; - 一个重新定义用户的函数库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/igorw/galapagos&#34;&gt;Galapagos&lt;/a&gt; -语言转换进化&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/domnikl/DesignPatternsPHP&#34;&gt;Design Patterns PHP&lt;/a&gt; -一个使用PHP实现的设计模式存储库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/phpcr/phpcr&#34;&gt;PHPCR&lt;/a&gt; - 一个Java内容存储库（JCR)的PHP实现&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/lstrojny/functional-php&#34;&gt;Functional PHP&lt;/a&gt; - 一个函数式编程库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/mtdowling/ClassPreloader&#34;&gt;ClassPreloader&lt;/a&gt; - 一个优化自动加载的库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/phine/lib-country&#34;&gt;Lib Country&lt;/a&gt; -一个国家和地区数据的库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/phine/lib-accessor&#34;&gt;Lib Accessor&lt;/a&gt; -一个简化访问的库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://dunkels.com/adam/phpstack/&#34;&gt;PHPStack&lt;/a&gt; -一个PHP编写的TCP/IP栈概念&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/willdurand/nmap&#34;&gt;Nmap&lt;/a&gt; -一个Nmap PHP包装器&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/dantleech/code-mover&#34;&gt;Code Mover&lt;/a&gt; -一个移动代码的库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/nikic/iter&#34;&gt;Iter&lt;/a&gt; -一个使用生成器提供迭代原语的库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/igorw/lambda-php&#34;&gt;Lambda PHP&lt;/a&gt; -一个PHP中的Lambda 计算解析器&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/umpirsky/country-list&#34;&gt;Country List&lt;/a&gt; - 所有带有名称和ISO 3166-1编码的国家列表&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/ronanguilloux/php-gpio&#34;&gt;PHP-GPIO&lt;/a&gt; - 用于Raspberry PI的GPIO pin的库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/koriym/print_o&#34;&gt;print_o&lt;/a&gt; - 一个对象图的可视化器&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fuelphp/alias&#34;&gt;Alias&lt;/a&gt; -一个类别名库&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;Software-软件&#34;&gt;&lt;a href=&#34;#Software-软件&#34; class=&#34;headerlink&#34; title=&#34;Software 软件&#34;&gt;&lt;/a&gt;Software 软件&lt;/h1&gt;&lt;p&gt;&lt;em&gt;创建一个开发环境的软件&lt;/em&gt;  &lt;/p&gt;
&lt;h2 id=&#34;PHP安装&#34;&gt;&lt;a href=&#34;#PHP安装&#34; class=&#34;headerlink&#34; title=&#34;PHP安装&#34;&gt;&lt;/a&gt;PHP安装&lt;/h2&gt;&lt;p&gt;&lt;em&gt;在你的电脑上帮助安装和管理PHP的工具&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://mxcl.github.com/homebrew/&#34;&gt;HomeBrew&lt;/a&gt; -一个OSX包管理器&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/josegonzalez/homebrew-php&#34;&gt;HomeBrew PHP&lt;/a&gt; -一个HomeBrew的PHP通道&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://php-osx.liip.ch/&#34;&gt;PHP OSX&lt;/a&gt; - 一个OSX下的PHP安装器&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/c9s/phpbrew&#34;&gt;PHP Brew&lt;/a&gt; -一个PHP版本管理和安装器&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/CHH/phpenv&#34;&gt;PHP Env&lt;/a&gt; - 另一个PHP版本管理器&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/jubianchi/phpswitch&#34;&gt;PHP Switch&lt;/a&gt; - 另一个PHP版本管理器&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/CHH/php-build&#34;&gt;PHP Build&lt;/a&gt; - 另一个PHP版本安装器&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://virtphp.org/&#34;&gt;VirtPHP&lt;/a&gt; - 一个创建和管理独立PHP环境的工具&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;Development-Environment-开发环境&#34;&gt;&lt;a href=&#34;#Development-Environment-开发环境&#34; class=&#34;headerlink&#34; title=&#34;Development Environment 开发环境&#34;&gt;&lt;/a&gt;Development Environment 开发环境&lt;/h2&gt;&lt;p&gt;&lt;em&gt;创建沙盒开发环境的软件和工具&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.vagrantup.com/&#34;&gt;Vagrant&lt;/a&gt; -一个便携的开发环境工具&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.ansibleworks.com/&#34;&gt;Ansible&lt;/a&gt; - 一个非常简单的编制框架&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://puppetlabs.com/&#34;&gt;Puppet&lt;/a&gt; -一个服务器自动化框架和应用&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://puphpet.com/&#34;&gt;PuPHPet&lt;/a&gt; -一个构建PHP开发虚拟机的web工具&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://getprotobox.com/&#34;&gt;Protobox&lt;/a&gt; -另一个构建PHP开发虚拟机的web工具&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://phansible.com/&#34;&gt;Phansible&lt;/a&gt; - 一个用Ansible构建PHP开发虚拟机的web工具&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;Virtual-Machines-虚拟机&#34;&gt;&lt;a href=&#34;#Virtual-Machines-虚拟机&#34; class=&#34;headerlink&#34; title=&#34;Virtual Machines 虚拟机&#34;&gt;&lt;/a&gt;Virtual Machines 虚拟机&lt;/h2&gt;&lt;p&gt;&lt;em&gt;相关的PHP虚拟机&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/facebook/hiphop-php&#34;&gt;HipHop PHP&lt;/a&gt; -Facebook出品的PHP虚拟机，运行时和JIT&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://hippyvm.com/&#34;&gt;HippyVM&lt;/a&gt; -另一个PHP虚拟机&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://hacklang.org/&#34;&gt;Hack&lt;/a&gt; - 一个PHP进行无缝操作的 &lt;a href=&#34;https://github.com/facebook/hiphop-php&#34;&gt;HHVM&lt;/a&gt;编程语言&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;IDE-集成开发环境&#34;&gt;&lt;a href=&#34;#IDE-集成开发环境&#34; class=&#34;headerlink&#34; title=&#34;IDE 集成开发环境&#34;&gt;&lt;/a&gt;IDE 集成开发环境&lt;/h2&gt;&lt;p&gt;&lt;em&gt;支持PHP的集成开发环境&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://netbeans.org/&#34;&gt;Netbeans&lt;/a&gt; -一个支持PHP和HTML5的IDE&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.eclipse.org/downloads/&#34;&gt;Eclipse for PHP Developers&lt;/a&gt; -一个基于Eclipse平台的PHP IDE&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.jetbrains.com/phpstorm/&#34;&gt;PhpStorm&lt;/a&gt; -一个商业PHP IDE&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;Web-Applications-Web应用&#34;&gt;&lt;a href=&#34;#Web-Applications-Web应用&#34; class=&#34;headerlink&#34; title=&#34;Web Applications Web应用&#34;&gt;&lt;/a&gt;Web Applications Web应用&lt;/h2&gt;&lt;p&gt;&lt;em&gt;基于Web的应用和工具&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://3v4l.org/&#34;&gt;3V4L&lt;/a&gt;一个在线的PHP shell&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://dbv.vizuina.com/&#34;&gt;DBV&lt;/a&gt; -一个数据库版本控制应用&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/CoderKungfu/php-queue&#34;&gt;PHP Queue&lt;/a&gt; -一个管理后端队列的应用&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://composer.borreli.com/&#34;&gt;Composer as a Service&lt;/a&gt; - 作为一个zip文件下载Composer包的工具&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/sj26/mailcatcher&#34;&gt;MailCatcher&lt;/a&gt; - 一个抓取和查看邮件的web工具&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;Resources-资源&#34;&gt;&lt;a href=&#34;#Resources-资源&#34; class=&#34;headerlink&#34; title=&#34;Resources 资源&#34;&gt;&lt;/a&gt;Resources 资源&lt;/h1&gt;&lt;p&gt;各种提高你的PHP开发技能和知识的资源，比如书籍，网站，文章  &lt;/p&gt;
&lt;h2 id=&#34;PHP网站&#34;&gt;&lt;a href=&#34;#PHP网站&#34; class=&#34;headerlink&#34; title=&#34;PHP网站&#34;&gt;&lt;/a&gt;PHP网站&lt;/h2&gt;&lt;p&gt;&lt;em&gt;PHP相关的有用网站&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.phptherightway.com/&#34;&gt;PHP The Right Way&lt;/a&gt; -一个PHP最佳实践的快速指引手册&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://phpbestpractices.org/&#34;&gt;PHP Best Practices&lt;/a&gt; - 一个PHP最佳实践指南&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://phpweekly.info/archive/&#34;&gt;PHP Weekly&lt;/a&gt; - 一个PHP新闻周刊&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://phpsecurity.readthedocs.org/en/latest/index.html&#34;&gt;PHP Security&lt;/a&gt; - 一个PHP安全指南&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.php-fig.org/&#34;&gt;PHP FIG&lt;/a&gt; - PHP框架交互组&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://php.ug/&#34;&gt;PHP UG&lt;/a&gt; -一个帮助用户定位最近的PHP用户组（UG)的网站&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://7php.com/&#34;&gt;Seven PHP&lt;/a&gt; -一个PHP社区成员采访的网站&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://nomadphp.com/&#34;&gt;Nomad PHP&lt;/a&gt; -一个在线PHP学习资源&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://phpmentoring.org/&#34;&gt;PHP Mentoring&lt;/a&gt; -点对点PHP导师组织&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;Other-Websites-其他网站&#34;&gt;&lt;a href=&#34;#Other-Websites-其他网站&#34; class=&#34;headerlink&#34; title=&#34;Other Websites 其他网站&#34;&gt;&lt;/a&gt;Other Websites 其他网站&lt;/h2&gt;&lt;p&gt;&lt;em&gt;web开发相关的有用网站&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.owasp.org/index.php/Main_Page&#34;&gt;The Open Web Application Security Project (OWASP)&lt;/a&gt; -一个开放软件安全社区&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://websec.io/&#34;&gt;WebSec IO&lt;/a&gt; - 一个web安全社区资源&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://webadvent.org/&#34;&gt;Web Advent&lt;/a&gt; -一个web开发人员日历&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://semver.org/&#34;&gt;Semantic Versioning&lt;/a&gt; -一个解析语义版本的网站&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.atlassian.com/git&#34;&gt;Atlassian Git Tutorials&lt;/a&gt; -一个Git教程系列&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://hginit.com/&#34;&gt;Hg Init&lt;/a&gt; -一个Mercurial教程系列&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://serversforhackers.com/&#34;&gt;Servers for Hackers&lt;/a&gt; - 一个关于服务器管理的新闻通讯&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;PHP-书籍&#34;&gt;&lt;a href=&#34;#PHP-书籍&#34; class=&#34;headerlink&#34; title=&#34;PHP 书籍&#34;&gt;&lt;/a&gt;PHP 书籍&lt;/h2&gt;&lt;p&gt;&lt;em&gt;PHP相关的非常好的书籍&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.scalingphpbook.com/&#34;&gt;Scaling PHP Applications&lt;/a&gt; - 一本Steve Corona关于扩展PHP应用程序的电子书&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://leanpub.com/grumpy-testing&#34;&gt;The Grumpy Programmer’s Guide to Building Testable PHP Applications&lt;/a&gt; -一本Chris Hartjes关于构建PHP应用程序测试的书&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://leanpub.com/grumpy-phpunit&#34;&gt;Grumpy PHPUnit&lt;/a&gt; -一本Chris Hartjes关于使用PHPUnit进行单元测试的书&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.brandonsavage.net/&#34;&gt;Mastering Object-Orientated PHP&lt;/a&gt; - 一本Brandon Savage关于PHP面向对象的书&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://leanpub.com/signalingphp&#34;&gt;Signaling PHP&lt;/a&gt; -一本Cal Evans关于在CLI脚本捕获PCNTL 信号的书&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://leanpub.com/securingphp-coreconcepts&#34;&gt;Securing PHP: Core Concepts&lt;/a&gt; -一本Chris Cornutt关于PHP常见安全条款和实践的书&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://leanpub.com/mlaphp&#34;&gt;Modernising Legacy Applications in PHP&lt;/a&gt; -一本Paul M.Jones关于遗留PHP应用进行现代化的书&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;其他书籍&#34;&gt;&lt;a href=&#34;#其他书籍&#34; class=&#34;headerlink&#34; title=&#34;其他书籍&#34;&gt;&lt;/a&gt;其他书籍&lt;/h2&gt;&lt;p&gt;&lt;em&gt;与一般计算和web开发相关的书&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://linuxcommand.org/tlcl.php&#34;&gt;The Linux Command Line&lt;/a&gt; -William Shotts关于Linux命令行的一本书&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://computationbook.com/&#34;&gt;Understanding Computation&lt;/a&gt; -Tom Stuart关于计算理论的一本书&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.amazon.ca/The-Tangled-Web-Securing-Applications/dp/1593273886&#34;&gt;The Tangled Web — Securing Web Applications&lt;/a&gt; - Michal Zalewski关于web应用安全的一本书&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.elasticsearch.org/guide/&#34;&gt;Elasticsearch: The Definitive Guide&lt;/a&gt; -Clinton Cormley和Zachary Tong编写的与Elasticsearch工作的一本指南&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://eloquentjavascript.net/&#34;&gt;Eloquent JavaScript&lt;/a&gt; -Marijin Haverbeke关于JavaScript编程的一本书&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://leanpub.com/vagrantcookbook&#34;&gt;Vagrant Cookbook&lt;/a&gt;-Erika Heidi关于创建 Vagrant环境的一本书&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://git-scm.com/book/en/v2&#34;&gt;Pro Git&lt;/a&gt; -Scott Chacon和Ben Straub关于Git的一本书&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;PHP视频&#34;&gt;&lt;a href=&#34;#PHP视频&#34; class=&#34;headerlink&#34; title=&#34;PHP视频&#34;&gt;&lt;/a&gt;PHP视频&lt;/h2&gt;&lt;p&gt;&lt;em&gt;PHP相关的非常不错的视频&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.infoq.com/presentations/php-history&#34;&gt;Taking PHP Seriously&lt;/a&gt; - 来自Facebook Keith Adams 讲述PHP优势&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://phptownhall.com/&#34;&gt;PHP Town Hall&lt;/a&gt; - 一个随意的Ben Edmunds和Phil Sturgeon的PHP播客&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.youtube.com/playlist?list=PLM-218uGSX3DQ3KsB5NJnuOqPqc5CW2kW&#34;&gt;Programming with Anthony&lt;/a&gt;  Anthony Ferrara的视频系列&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;PHP阅读&#34;&gt;&lt;a href=&#34;#PHP阅读&#34; class=&#34;headerlink&#34; title=&#34;PHP阅读&#34;&gt;&lt;/a&gt;PHP阅读&lt;/h2&gt;&lt;p&gt;&lt;em&gt;PHP相关的阅读资料&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://fabien.potencier.org/article/50/create-your-own-framework-on-top-of-the-symfony2-components-part-1&#34;&gt;Create Your Own PHP Framework&lt;/a&gt; - 一部Fabien Potencier的关于如何创建你自己的PHP框架的系列文章&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.ircmaxell.com/2012/12/seven-ways-to-screw-up-bcrypt.html&#34;&gt;Seven Ways to Screw Up BCrypt&lt;/a&gt; - 一篇关于纠正BCrypt实现的文章&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.ircmaxell.com/2013/02/preventing-csrf-attacks.html&#34;&gt;Preventing CSRF Attacks&lt;/a&gt; -一篇组织CSRF攻击的文章&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.ircmaxell.com/2013/08/dont-worry-about-breach.html&#34;&gt;Don’t Worry About BREACH&lt;/a&gt; - 一篇关于BREACH攻击和CSRF令牌的文章&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://fabien.potencier.org/article/17/on-php-5-3-lambda-functions-and-closures&#34;&gt;On PHP 5.3, Lamda Functions and Closures&lt;/a&gt; -一篇关于lambda函数和闭包的文章&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://seancoates.com/blogs/use-env&#34;&gt;Use Env&lt;/a&gt; - 一篇关于使用unix环境帮助的文章&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://daylerees.com/composer-primer&#34;&gt;Composer Primer&lt;/a&gt; - Composer初级&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://igor.io/2013/01/07/composer-versioning.html&#34;&gt;Composer Versioning&lt;/a&gt; -一篇关于Composer版本的文章&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://igor.io/2013/02/07/composer-stability-flags.html&#34;&gt;Composer Stability Flags&lt;/a&gt; -一篇关于Composer稳定性标志的文章&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.astrumfutura.com/2012/04/php-innocent-villagefolk-or-a-pillagin-pirate/&#34;&gt;Innocent Villagefolk or a Pillagin’ Pirate?&lt;/a&gt; -一篇关于PHP从其他语言获取想法的文章&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.astrumfutura.com/2013/03/predicting-random-numbers-in-php-its-easier-than-you-think/&#34;&gt;Predicting Random Numbers in PHP&lt;/a&gt; -一篇关于生成随机数的文章&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.astrumfutura.com/2013/04/20-point-list-for-preventing-cross-site-scripting-in-php/&#34;&gt;A 20 Point List for Preventing XSS in PHP&lt;/a&gt; -一篇关于组织XSS的文章&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.ircmaxell.com/2012/04/php-sucks-but-i-like-it.html&#34;&gt;PHP Sucks! But I Like It!&lt;/a&gt; -一篇关于PHP利弊的文章&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://fabien.potencier.org/article/64/php-is-much-better-than-you-think&#34;&gt;PHP Is Much Better Than You Think&lt;/a&gt; -一篇关于PHP语言和生态圈的文章&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;PHP-Internals-Reading-PHP内核阅读&#34;&gt;&lt;a href=&#34;#PHP-Internals-Reading-PHP内核阅读&#34; class=&#34;headerlink&#34; title=&#34;PHP Internals Reading PHP内核阅读&#34;&gt;&lt;/a&gt;PHP Internals Reading PHP内核阅读&lt;/h2&gt;&lt;p&gt;&lt;em&gt;阅读PHP内核或性能相关的资料&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://wiki.php.net/rfc&#34;&gt;PHP RFCs&lt;/a&gt; - PHP RFCs主页（请求注解）&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.phpinternalsbook.com/&#34;&gt;PHP Internals Book&lt;/a&gt; - 一本由三名核心开发编写的关于PHP内核的在线书&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://fabien.potencier.org/article/8/print-vs-echo-which-one-is-faster&#34;&gt;Print vs Echo, Which One is Faster?&lt;/a&gt; -一篇关于打印和echo性能的文章&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://fabien.potencier.org/article/48/the-php-ternary-operator-fast-or-not&#34;&gt;The PHP Ternary Operator. Fast or Not?&lt;/a&gt; -一篇关于三元操作性能的文章&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://nikic.github.com/2012/01/09/Disproving-the-Single-Quotes-Performance-Myth.html&#34;&gt;Disproving the Single Quotes Myth&lt;/a&gt; -一篇关于单，双引号字符串性能的文章&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.golemon.com/2007/01/youre-being-lied-to.html&#34;&gt;You’re Being Lied To&lt;/a&gt; - 一篇关于内核ZVALs的文章&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.golemon.com/2006/06/how-long-is-piece-of-string.html&#34;&gt;How Long is a Piece of String&lt;/a&gt; -一篇关于字符串原理的文章&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.golemon.com/2008/01/understanding-opcodes.html&#34;&gt;Understanding OpCodes&lt;/a&gt; -一篇关于伪代码的文章&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://stackoverflow.com/questions/10057671/how-foreach-actually-works/14854568#14854568&#34;&gt;How Foreach Works&lt;/a&gt; -StackOverflow 关于foreach回答的详情&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://nikic.github.com/2011/11/11/PHP-Internals-When-does-foreach-copy.html&#34;&gt;When Does Foreach Copy?&lt;/a&gt; -一篇关于foreach原理的文章&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://nikic.github.com/2011/12/12/How-big-are-PHP-arrays-really-Hint-BIG.html&#34;&gt;How Big Are PHP Arrays (And Values) Really?&lt;/a&gt; - 一篇关于数组原理的文章&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://gist.github.com/nikic/5015323&#34;&gt;Why Objects (Usually) Use Less Memory Than Arrays&lt;/a&gt; -一篇关于对象和数组原理的文章&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://gist.github.com/nikic/6699370&#34;&gt;PHP Evaluation Order&lt;/a&gt; -一篇关于PHP评估顺序的文章&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://erik.xyz/2015/01/22/php-fu-dian-shu-de-yi-ge-chang-jian-wen-ti-de-jie-da/</guid>
            <title>PHP浮点数的一个常见问题的解答</title>
            <link>https://erik.xyz/2015/01/22/php-fu-dian-shu-de-yi-ge-chang-jian-wen-ti-de-jie-da/</link>
            <category>php</category>
            <category>php应用</category>
            <category>浮点</category>
            <pubDate>Thu, 22 Jan 2015 20:48:00 +0800</pubDate>
            <description><![CDATA[ &lt;ul&gt;
&lt;li&gt;作者: &lt;a href=&#34;http://www.laruence.com&#34;&gt;Laruence&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;关于PHP的浮点数, 我之前写过一篇文章: &lt;a href=&#34;http://www.laruence.com/2011/12/19/2399.html&#34;&gt;关于PHP浮点数你应该知道的(All ‘bogus’ about the float in PHP)&lt;/a&gt; 不过, 我当时遗漏了一点, 也就是对于如下的这个常见问题的回答:&lt;br&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;?php&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    $f = 0.58;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    var_dump(intval($f * 100)); //为啥输出57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;&lt;br&gt;为啥输出是57啊? PHP的bug么? 我相信有很多的同学有过这样的疑问, 因为光问我类似问题的人就很多, 更不用说bugs.php.net上经常有人问… 要搞明白这个原因, 首先我们要知道浮点数的表示(&lt;a href=&#34;http://en.wikipedia.org/wiki/IEEE_754-2008&#34;&gt;IEEE 754&lt;/a&gt;): 浮点数, 以64位的长度(双精度)为例, 会采用1位符号位(E), 11指数位(Q), 52位尾数(M)表示(一共64位). 符号位：最高位表示数据的正负，0表示正数，1表示负数。 指数位：表示数据以2为底的幂，指数采用偏移码表示 尾数：表示数据小数点后的有效数字. 这里的关键点就在于, 小数在二进制的表示, 关于小数如何用二进制表示, 大家可以百度一下, 我这里就不再赘述, 我们关键的要了解, 0.58 对于二进制表示来说, 是无限长的值(下面的数字省掉了隐含的1)..&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;0.58的二进制表示基本上(52位)是: 0010100011110101110000101000111101011100001010001111&lt;/li&gt;
&lt;li&gt;0.57的二进制表示基本上(52位)是: 0010001111010111000010100011110101110000101000111101&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;而两者的二进制, 如果只是通过这52位计算的话,分别是:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;0.58 -&amp;gt; 0.57999999999999996&lt;/li&gt;
&lt;li&gt;0.57 -&amp;gt; 0.56999999999999995&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;至于0.58 &lt;em&gt; 100的具体浮点数乘法, 我们不考虑那么细, 有兴趣的可以看(&lt;a href=&#34;http://en.wikipedia.org/wiki/Floating_point&#34;&gt;Floating point&lt;/a&gt;), 我们就模糊的以心算来看… 0.58 &lt;/em&gt; 100 = 57.999999999 那你intval一下, 自然就是57了…. 可见, 这个问题的关键点就是: “你看似有穷的小数, 在计算机的二进制表示里却是无穷的” so, 不要再以为这是PHP的bug了, 这就是这样的….. 本文地址: &lt;a href=&#34;http://www.laruence.com/2013/03/26/2884.html&#34; title=&#34;Permanet Link to PHP浮点数的一个常见问题的解答&#34;&gt;http://www.laruence.com/2013/03/26/2884.html&lt;/a&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://erik.xyz/2015/01/12/18-ge-css-jing-jian-ya-suo-gong-ju-he-ji-qiao/</guid>
            <title>18个CSS精简压缩工具和技巧</title>
            <link>https://erik.xyz/2015/01/12/18-ge-css-jing-jian-ya-suo-gong-ju-he-ji-qiao/</link>
            <category>css</category>
            <category>php</category>
            <category>web</category>
            <category>代码</category>
            <category>压缩</category>
            <pubDate>Mon, 12 Jan 2015 20:40:00 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;作者: &lt;a href=&#34;http://paranimage.com/author/admin/&#34; title=&#34;由帕兰发布&#34;&gt;帕兰&lt;/a&gt; 我们已看过&lt;a href=&#34;http://paranimage.com/8-online-css-optimizer/&#34;&gt;8个在线CSS优化工具&lt;/a&gt;和&lt;a href=&#34;http://paranimage.com/css-code-streamlined-tools-and-tricks/&#34;&gt;CSS代码精简技巧&lt;/a&gt;，本文则为你带来&lt;strong&gt;18个CSS精简压缩工具和技巧&lt;/strong&gt;。&lt;/p&gt;
&lt;h3 id=&#34;压缩还是不压缩&#34;&gt;&lt;a href=&#34;#压缩还是不压缩&#34; class=&#34;headerlink&#34; title=&#34;压缩还是不压缩&#34;&gt;&lt;/a&gt;压缩还是不压缩&lt;/h3&gt;&lt;p&gt;在我们讨论如何压缩CSS之前，需要注意一下在压缩和代码的易读性上常常要有个平衡。很多编码者以其CSS组织清晰为傲，而且并不希望自己的代码被 通过压缩器去掉注释和断行。作为一个设计师，你应该分析你所编写的代码的目标。如果你要创建一个小的只需要几行CSS的网站，可能就没有必要做额外的压 缩。同样，如果你在编写需要和一个开放团队分享的代码，插入额外的注释和断行可以节省你的同事的大量时间并获得他们真心的感谢。然而，如果你在设计一个需 要大量CSS的大型网站，你肯定要注意你的文件大小并进你所能保持其最小。 可能在寻找压缩和可能性之间的完美结合上面需要花一些时间，但是它们都值得挖掘而且实现它们的平衡可以让你的工作变得容易很多。同时，很明显并不是说压缩一定会导致可读性的降低。很多可用于压缩代码的技术都能生成更好更有组织的代码。 考虑到这一点儿，让我们开始了解一些技术已保持CSS文件最小化吧。&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;空白样式定义&#34;&gt;&lt;a href=&#34;#空白样式定义&#34; class=&#34;headerlink&#34; title=&#34;空白样式定义&#34;&gt;&lt;/a&gt;空白样式定义&lt;/h3&gt;&lt;p&gt;让我们从明显的开始。如果你有一个空白样式，丢掉它。不要借口稍后或许会用到，你也知道它们是杂乱的。除非你有一个合理的理由，否则不要添加它们。&lt;/p&gt;
&lt;h3 id=&#34;缩写&#34;&gt;&lt;a href=&#34;#缩写&#34; class=&#34;headerlink&#34; title=&#34;缩写&#34;&gt;&lt;/a&gt;缩写&lt;/h3&gt;&lt;p&gt;CSS缩写是一种将多行CSS合并到单行的方法。 养成使用你知道的所有缩写技巧的习惯可以明显的减少你最终写出的代码的行数。这里是个例子： 长写版本:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#container&amp;#123;
    padding-top:5px
    padding-right:10px
    padding-bottom:30px
    padding-left:18px
&amp;#125;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;缩写版本:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#container&amp;#123;
    padding:5px 10px 30px 18px;
&amp;#125;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;了解更多CSS缩写技巧，可以访问下面的文章： &lt;a href=&#34;http://www.dustindiaz.com/css-shorthand/&#34;&gt;&lt;img src=&#34;http://paranimage.com/img/css-compression/shorthand.jpg&#34; alt=&#34;screenshot&#34;&gt;&lt;/a&gt; 推荐阅读阿捷的文章：《&lt;a href=&#34;http://www.w3cn.org/article/tips/2005/103.html&#34;&gt;常用CSS缩写语法总结&lt;/a&gt;》&lt;/p&gt;
&lt;h3 id=&#34;CSS-Sprites&#34;&gt;&lt;a href=&#34;#CSS-Sprites&#34; class=&#34;headerlink&#34; title=&#34;CSS Sprites&#34;&gt;&lt;/a&gt;CSS Sprites&lt;/h3&gt;&lt;p&gt;CSS sprites背后的最初想法是减少HTTP请求的数量以加快页面的加载时间。Sprite实现这个目标的途径就是拼合多张图片到一个单独的图片文件中， 通常是一个网格格式的图片。每个单独的图片通过切换大的sprite图片的background-position来显示。对于CSS代码来说，使用 sprite技术可以大大的提高代码的重用度和可维护性，这会明显的减少CSS的代码量。&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://erik.xyz/2015/01/03/li-yong-flash-wan-mei-jie-jue-javascript-he-ajax-kua-yu-http-post-get-biao-dan-qing-qiu/</guid>
            <title>利用 Flash 完美解决 JavaScript 和 AJAX 跨域 HTTP POST/GET 表单请求</title>
            <link>https://erik.xyz/2015/01/03/li-yong-flash-wan-mei-jie-jue-javascript-he-ajax-kua-yu-http-post-get-biao-dan-qing-qiu/</link>
            <category>js</category>
            <category>php</category>
            <category>flash</category>
            <category>表单</category>
            <pubDate>Sat, 03 Jan 2015 21:19:00 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;[ 作者：张宴] 最近的一个项目中，需要通过 JavaScript 提交表单数据到另一个域名下的PHP接口（因为数据较大，需要HTTP POST方式提交），并获取PHP接口的返回值，在页面无刷新、无跳转的情况下，更新div标签内的内容。 浏览器出于安全考虑，是不允许JavaScript代码进行跨域操作。JavaScript 和 AJAX 跨域访问分为两大类，一是本域和子域的交互，二是本域和其他域的交互。 一、本域和子域的交互：&lt;a href=&#34;http://www.zyan.cc&#34;&gt;www.zyan.cc&lt;/a&gt; 和 blog.zyan.cc 二、本域和其他域的交互：blog.zyan.cc 和 api.bz 本域和子域的交互，可以通过iframe设置两个域名document.domain = “zyan.cc”，实现统一zyan.cc域下的跨域访问。 本域和其他域的交互，可以通过iframe、代理、JS创建动态脚本等几种方法来实现，&lt;a href=&#34;http://www.phpchina.com/html/48/n-33848.html&#34;&gt;这里有篇文章对几种方法作了简要的介绍&lt;/a&gt;。 iframe、JS创建动态脚本这两种方法，需要开发者能控制两个域，两端都要编写相应的代码，非常麻烦。在本域服务器上用PHP写个代理中转程序，让 本域PHP程序去读取远程其他域的数据再返回给自己，是常用的方法。但是，在本域“前端是CDN或Squid缓存服务器，后端才是PHP应用程序服务器” 的系统架构下，穿透CDN或Squid去访问不能被缓存的PHP代理中转程序，效率是很低的。&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;国外有人尝试用 Flash 做 JavaScript 和 AJAX 跨域访问中转，无疑是一个好方法。JavaScript 将数据提交给本域下的 Flash，通过 Flash 中转去访问其他域的接口，条件只需要其他域的根目录下有一个crossdomain.xml文件，文件中设置允许所有域名或允许本域访问即可。很多网站的 API域名都提供了crossdomain.xml文件。 例如： 1、新浪博客的crossdomain.xml文件（&lt;a href=&#34;http://blog.sina.com.cn/crossdomain.xml&#34;&gt;http://blog.sina.com.cn/crossdomain.xml&lt;/a&gt;）设置了允许所有域名访问； 2、饭否API的crossdomain.xml文件（&lt;a href=&#34;http://api.fanfou.com/crossdomain.xml&#34;&gt;http://api.fanfou.com/crossdomain.xml&lt;/a&gt;）设置了允许所有域名访问； 3、校内网API的crossdomain.xml文件（&lt;a href=&#34;http://api.xiaonei.com/crossdomain.xml&#34;&gt;http://api.xiaonei.com/crossdomain.xml&lt;/a&gt;）设置了允许所有域名访问； 4、优酷网的crossdomain.xml文件（&lt;a href=&#34;http://www.youku.com/crossdomain.xml&#34;&gt;http://www.youku.com/crossdomain.xml&lt;/a&gt;）设置了允许所有域名访问； 5、土豆网的crossdomain.xml文件（&lt;a href=&#34;http://www.tudou.com/crossdomain.xml&#34;&gt;http://www.tudou.com/crossdomain.xml&lt;/a&gt;）设置了允许所有域名访问； 6、逍遥视频的crossdomain.xml文件（&lt;a href=&#34;http://v.xoyo.com/crossdomain.xml&#34;&gt;http://v.xoyo.com/crossdomain.xml&lt;/a&gt;）设置了只允许*.xoyo.com域名访问； 7、网易的crossdomain.xml文件（&lt;a href=&#34;http://www.163.com/crossdomain.xml&#34;&gt;http://www.163.com/crossdomain.xml&lt;/a&gt;）设置了只允许tech.163.com、sports.163.com等几个域名访问。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;本人在“&lt;a href=&#34;http://blog.monstuff.com/archives/000280.html&#34;&gt;Cross-domain AJAX using Flash&lt;/a&gt;”的基础上，增加了对表单进行智能处理的功能，封装了一个JavaScript包：AJAXCDR。通过 AJAXCDR，即可轻松地解决 JavaScript 和 AJAX 跨域 HTTP POST/GET 表单请求，支持IE、Firefox、谷歌Chrome等多种浏览器。 AJAXCDR 拥有两个文件：ajaxcdr.js 和 ajaxcdr.swf，AJAXCDR 拥有一个 JavaScript 函数 AjaxCrossDomainRequest() 和一个全局变量 AjaxCrossDomainResponse。 &lt;strong&gt;一、AJAXCDR 下载：&lt;/strong&gt; 　　&lt;a href=&#34;http://blog.zyan.cc/demo/ajaxcdr/ajaxcdr-1.0.zip&#34;&gt;http://blog.zyan.cc/demo/ajaxcdr/ajaxcdr-1.0.zip&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://zyan.cc/template/RuiPai/images/download.gif&#34; alt=&#34;&#34;&gt;下载文件&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://blog.zyan.cc/demo/ajaxcdr/ajaxcdr-1.0.zip&#34;&gt;点击这里下载文件&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;注意：请编辑ajaxcdr.js，查找“/demo/ajaxcdr/ajaxcdr.swf”，将这段Flash文件路径换成您的路径。 &lt;strong&gt;二、AJAXCDR 函数说明：&lt;/strong&gt; &lt;strong&gt;1、JavaScript函数：&lt;/strong&gt; AjaxCrossDomainRequest(URL, Method, FormName, CallBack); &lt;strong&gt;参数说明：&lt;/strong&gt; URL：需要访问的URL地址，相当于表单的action=的值。 Method：方法，本函数支持POST和GET方法，相当于表单的method=的值。 FormName：表单名称，相当于表单的name=的值。 CallBack：回调函数，请求完成后，回调用户的一个函数，用户可以在该函数内对返回值进行处理。 &lt;strong&gt;2、JavaScript全局变量：&lt;/strong&gt; AjaxCrossDomainResponse 当用户调用AjaxCrossDomainRequest()函数完成 HTTP POST/GET 请求后，该函数会把服务器端返回的数据写入到AjaxCrossDomainResponse变量中，您可以通过 AjaxCrossDomainResponse变量获取返回值。 &lt;strong&gt;三、AJAXCDR 应用实例：&lt;/strong&gt; &lt;strong&gt;1、实例一（简单演示）：&lt;/strong&gt; 演示地址： &lt;a href=&#34;http://blog.zyan.cc/demo/ajaxcdr/demo1.html&#34;&gt;http://blog.zyan.cc/demo/ajaxcdr/demo1.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://zyan.cc/#&#34;&gt;view plain&lt;/a&gt;&lt;a href=&#34;http://zyan.cc/#&#34;&gt;print&lt;/a&gt;&lt;a href=&#34;http://zyan.cc/#&#34;&gt;?&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;form name=&amp;quot;cross_domain_demo&amp;quot;&amp;gt;
&amp;lt;input name=&amp;quot;title&amp;quot; type=&amp;quot;text&amp;quot; value=&amp;quot;测试数据&amp;quot;&amp;gt;
&amp;lt;/form&amp;gt;

&amp;lt;a href=&amp;quot;javascript:AjaxCrossDomainRequest(&amp;#39;http://api.bz/ajaxcdr/echo.php&amp;#39;, &amp;#39;POST&amp;#39;, &amp;#39;cross_domain_demo&amp;#39;, &amp;#39;mycallback()&amp;#39;);&amp;quot;&amp;gt;提交&amp;lt;/a&amp;gt;

&amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;gt;
function mycallback()&amp;#123;
    alert(AjaxCrossDomainResponse);
&amp;#125;
&amp;lt;/script&amp;gt;

&amp;lt;script type=&amp;quot;text/javascript&amp;quot; src=&amp;quot;/demo/ajaxcdr/ajaxcdr.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;echo.php 源代码为：&lt;a href=&#34;http://api.bz/ajaxcdr/echo.txt&#34;&gt;http://api.bz/ajaxcdr/echo.txt&lt;/a&gt; crossdomain.xml 文件为：&lt;a href=&#34;http://api.bz/crossdomain.xml&#34;&gt;http://api.bz/crossdomain.xml&lt;/a&gt; &lt;strong&gt;2、实例二（复杂表单演示）：&lt;/strong&gt; 演示地址： &lt;a href=&#34;http://blog.zyan.cc/demo/ajaxcdr/demo2.html&#34;&gt;http://blog.zyan.cc/demo/ajaxcdr/demo2.html&lt;/a&gt;&lt;/p&gt;
&lt;html&gt; &lt;head&gt; &lt;title&gt;Ajax 跨域 HTTP POST/GET 访问请求演示：Ajax Cross Domain HTTP POST/GET Request Demo&lt;/title&gt; &lt;meta http-equiv=&#34;Content-Type&#34; content=&#34;text/html; charset=utf-8&#34;&gt; &lt;style type=&#34;text/css&#34;&gt; &lt;!-- body,td,th { font-size: 14px; } --&gt; &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;form name=&#34;cross\_domain\_demo&#34;&gt; &lt;table width=&#34;600&#34; border=&#34;1&#34;&gt; &lt;tr&gt; &lt;td colspan=&#34;2&#34; align=&#34;center&#34; valign=&#34;top&#34;&gt;&lt;strong&gt;Ajax 跨域 HTTP POST/GET 访问请求演示（鼠标右键查看HTML源代码）&lt;/strong&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td colspan=&#34;2&#34; align=&#34;center&#34; valign=&#34;top&#34;&gt;函数说明与下载地址：&lt;a href=&#34;http://blog.zyan.cc/ajaxcdr/&#34; target=&#34;_blank&#34;&gt;http://blog.zyan.cc/ajaxcdr/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td align=&#34;right&#34; valign=&#34;top&#34;&gt;username&lt;/td&gt; &lt;td&gt;&lt;input name=&#34;title&#34; type=&#34;text&#34; value=&#34;用户名&#34;&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td align=&#34;right&#34; valign=&#34;top&#34;&gt;password&lt;/td&gt; &lt;td&gt;&lt;input name=&#34;password&#34; type=&#34;password&#34; value=&#34;123456&#34;&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td align=&#34;right&#34; valign=&#34;top&#34;&gt;content&lt;/td&gt; &lt;td&gt;&lt;textarea name=&#34;content&#34; cols=&#34;58&#34; rows=&#34;5&#34;&gt;文本区域值&lt;/textarea&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td align=&#34;right&#34; valign=&#34;top&#34;&gt;city&lt;/td&gt; &lt;td&gt; &lt;select name=&#34;city&#34;&gt; &lt;option value=&#34;北京&#34;&gt;北京&lt;/option&gt; &lt;option value=&#34;上海&#34;&gt;上海&lt;/option&gt; &lt;option value=&#34;深圳&#34;&gt;深圳&lt;/option&gt; &lt;/select&gt;  &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td align=&#34;right&#34; valign=&#34;top&#34;&gt;interest&lt;/td&gt; &lt;td&gt; &lt;select name=&#34;interest\[\]&#34; multiple&gt; &lt;option value=&#34;玩游戏&#34;&gt;玩游戏&lt;/option&gt; &lt;option value=&#34;踢足球&#34;&gt;踢足球&lt;/option&gt; &lt;option value=&#34;看书&#34;&gt;看书&lt;/option&gt; &lt;option value=&#34;旅游&#34;&gt;旅游&lt;/option&gt; &lt;/select&gt;  &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td align=&#34;right&#34; valign=&#34;top&#34;&gt;gender&lt;/td&gt; &lt;td&gt; &lt;input type=&#34;radio&#34; name=&#34;gender&#34; value=&#34;男&#34;&gt;男 &lt;input type=&#34;radio&#34; name=&#34;gender&#34; value=&#34;女&#34; &gt;女 &lt;input type=&#34;radio&#34; name=&#34;gender&#34; value=&#34;未知&#34; checked&gt;未知  &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td align=&#34;right&#34; valign=&#34;top&#34;&gt;grade&lt;/td&gt; &lt;td&gt; &lt;input type=&#34;checkbox&#34; name=&#34;grade\[\]&#34; value=&#34;等级一&#34;&gt;等级一 &lt;input type=&#34;checkbox&#34; name=&#34;grade\[\]&#34; value=&#34;等级二&#34;&gt;等级二 &lt;input type=&#34;checkbox&#34; name=&#34;grade\[\]&#34; value=&#34;等级三&#34;&gt;等级三 &lt;input type=&#34;checkbox&#34; name=&#34;grade\[\]&#34; value=&#34;等级四&#34;&gt;等级四  &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td align=&#34;right&#34; valign=&#34;top&#34;&gt;publish&lt;/td&gt; &lt;td&gt;&lt;input type=&#34;checkbox&#34; name=&#34;publish&#34; value=&#34;发布&#34;&gt;发布&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td align=&#34;right&#34; valign=&#34;top&#34;&gt;&amp;nbsp;&lt;/td&gt; &lt;td&gt; &lt;a href=&#34;javascript:AjaxCrossDomainRequest(&#39;http://api.bz/ajaxcdr/echo.php&#39;, &#39;POST&#39;, &#39;cross\_domain\_demo&#39;, &#39;mycallback(\\&#39;参数①\\&#39;, \\&#39;参数②\\&#39;, myparam)&#39;);&#34;&gt;&lt;img src=&#34;post\_button.gif&#34; width=&#34;100&#34; height=&#34;24&#34; align=&#34;absmiddle&#34; border=&#34;0&#34;&gt;&lt;/a&gt; &amp;nbsp;&amp;nbsp; &lt;button onClick=&#34;AjaxCrossDomainRequest(&#39;http://api.bz/ajaxcdr/echo.php&#39;, &#39;GET&#39;, &#39;cross\_domain\_demo&#39;, &#39;mycallback(\\&#39;参数①\\&#39;, \\&#39;参数②\\&#39;, myparam)&#39;); return false;&#34;&gt;GET方式提交&lt;/button&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; &lt;/form&gt; &lt;table width=&#34;600&#34; border=&#34;1&#34;&gt; &lt;tr&gt; &lt;td&gt;JavaScript POST/GET 跨域提交信息到：http://api.bz/ajaxcdr/echo.php （&lt;a href=&#34;http://api.bz/ajaxcdr/echo.txt&#34; target=&#34;\_blank&#34;&gt;源代码&lt;/a&gt;） &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;strong&gt;api.bz服务器端返回信息：&lt;/strong&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;div id=&#34;return\_info&#34;&gt;&lt;/div&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/table&gt;&lt;script type=&#34;text/javascript&#34;&gt; var myparam = &#34;参数③&#34;; function mycallback(param1, param2, param3){ //提示：AjaxCrossDomainResponse是一个全局变量，它的值为远程服务器的返回值。 document.getElementById(&#39;return\_info&#39;).innerHTML = &#34;&lt;pre&gt;&#34; + param1 + param2 + param3 + &#34;&lt;BR&gt;&#34; + AjaxCrossDomainResponse + &#34;&lt;/pre&gt;&#34;; } &lt;/script&gt; &lt;script type=&#34;text/javascript&#34; src=&#34;/demo/ajaxcdr/ajaxcdr.js&#34;&gt;&lt;/script&gt; &lt;/body&gt; &lt;/html&gt;

&lt;p&gt;echo.php 源代码为：&lt;a href=&#34;http://api.bz/ajaxcdr/echo.txt&#34;&gt;http://api.bz/ajaxcdr/echo.txt&lt;/a&gt; crossdomain.xml 文件为：&lt;a href=&#34;http://api.bz/crossdomain.xml&#34;&gt;http://api.bz/crossdomain.xml&lt;/a&gt; 原文链接：&lt;a href=&#34;http://blog.zyan.cc/ajaxcdr/&#34;&gt;http://blog.zyan.cc/ajaxcdr/&lt;/a&gt;&lt;/p&gt;
 ]]></description>
        </item>
    </channel>
</rss>