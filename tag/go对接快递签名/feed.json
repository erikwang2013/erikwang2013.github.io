{
    "version": "https://jsonfeed.org/version/1",
    "title": "艾瑞可erik • All posts by \"go对接快递签名\" tag • All posts by \"undefined\" categories",
    "description": "一只PHP开发的程序猿，偶尔做做运维、Goland、Python、Java、摄影、画画、写作、顺便睡觉，反正整站都搞过。",
    "home_page_url": "https://erik.xyz",
    "items": [
        {
            "id": "https://erik.xyz/2022/07/30/go-on-express/",
            "url": "https://erik.xyz/2022/07/30/go-on-express/",
            "title": "go对接快递",
            "date_published": "2022-07-30T02:39:00.000Z",
            "content_html": "<ul>\n<li>韵达签名</li>\n</ul>\n<pre><code>  func YunDaSign(structData interface&#123;&#125;) ([]byte, string, string) &#123;\n      jsonData, _ := json.Marshal(structData)\n      appKey := &quot;你的key&quot;\n      appSecret := &quot;你的秘钥&quot;\n      newStr := string(jsonData) + &quot;_&quot; + appSecret\n      md := md5.New()\n      md.Write([]byte(newStr))\n      md5Str := hex.EncodeToString(md.Sum(nil))\n      return jsonData, appKey, md5Str\n  &#125;\n</code></pre><span id=\"more\"></span>\n<ul>\n<li>京东签名</li>\n</ul>\n<pre><code>  func JdSigin(body string, path string) (string, string, string, string, string) &#123;\n      appKey := &quot;你的key&quot;\n      appSecret := &quot;你的秘钥&quot;\n      accessToken := &quot;你的token&quot;\n      timestamp := Util.GetDate()\n      algorithm := &quot;md5-salt&quot;\n      content := strings.Join([]string&#123;\n          appSecret,\n          &quot;access_token&quot;, accessToken,\n          &quot;app_key&quot;, appKey,\n          &quot;method&quot;, path,\n          &quot;param_json&quot;, body,\n          &quot;timestamp&quot;, timestamp,\n          &quot;v&quot;, &quot;2.0&quot;,\n          appSecret,\n      &#125;, &quot;&quot;)\n\n      sign, err := Sign(algorithm, []byte(content), appSecret)\n      if err != nil &#123;\n          panic(err)\n      &#125;\n      return sign, appKey, accessToken, timestamp, algorithm\n  &#125;\n\n  func Sign(algorithm string, data []byte, secret string) (string, error) &#123;\n      if algorithm == &quot;md5-salt&quot; &#123;\n          h := md5.New()\n          if _, err := h.Write(data); err != nil &#123;\n              return &quot;&quot;, err\n          &#125;\n          return fmt.Sprintf(&quot;%x&quot;, h.Sum(nil)), nil\n      &#125; else if algorithm == &quot;HMacMD5&quot; &#123;\n          h := hmac.New(md5.New, []byte(secret))\n          if _, err := h.Write(data); err != nil &#123;\n              return &quot;&quot;, err\n          &#125;\n          return base64.StdEncoding.EncodeToString(h.Sum(nil)), nil\n      &#125; else if algorithm == &quot;HMacSHA1&quot; &#123;\n          h := hmac.New(sha1.New, []byte(secret))\n          if _, err := h.Write(data); err != nil &#123;\n              return &quot;&quot;, err\n          &#125;\n          return base64.StdEncoding.EncodeToString(h.Sum(nil)), nil\n      &#125; else if algorithm == &quot;HMacSHA256&quot; &#123;\n          h := hmac.New(sha256.New, []byte(secret))\n          if _, err := h.Write(data); err != nil &#123;\n              return &quot;&quot;, err\n          &#125;\n          return base64.StdEncoding.EncodeToString(h.Sum(nil)), nil\n      &#125; else if algorithm == &quot;HMacSHA512&quot; &#123;\n          h := hmac.New(sha512.New, []byte(secret))\n          if _, err := h.Write(data); err != nil &#123;\n              return &quot;&quot;, err\n          &#125;\n          return base64.StdEncoding.EncodeToString(h.Sum(nil)), nil\n      &#125;\n      return &quot;&quot;, fmt.Errorf(&quot;algorithm %s not supported yet&quot;, algorithm)\n  &#125;\n</code></pre>",
            "tags": [
                "go对接快递签名"
            ]
        }
    ]
}