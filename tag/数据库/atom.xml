<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://erik.xyz</id>
    <title>艾瑞可erik • Posts by &#34;数据库&#34; tag • Posts by &#34;undefined&#34; categories</title>
    <link href="https://erik.xyz" />
    <updated>2019-08-21T15:40:00.000Z</updated>
    <category term="php扩展" />
    <category term="php技巧" />
    <category term="php类库" />
    <category term="php资源" />
    <category term="日志" />
    <category term="工具" />
    <category term="jquery" />
    <category term="jquery插件" />
    <category term="js" />
    <category term="css" />
    <category term="php" />
    <category term="web" />
    <category term="代码" />
    <category term="压缩" />
    <category term="说说" />
    <category term="趣闻" />
    <category term="php服务器" />
    <category term="随笔" />
    <category term="php实例" />
    <category term="转载" />
    <category term="php库" />
    <category term="互联" />
    <category term="项目实战" />
    <category term="javascript" />
    <category term="漏洞" />
    <category term="nginx" />
    <category term="php应用" />
    <category term="浮点" />
    <category term="负载均衡" />
    <category term="kali" />
    <category term="kali安装" />
    <category term="http" />
    <category term="http服务器" />
    <category term="农业系统" />
    <category term="系统设计" />
    <category term="克莱姆法则" />
    <category term="行列式" />
    <category term="n阶行列式" />
    <category term="支付系统" />
    <category term="支付" />
    <category term="centos" />
    <category term="linux" />
    <category term="apache优化" />
    <category term="apache隐藏index" />
    <category term="nginx优化" />
    <category term="nginx隐藏index" />
    <category term="日常" />
    <category term="seo" />
    <category term="优化" />
    <category term="摘要" />
    <category term="文章" />
    <category term="游记" />
    <category term="ca证书" />
    <category term="证书生成" />
    <category term="二战" />
    <category term="二战熊" />
    <category term="西伯利亚熊" />
    <category term="centos软件" />
    <category term="yum仓库" />
    <category term="软件" />
    <category term="centos安装chromium报错" />
    <category term="chromium安装报错" />
    <category term="svn" />
    <category term="代码提交" />
    <category term="deb" />
    <category term="deb/rpm互转" />
    <category term="deb转rpm" />
    <category term="rpm互转" />
    <category term="centos7安装steam" />
    <category term="centos安装steam" />
    <category term="centos安装吃鸡steam" />
    <category term="linux安装steam" />
    <category term="steam安装" />
    <category term="centos软件安装" />
    <category term="centos6.5" />
    <category term="linux系统" />
    <category term="centos7安装Redis Desktop Manager" />
    <category term="centos7安装redis桌面" />
    <category term="centos安装redis桌面" />
    <category term="linux安装centos7安装Redis Desktop Manager" />
    <category term="Redis Desktop Manager" />
    <category term="redis桌面" />
    <category term="centos7" />
    <category term="centos7-wine" />
    <category term="wine" />
    <category term="wine安装" />
    <category term="root密码" />
    <category term="root密码重置" />
    <category term="忘记root密码" />
    <category term="memcache" />
    <category term="memcached" />
    <category term="生活手记" />
    <category term="艾瑞可erik" />
    <category term="程序员" />
    <category term="开源云" />
    <category term="容器" />
    <category term="cncf" />
    <category term="监控" />
    <category term="composer" />
    <category term="composer部署" />
    <category term="内网部署composer" />
    <category term="cphalcon" />
    <category term="cphalcon报错" />
    <category term="css中的em" />
    <category term="响应式字体" />
    <category term="响应式布局样式" />
    <category term="proxy代理搭建" />
    <category term="代理服务器搭建" />
    <category term="proxy服务器" />
    <category term="查找" />
    <category term="排序" />
    <category term="快速排序" />
    <category term="冒泡排序" />
    <category term="二分查找" />
    <category term="datahub" />
    <category term="datahub安装" />
    <category term="deepin" />
    <category term="emergency" />
    <category term="emergency mode" />
    <category term="deepin黑屏" />
    <category term="开发语言" />
    <category term="开发" />
    <category term="清理系统" />
    <category term="清理c盘" />
    <category term="dns" />
    <category term="域名监测" />
    <category term="网站监测" />
    <category term="docker" />
    <category term="php安装" />
    <category term="杂谈" />
    <category term="ecshop" />
    <category term="框架" />
    <category term="beego数据分页" />
    <category term="分页" />
    <category term="elasticsearch" />
    <category term="elasticsearch搭建" />
    <category term="elasticsearch集群" />
    <category term="系统" />
    <category term="emm" />
    <category term="mdm" />
    <category term="phone" />
    <category term="手机" />
    <category term="新闻" />
    <category term="免费" />
    <category term="jenkis" />
    <category term="jenkis教程" />
    <category term="算法" />
    <category term="随笔吐槽" />
    <category term="ping" />
    <category term="ping服务器" />
    <category term="各大网站ping" />
    <category term="搜引擎ping服务器" />
    <category term="go获取ip" />
    <category term="im" />
    <category term="go中pdf生成" />
    <category term="go中限流" />
    <category term="go对接快递签名" />
    <category term="go时间获取" />
    <category term="go类型转换" />
    <category term="微服务" />
    <category term="go-zero" />
    <category term="rpc" />
    <category term="go加密" />
    <category term="go解密" />
    <category term="归" />
    <category term="吐槽" />
    <category term="php大全" />
    <category term="php资料" />
    <category term="hadoop" />
    <category term="hadoop2.8.0" />
    <category term="hadoop安装教程" />
    <category term="hadoop安装详细教程" />
    <category term="hadoop教程" />
    <category term="hadoop部署" />
    <category term="hadoop3" />
    <category term="hadoop配置" />
    <category term="log4j2" />
    <category term="数据库" />
    <category term="hbase安装教程" />
    <category term="hbase" />
    <category term="http1.1" />
    <category term="http2.0" />
    <category term="会话" />
    <category term="会话原理" />
    <category term="hyperf" />
    <category term="杂录" />
    <category term="新冠肺炎" />
    <category term="springboot" />
    <category term="springboot内网部署" />
    <category term="linux恢复" />
    <category term="linux误删" />
    <category term="linux命令" />
    <category term="linux命令汇总" />
    <category term="jenkins" />
    <category term="jetbtrains" />
    <category term="phpstorm" />
    <category term="搜索引擎" />
    <category term="图片" />
    <category term="素材" />
    <category term="jq" />
    <category term="jq侧边导航" />
    <category term="侧边导航" />
    <category term="js判断浏览器" />
    <category term="js判断浏览器版本" />
    <category term="判断浏览器" />
    <category term="浏览器版本判断" />
    <category term="获取浏览器信息" />
    <category term="kali右键汉化" />
    <category term="kali桌面右键汉化" />
    <category term="kali右键创建文件" />
    <category term="区块链" />
    <category term="lanmp" />
    <category term="php环境独立配置" />
    <category term="服务器" />
    <category term="劳动纠纷" />
    <category term="追缴工资" />
    <category term="申请仲裁" />
    <category term="flash" />
    <category term="表单" />
    <category term="linux报错" />
    <category term="linux中update-command-not-found" />
    <category term="linux运行命令报错" />
    <category term="web前端" />
    <category term="web优化" />
    <category term="撮合算法" />
    <category term="撮合" />
    <category term="php撮合算法" />
    <category term="maven搭建库" />
    <category term="maven" />
    <category term="maven内网库" />
    <category term="高级缓存配置" />
    <category term="mongodb" />
    <category term="mongodb权限" />
    <category term="可穿戴设备" />
    <category term="mysql" />
    <category term="分库分表" />
    <category term="mysql应对千万级" />
    <category term="mysql瓶颈" />
    <category term="mysql瓶颈解决办法" />
    <category term="redis" />
    <category term="数据一致性" />
    <category term="mysql消息" />
    <category term="mysql队列" />
    <category term="mysql高并发" />
    <category term="mysql存储" />
    <category term="mysql引擎" />
    <category term="mysql数据表设计选择" />
    <category term="mysql监控" />
    <category term="mysql性能" />
    <category term="内网支付" />
    <category term="内网穿透" />
    <category term="支付接口本地化开发" />
    <category term="本地挂网" />
    <category term="穿透" />
    <category term="go" />
    <category term="new和make的区别" />
    <category term="红包算法" />
    <category term="深圳劳动法服务部门" />
    <category term="非关系型数据库" />
    <category term="onethink" />
    <category term="oop" />
    <category term="php管理系统" />
    <category term="开放接口开发" />
    <category term="开源工具" />
    <category term="桌面共享工具" />
    <category term="openresty" />
    <category term="openvas" />
    <category term="openvas安装" />
    <category term="php架构" />
    <category term="php服务" />
    <category term="php服务设计" />
    <category term="php项目" />
    <category term="php架构设计" />
    <category term="php变量" />
    <category term="php超级全局变量" />
    <category term="php超级变量" />
    <category term="php基本类型" />
    <category term="php数据类型" />
    <category term="php设计模式" />
    <category term="php对接微信支付" />
    <category term="微信支付" />
    <category term="微信支付回调" />
    <category term="游戏" />
    <category term="php函数" />
    <category term="php随机数" />
    <category term="php获取闰年" />
    <category term="闰年.php时间" />
    <category term="php环境" />
    <category term="php集成环境" />
    <category term="服务器集成环境" />
    <category term="数组函数" />
    <category term="数组排序函数" />
    <category term="php数学函数" />
    <category term="php面试题" />
    <category term="php面向对象" />
    <category term="面向对象" />
    <category term="php-zookeeper" />
    <category term="zookeeper3.5.5" />
    <category term="php-zookeeper扩展" />
    <category term="php串口开发" />
    <category term="php倒计时" />
    <category term="php时间" />
    <category term="倒计时" />
    <category term="计算时间" />
    <category term="PHP数组" />
    <category term="字符串函数" />
    <category term="排序函数" />
    <category term="php的SPL" />
    <category term="SPL手册" />
    <category term="PHP算法" />
    <category term="php递归" />
    <category term="递归" />
    <category term="phpunit" />
    <category term="phpunit安装" />
    <category term="php过滤" />
    <category term="过滤" />
    <category term="foreach" />
    <category term="foreach报错" />
    <category term="php中foreach报错" />
    <category term="php中if" />
    <category term="php中if判断" />
    <category term="php的if" />
    <category term="php字符串" />
    <category term="php7中sphinx" />
    <category term="php7中sphinx扩展" />
    <category term="sphinx扩展" />
    <category term="plc" />
    <category term="python" />
    <category term="python库" />
    <category term="a标签" />
    <category term="a标签虚线" />
    <category term="虚线框" />
    <category term="R语言" />
    <category term="数据随机化" />
    <category term="redis总结" />
    <category term="redis命令" />
    <category term="redis监控" />
    <category term="redis锁" />
    <category term="redis分布式锁" />
    <category term="任意金额输入" />
    <category term="10元、5元、2元" />
    <category term="队列" />
    <category term="栈" />
    <category term="顺序表" />
    <category term="链表" />
    <category term="数据结构" />
    <category term="线性结构" />
    <category term="浏览器禁止操作视频" />
    <category term="禁止视频" />
    <category term="响应慢" />
    <category term="页面优化" />
    <category term="js编辑" />
    <category term="runjs" />
    <category term="在线编辑" />
    <category term="rust" />
    <category term="rust配置" />
    <category term="seajs" />
    <category term="session" />
    <category term="路由器烧录" />
    <category term="烧录" />
    <category term="极路由2烧录" />
    <category term="砖头烧录" />
    <category term="免费服务器" />
    <category term="空间" />
    <category term="资源" />
    <category term="深圳政府电话" />
    <category term="深圳电话" />
    <category term="特区电话" />
    <category term="居住证" />
    <category term="居住证签注" />
    <category term="深圳新居住证" />
    <category term="国庆骑行" />
    <category term="深圳珠海骑行" />
    <category term="骑行" />
    <category term="世界那么大" />
    <category term="css3" />
    <category term="css在线生成工具" />
    <category term="css工具" />
    <category term="php正则" />
    <category term="正则" />
    <category term="shodan" />
    <category term="黑谷歌" />
    <category term="黒帽搜素" />
    <category term="shopex" />
    <category term="可视化数据" />
    <category term="数据" />
    <category term="数据表" />
    <category term="socket通信" />
    <category term="socket多进程" />
    <category term="socket" />
    <category term="json" />
    <category term="json数组" />
    <category term="json解析" />
    <category term="大数据" />
    <category term="spark" />
    <category term="hive" />
    <category term="数据分析" />
    <category term="sql" />
    <category term="sql优化" />
    <category term="css3兼容360浏览器兼容模式" />
    <category term="css圆角" />
    <category term="结构体转map" />
    <category term="config" />
    <category term="thinkphp" />
    <category term="配置文件" />
    <category term="树" />
    <category term="二叉树" />
    <category term="js插件" />
    <category term="virtualbox" />
    <category term="hyper-v" />
    <category term="鸿蒙开发" />
    <category term="web自适应" />
    <category term="响应式布局" />
    <category term="响应式所有分辨率" />
    <category term="自适应布局" />
    <category term="自适应所有分辨率" />
    <category term="webman" />
    <category term="mysql设置超时，超时" />
    <category term="markdown" />
    <category term="wget" />
    <category term="wget抓取" />
    <category term="网站抓取" />
    <category term="我在" />
    <category term="wordpress" />
    <category term="wordpress标签" />
    <category term="域名合并" />
    <category term="wpscan" />
    <category term="usbrip" />
    <category term="无限极分类" />
    <category term="php无限极" />
    <category term="分类tree" />
    <category term="无限极分类树型" />
    <category term="xhprof" />
    <category term="laravel" />
    <category term="composer插件" />
    <category term="html" />
    <category term="响应式分辨率" />
    <category term="响应式调试" />
    <category term="自适应屏幕" />
    <category term="携程" />
    <category term="携程攻击" />
    <category term="携程网站瘫痪" />
    <category term="物理删除" />
    <category term="3D" />
    <category term="动画" />
    <category term="平台" />
    <category term="虚幻4引擎编辑" />
    <category term="生成唯一id" />
    <category term="生成id" />
    <category term="发邮件" />
    <category term="邮件函数" />
    <category term="储蓄卡免年费" />
    <category term="银行卡" />
    <category term="银行卡免年费" />
    <category term="composer安装" />
    <category term="composer配置" />
    <category term="项目创建composer" />
    <category term="mysql优化" />
    <category term="mysql读写优化" />
    <category term="数据库优化，mysql语句优化" />
    <category term="php加密" />
    <category term="php技术" />
    <category term="夕阳" />
    <category term="mysql函数" />
    <category term="php中mysql函数" />
    <category term="互联网时代" />
    <category term="开源技术" />
    <category term="web框架" />
    <category term="php抓取图片" />
    <category term="php批量抓取页面图片" />
    <category term="邮箱服务器" />
    <category term="正则表达式" />
    <category term="翻墙" />
    <category term="谷歌" />
    <category term="谷歌搜索" />
    <entry>
        <id>https://erik.xyz/2019/08/21/hbase-install/</id>
        <title>Hbase安装教程</title>
        <link rel="alternate" href="https://erik.xyz/2019/08/21/hbase-install/"/>
        <content type="html">&lt;p&gt;hbase分布式数据库，很早就知道了，今天尝试在docker中搭建一下。&lt;br&gt;首先，安装配置hadoop环境。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://jingyan.baidu.com/article/2d5afd69d5969585a2e28eaf.html&#34;&gt;hadoop安装教程&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这教程是我之前在百度经验分享的，版本是2.8，现在看了看了最新版hadoop，教程还是可以用的。&lt;/p&gt;
&lt;p&gt;安装好hadoop后别忘了配置ssh、java环境等。&lt;/p&gt;
&lt;p&gt;顺便创建用户和组为hadoop（也可以自己定义，这块不会的去预习一下linux用户和组的创建）&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;h4 id=&#34;单机配置&#34;&gt;&lt;a href=&#34;#单机配置&#34; class=&#34;headerlink&#34; title=&#34;单机配置&#34;&gt;&lt;/a&gt;&lt;a href=&#34;#单机配置&#34; title=&#34;单机配置&#34;&gt;&lt;/a&gt;单机配置&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;编辑hbase配置文件，在hbase目录下conf/hbase-site.xml添加&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;/img/201908/2019-08-25_23-38.jpg&#34; alt=&#34;编辑配置文件&#34;&gt;&lt;/p&gt;
&lt;p&gt;注意哦：修改 ${user.name}为你自己的 hadoop 用户名&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;进入/opt/hbase/conf目录下修改hbase-env.sh文件。去掉jdk指定地址注释，修改jdk配置地址&lt;br&gt;&lt;img src=&#34;/img/201908/2019-08-25_21-53.jpg&#34; alt=&#34;修改hbase-env.sh&#34;&gt;&lt;/p&gt;
&lt;p&gt;修改后的地址&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;/img/201908/2019-08-25_21-54.jpg&#34; alt=&#34;修改后的地址&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;进入hbase/bin目录执行./start-hbase.sh&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;/img/201908/2019-08-25_22-03.jpg&#34; alt=&#34;执行命令&#34;&gt;&lt;/p&gt;
&lt;p&gt;执行jps查看单机进程&lt;/p&gt;
&lt;p&gt;  &lt;img src=&#34;/img/201908/2019-08-25_22-05.jpg&#34; alt=&#34;查看单机进程&#34;&gt;&lt;/p&gt;
&lt;p&gt; 单机模式已启动，进入命令界面&lt;br&gt; &lt;img src=&#34;/img/201908/2019-08-25_22-23.jpg&#34; alt=&#34;进入命令&#34;&gt;&lt;/p&gt;
&lt;hr&gt;
</content>
        <category term="数据库" />
        <category term="hbase安装教程" />
        <category term="hbase" />
        <updated>2019-08-21T15:40:00.000Z</updated>
    </entry>
    <entry>
        <id>https://erik.xyz/2015/01/09/wei-mysql-zeng-jia-http-rest-ke-hu-duan-mysql-udf-han-shu-mysql-udf-http-1-0-fa-bu/</id>
        <title>为 MySQL 增加 HTTP/REST 客户端：MySQL UDF 函数 mysql-udf-http 1.0 发布</title>
        <link rel="alternate" href="https://erik.xyz/2015/01/09/wei-mysql-zeng-jia-http-rest-ke-hu-duan-mysql-udf-han-shu-mysql-udf-http-1-0-fa-bu/"/>
        <content type="html">&lt;p&gt;文章作者：张宴 Mysql-udf-http 是一款简单的MySQL用户自定义函数（UDF, User-Defined Functions），具有http_get()、http_post()、http_put()、http_delete()四个函数，可以在 MySQL数据库中利用HTTP协议进行REST相关操作。 项目网址：&lt;a href=&#34;http://code.google.com/p/mysql-udf-http/&#34;&gt;http://code.google.com/p/mysql-udf-http/&lt;/a&gt; 中文说明：&lt;a href=&#34;http://blog.zyan.cc/mysql-udf-http/&#34;&gt;http://blog.zyan.cc/mysql-udf-http/&lt;/a&gt; 使用环境：Linux操作系统，支持的MySQL版本：5.1.x 和 5.5.x。5.0.x未经测试。 软件作者：张宴&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;一、REST架构风格：&lt;/strong&gt; REST（Representational State Transfer）是一种轻量级的Web Service架构风格，其实现和操作明显比SOAP和XML-RPC更为简洁，可以完全通过HTTP协议实现，还可以利用缓存Cache来提高响应速 度，性能、效率和易用性上都优于SOAP协议。REST最早是由 Roy Thomas Fielding 博士2000年在论文《&lt;a href=&#34;http://www.ics.uci.edu/%7Efielding/pubs/dissertation/top.htm&#34;&gt;Architectural Styles and the Design of Network-based Software Architectures&lt;/a&gt;》中提出的，&lt;a href=&#34;http://mysql-udf-http.googlecode.com/files/REST_cn.pdf&#34;&gt;中文译文全文PDF点此下载&lt;/a&gt;。另外，&lt;a href=&#34;http://www.infoq.com/cn/articles/rest-introduction&#34;&gt;有篇译文&lt;/a&gt;对REST做了一个简化说明。 目前，REST架构风格的常见实现是基于HTTP协议及其四种基本方法（如POST、GET、PUT和DELETE）的。有人将HTTP协议的四种方法 与CRUD原则相对应，CRUD原则对于资源只需要四种行为：Create（创建）、Read（读取）、Update（更新）和Delete（删除）就可 以完成对其操作和处理。 &lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://zyan.cc/attachment/201009/crud.png&#34;&gt;&lt;img src=&#34;http://zyan.cc/attachment/201009/crud.png&#34; alt=&#34;点击在新窗口中浏览此图片&#34; title=&#34;点击在新窗口中浏览此图片&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://zyan.cc/attachment/201009/rest.jpg&#34;&gt;&lt;img src=&#34;http://zyan.cc/attachment/201009/rest.jpg&#34; alt=&#34;点击在新窗口中浏览此图片&#34; title=&#34;点击在新窗口中浏览此图片&#34;&gt;&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;在Mysql-udf-http中，四个函数http_post()、http_get()、http_put()、http_delete()分别对应HTTP协议的POST、GET、PUT、DELETE四种方法。 REST是一种架构风格，而不是协议或标准。HTTP协议“POST、GET、PUT、DELET”四种方法与CRUD原则“Create、Read、 Update、Delete”四种行为的一一对应关系只是一种架构设计习惯，而不是规范。因此，POST方法也可以用来更新资源，PUT方法也可以用来创 建资源，这就要看具体应用程序作者的定义了。例如&lt;a href=&#34;http://zyan.cc/post/362/&#34;&gt;Tokyo Tyrant&lt;/a&gt;除了支持Memcached协议外，还支持REST方式存取，PUT代表创建和更新，GET代表读取，DELETE代表删除（&lt;a href=&#34;http://zyan.cc/post/362/&#34;&gt;关于Tokyo Tyrant的安装使用请点击这儿&lt;/a&gt;）。 目前国内外流行的Web 2.0应用API接口中，很多都支持REST架构风格。例如：&lt;a href=&#34;http://open.t.sina.com.cn/wiki/index.php/API%E6%96%87%E6%A1%A3&#34;&gt;新浪微博开放平台&lt;/a&gt;、&lt;a href=&#34;http://wiki.dev.renren.com/wiki/API&#34;&gt;人人网API&lt;/a&gt;、Google OpenID、Flickr、Twitter、eBay、Facebook、Last.fm、del.icio.us、Yahoo Search、Amazon S3、Amazon EC2、Digg、Microsoft Bing、FriendFeed、PayPal、Foursquare，&lt;a href=&#34;http://www.programmableweb.com/apis/directory/1?protocol=REST&#34;&gt;更多…&lt;/a&gt; 当记录数成百上千万条时，通常采用 MySQL 分表减低数据库压力。但是，全部数据按点击数、精华、积分排序显示等功能，在MySQL 分表中则无法实现。编写 Mysql-udf-http 的最初目的，是为了在项目开发中，将 MySQL 各分表的数据自动同步到我们的 &lt;a href=&#34;http://zyan.cc/tcsql/&#34;&gt;TCSQL&lt;/a&gt; 高速列表数据库，用来做列表查询、显示，内容页则根据ID直接查询各 MySQL 分表的内容。由于HTTP协议的通用性，通过 Mysql-udf-http 可以做更多的事情。 &lt;strong&gt;通过Mysql-udf-http，你可以在MySQL中利用触发器，将MySQL的数据同步到支持REST的应用上。&lt;/strong&gt;例如你有一个独立博客，你可以在文章表创建MySQL触发器，这样，在发表文章时，就可以将文章标题、URL自动同步到新浪微博、Twitter。你想用 &lt;a href=&#34;http://zyan.cc/post/362/&#34;&gt;Tokyo Tyrant&lt;/a&gt; 做缓存，也可以利用MySQL触发器在发生增、删、改时，将数据自动同步到 &lt;a href=&#34;http://zyan.cc/post/362/&#34;&gt;Tokyo Tyrant&lt;/a&gt;。详细配置方法本文第4节中会有介绍。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;二、Mysql-udf-http的安装与使用：&lt;/strong&gt; &lt;strong&gt;1. 在Linux系统上安装Mysql-udf-http&lt;/strong&gt; 注意：“/usr/local/webserver/mysql/”是你的MySQL安装路径，如果你的MySQL安装路径不同，请自行修改。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ulimit -SHn 65535 

wget http://curl.haxx.se/download/curl-7.21.1.tar.gz

tar zxvf curl-7.21.1.tar.gz cd curl-7.21.1/ 

./configure --prefix=/usr 

make &amp;amp;&amp;amp; make install 

cd ../

echo &amp;quot;/usr/local/webserver/mysql/lib/mysql/&amp;quot; &amp;gt; /etc/ld.so.conf.d/mysql.conf /sbin/ldconfig 

wget http://mysql-udf-http.googlecode.com/files/mysql-udf-http-1.0.tar.gz 

tar zxvf mysql-udf-http-1.0.tar.gz 

cd mysql-udf-http-1.0/

./configure --prefix=/usr/local/webserver/mysql --with-mysql=/usr/local/webserver/mysql/bin/mysql_config 

make &amp;amp;&amp;amp; make install cd ../
&lt;/code&gt;&lt;/pre&gt;&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;2. 通过命令行登陆进入MySQL&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;/usr/local/webserver/mysql/bin/mysql -S /tmp/mysql.sock&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;3. 创建MySQL自定义函数&lt;/strong&gt; mysql&amp;gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://zyan.cc/#&#34;&gt;view plain&lt;/a&gt;&lt;a href=&#34;http://zyan.cc/#&#34;&gt;print&lt;/a&gt;&lt;a href=&#34;http://zyan.cc/#&#34;&gt;?&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;create function http_get returns string soname &amp;#39;mysql-udf-http.so&amp;#39;;
create function http_post returns string soname &amp;#39;mysql-udf-http.so&amp;#39;;
create function http_put returns string soname &amp;#39;mysql-udf-http.so&amp;#39;;
create function http_delete returns string soname &amp;#39;mysql-udf-http.so&amp;#39;;
&lt;/code&gt;&lt;/pre&gt;&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;4. 使用方法&lt;/strong&gt; &lt;strong&gt;I. 函数描述：&lt;/strong&gt; mysql&amp;gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://zyan.cc/#&#34;&gt;view plain&lt;/a&gt;&lt;a href=&#34;http://zyan.cc/#&#34;&gt;print&lt;/a&gt;&lt;a href=&#34;http://zyan.cc/#&#34;&gt;?&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;SELECT http_get(&amp;#39;&amp;lt;url&amp;gt;&amp;#39;);
SELECT http_post(&amp;#39;&amp;lt;url&amp;gt;&amp;#39;, &amp;#39;&amp;lt;data&amp;gt;&amp;#39;);
SELECT http_put(&amp;#39;&amp;lt;url&amp;gt;&amp;#39;, &amp;#39;&amp;lt;data&amp;gt;&amp;#39;);
SELECT http_delete(&amp;#39;&amp;lt;url&amp;gt;&amp;#39;);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;II. 示例 A：&lt;/strong&gt; mysql&amp;gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://zyan.cc/#&#34;&gt;view plain&lt;/a&gt;&lt;a href=&#34;http://zyan.cc/#&#34;&gt;print&lt;/a&gt;&lt;a href=&#34;http://zyan.cc/#&#34;&gt;?&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;/* HTTP GET、POST方式提交关键词“xoyo”到百度移动搜索 */
SELECT http_get(&amp;#39;http://m.baidu.com/s?word=xoyo&amp;amp;pn=0&amp;#39;);
SELECT http_post(&amp;#39;http://m.baidu.com/s&amp;#39;,&amp;#39;word=xoyo&amp;amp;pn=0&amp;#39;);

/* 新浪微博开放平台：获取新浪用户ID为103500的最近一条微博内容 */
SELECT http_get(&amp;#39;http://api.t.sina.com.cn/statuses/user_timeline/103500.json?count=1&amp;amp;source=1561596835&amp;#39;) AS data;
/* 新浪微博开放平台：发表一条微博 */
SELECT http_post(&amp;#39;http://your\_sina\_uid:your_password@api.t.sina.com.cn/statuses/update.xml?source=1561596835&amp;#39;, &amp;#39;status=Thins is sina weibo test information&amp;#39;);

/* Tokyo Tyrant 写入、读取、删除操作 */
SELECT http_put(&amp;#39;http://192.168.8.34:1978/key&amp;#39;, &amp;#39;This is value&amp;#39;);
SELECT http_get(&amp;#39;http://192.168.8.34:1978/key&amp;#39;);
SELECT http_delete(&amp;#39;http://192.168.8.34:1978/key&amp;#39;);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;III. 示例&lt;/strong&gt; &lt;strong&gt;通过MySQL触发器，利用mysql-udf-http和第三方UDF函数lib_mysqludf_json，自动同步数据到 Tokyo Tyrant。&lt;/strong&gt; &lt;strong&gt;(1). 下载安装 lib_mysqludf_json 修改版：&lt;/strong&gt; 以下安装包适合32位Linux操作系统：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;wget http://mysql-udf-http.googlecode.com/files/lib_mysqludf_json-i386.tar.gz

tar zxvf lib_mysqludf_json-i386.tar.gz 
cd lib_mysqludf_json-i386/ 

# 如果你的MySQL安装路径不是/usr/local/webserver/mysql/，请修改以下路径。 

cp -f lib_mysqludf_json.so  /usr/local/webserver/mysql/lib/mysql/plugin/lib_mysqludf_json.so

cd ../
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;以下安装包适合64位Linux操作系统：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;wget http://mysql-udf-http.googlecode.com/files/lib_mysqludf_json-x86_64.tar.gz

tar zxvf lib_mysqludf_json-x86_64.tar.gz cd lib_mysqludf_json-x86_64/ 

# 如果你的MySQL安装路径不是/usr/local/webserver/mysql/，请修改以下路径。

cp -f lib_mysqludf_json.so /usr/local/webserver/mysql/lib/mysql/plugin/lib_mysqludf_json.so 

cd ../

# 通过命令行登陆进入MySQL：

/usr/local/webserver/mysql/bin/mysql -S /tmp/mysql.sock
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;mysql&amp;gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://zyan.cc/#&#34;&gt;view plain&lt;/a&gt;&lt;a href=&#34;http://zyan.cc/#&#34;&gt;print&lt;/a&gt;&lt;a href=&#34;http://zyan.cc/#&#34;&gt;?&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;create function lib\_mysqludf\_json_info returns string soname &amp;#39;lib\_mysqludf\_json.so&amp;#39;;
create function json_array returns string soname &amp;#39;lib\_mysqludf\_json.so&amp;#39;;
create function json_members returns string soname &amp;#39;lib\_mysqludf\_json.so&amp;#39;;
create function json_object returns string soname &amp;#39;lib\_mysqludf\_json.so&amp;#39;;
create function json_values returns string soname &amp;#39;lib\_mysqludf\_json.so&amp;#39;;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;lib_mysqludf_json的详细用法请访问：&lt;a href=&#34;http://www.mysqludf.org/lib_mysqludf_json/&#34;&gt;http://www.mysqludf.org/lib_mysqludf_json/&lt;/a&gt; &lt;strong&gt;(2). 创建测试表&lt;/strong&gt; mysql&amp;gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://zyan.cc/#&#34;&gt;view plain&lt;/a&gt;&lt;a href=&#34;http://zyan.cc/#&#34;&gt;print&lt;/a&gt;&lt;a href=&#34;http://zyan.cc/#&#34;&gt;?&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;SET NAMES UTF8;
USE test;
CREATE TABLE IF NOT EXISTS `mytable` (
  `id` int(10) NOT NULL AUTO_INCREMENT,
  `addtime` int(10) NOT NULL,
  `title` varchar(255) CHARACTER SET utf8 NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 AUTO_INCREMENT=1;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;(3). 为测试表创建触发器：&lt;/strong&gt; mysql&amp;gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://zyan.cc/#&#34;&gt;view plain&lt;/a&gt;&lt;a href=&#34;http://zyan.cc/#&#34;&gt;print&lt;/a&gt;&lt;a href=&#34;http://zyan.cc/#&#34;&gt;?&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  /* INSERT插入操作的触发器 */
  DELIMITER |
  DROP TRIGGER IF EXISTS mytable_insert;
  CREATE TRIGGER mytable_insert
  AFTER INSERT ON mytable
  FOR EACH ROW BEGIN
      SET @tt_json = (SELECT json_object(id,addtime,title) FROM mytable WHERE id = NEW.id LIMIT 1);
      SET @tt_resu = (SELECT http_put(CONCAT(&amp;#39;http://192.168.8.34:1978/&amp;#39;, NEW.id), @tt_json));
  END |
  DELIMITER ;

  /* UPDATE更新操作的触发器 */
 DELIMITER |
  DROP TRIGGER IF EXISTS mytable_update;
  CREATE TRIGGER mytable_update
  AFTER UPDATE ON mytable
  FOR EACH ROW BEGIN
     SET @tt_json = (SELECT json_object(id,addtime,title) FROM mytable WHERE id = OLD.id LIMIT 1);
      SET @tt_resu = (SELECT http_put(CONCAT(&amp;#39;http://192.168.8.34:1978/&amp;#39;, OLD.id), @tt_json));
  END |
  DELIMITER ;

  /* DELETE删除操作的触发器 */
  DELIMITER |
  DROP TRIGGER IF EXISTS mytable_delete;
  CREATE TRIGGER mytable_delete
  AFTER DELETE ON mytable
  FOR EACH ROW BEGIN
      SET @tt_resu = (SELECT http_delete(CONCAT(&amp;#39;http://192.168.8.34:1978/&amp;#39;, OLD.id)));
  END |
  DELIMITER ;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;(4). 将 MySQL 表和 Tokyo Tyrant 关联进行查询：&lt;/strong&gt; mysql&amp;gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://zyan.cc/#&#34;&gt;view plain&lt;/a&gt;&lt;a href=&#34;http://zyan.cc/#&#34;&gt;print&lt;/a&gt;&lt;a href=&#34;http://zyan.cc/#&#34;&gt;?&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; SELECT id,addtime,title,http_get(CONCAT(&amp;#39;http://192.168.8.34:1978/&amp;#39;,id)) AS tt FROM mytable ORDER BY id DESC LIMIT 0,5;
&lt;/code&gt;&lt;/pre&gt;&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;5. 如何删除mysql-udf-http UDF函数：&lt;/strong&gt; mysql&amp;gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://zyan.cc/#&#34;&gt;view plain&lt;/a&gt;&lt;a href=&#34;http://zyan.cc/#&#34;&gt;print&lt;/a&gt;&lt;a href=&#34;http://zyan.cc/#&#34;&gt;?&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;drop function http_get;
drop function http_post;
drop function http_put;
drop function http_delete;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;原文链接：&lt;a href=&#34;http://blog.zyan.cc/mysql-udf-http/&#34;&gt;http://blog.zyan.cc/mysql-udf-http/&lt;/a&gt;]function http_delete;&lt;/p&gt;
</content>
        <category term="数据库" />
        <category term="mysql" />
        <category term="数据表" />
        <updated>2015-01-09T14:38:00.000Z</updated>
    </entry>
    <entry>
        <id>https://erik.xyz/2014/11/17/mysql-shu-ju-ku-chang-yong-yu-ju/</id>
        <title>mysql数据库常用语句</title>
        <link rel="alternate" href="https://erik.xyz/2014/11/17/mysql-shu-ju-ku-chang-yong-yu-ju/"/>
        <content type="html">&lt;p&gt;最近在做ecshop发现mysql忘了一大堆，复习一下。&lt;br&gt;name数据库  name1表格1  依次类推 &lt;/p&gt;
&lt;p&gt;create database name character set ‘utf8’;  创建数据库及编码方式（一键式创建）&lt;/p&gt;
&lt;p&gt;crate database name;  创建数据库 &lt;/p&gt;
&lt;p&gt;show databases;   查看数据库名称（列举数据库） &lt;/p&gt;
&lt;p&gt;use name;  选择数据库（进入数据库） &lt;/p&gt;
&lt;p&gt;drop database name;   删除数据库&lt;br&gt;&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;&lt;br&gt;update 表格 set 字段1=值1,字段2=值2 where id=number;  更新数据库，字段值如果是具体值要加引号，number是id的数值代称&lt;/p&gt;
&lt;p&gt;ceate table name1(id name email phone);  创建数据表 &lt;/p&gt;
&lt;p&gt;auto_increment 自动编号 &lt;/p&gt;
&lt;p&gt;primary key 主键  &lt;/p&gt;
&lt;p&gt;unique key  约束键 &lt;/p&gt;
&lt;p&gt;desc name1;  查看表格结构   &lt;/p&gt;
&lt;p&gt;show columns from name1;   查看表格结构 &lt;/p&gt;
&lt;p&gt;default max;   默认数值 &lt;/p&gt;
&lt;p&gt;select * from name1;   查看数据表数据&lt;/p&gt;
&lt;p&gt;show create database name;   查看数据库编码&lt;/p&gt;
&lt;p&gt;alter database character set ‘utf8’;    设置数据库编码 &lt;/p&gt;
&lt;p&gt;alter table 表格 modify 字段 新数据类型;     修改字段数据类型 &lt;/p&gt;
&lt;p&gt;alter table 表格 change 字段 新字段 新数据类型;    修改字段和数据类型 &lt;/p&gt;
&lt;p&gt;alter table 表格 add 新字段 数据类型;   添加字段 first 可选参数  将新添加的字段设置为表格的第一个字段 after 将新添加的字段添加到指定的已存在字段之后 alter table 表格 &lt;/p&gt;
&lt;p&gt;drop 字段;   删除字段&lt;/p&gt;
&lt;p&gt;alter table 表格 modify 字段1 数据类型 &lt;/p&gt;
&lt;p&gt;first/after 字段2;   修改字段位置（前/后）&lt;/p&gt;
&lt;p&gt;alter table 表格 add 字段 数据类型 &lt;/p&gt;
&lt;p&gt;first/after;   表格中添加字段在首/末 &lt;!--more--&gt;&lt;/p&gt;
&lt;p&gt;alter table 表格 &lt;/p&gt;
&lt;p&gt;ENGINE |CHARSET=MyISAM | utf8;  修改引擎或编码方式 &lt;/p&gt;
&lt;p&gt;alter table 表格&lt;/p&gt;
&lt;p&gt;drop foreign key 外约束键;   删除表的外约束键&lt;/p&gt;
&lt;p&gt;alter table 子表&lt;/p&gt;
&lt;p&gt;drop foregin key 外键;  解除子父表关联 &lt;/p&gt;
&lt;p&gt;alter table 表格 rename 新表格名;  修改表格名 &lt;/p&gt;
&lt;p&gt;select name from 表格; &lt;!--more--&gt; 查询类别 ——————————————————————————————————————————————————————————————————————————————————————————————————————————————————-&lt;br&gt;select distinct 类别 from 表格;   查询字段不得重复 select username from name1 where username=’admin’;    查询数据表中属于字段username的admin &lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;em&gt;*&lt;/em&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt; select id,usename,email from name1 where id in (1,20) order by username;    查询数据表中字段username的id为1到20的记录  在in前加not则反之 实际应用中比如要查询一个二级管理员登陆且不显示超级管理的管理员列表，剩余的都显示，那么就用到in了 例：select id,username,email from name1 where username not in (“admin”) order by id desc; &lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;em&gt;**&lt;/em&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;br&gt;select id,username from name1 where id between 1 and 20;   查询1到20之间的id数据   between前加not则反之 select id, username from name1 where username like ‘b%’;    查询以b开头的所有数据&lt;/p&gt;
&lt;p&gt;insert name1 (id,user,pwd) values (‘1’,’123’,’admin’);   写入表格数据 select 字段,字段1,字段2 from name1 where 字段2 is null;  查询表中字段2为空的记录的字段、字段1、字段2的值   null前面加not反之 select 字段,字段1 from 表格 where 字段1 like ‘_ &lt;em&gt; &lt;/em&gt; _y’;   查询表中以字母y结尾，且y前只有4个字母的记录 select 字段,字段1,字段2,字段3 from name1 where 字段=’值’ and 字段1&amp;gt;=’5’;    查询表中字段的值并且值大于5的记录数据 select 字段,字段1,字段2,字段3 from name1 where 字段=’6’ or 字段=’5’;   查询字段值为5或6的记录数据值,多字段查询（或多条件查询） =select 字段,字段1,字段2,字段3 from name1 where 字段 in(5,6); &lt;/p&gt;
&lt;p&gt;select distinct id from 表;  查询表的id值，并返回id不重复&lt;/p&gt;
&lt;p&gt;select distinct 字段id from 表格;  查询结果不重复&lt;/p&gt;
&lt;p&gt;select  字段 from 表格 order by 字段;   对查询结果升序排序，如果是多列排序在字段后面加逗号（,）分开字段&lt;/p&gt;
&lt;p&gt;select 字段1,字段2  from 表格 order by 字段1 desc;  查询结果按字段1的结果降序排列&lt;/p&gt;
&lt;p&gt;select 字段1,字段2 from 表格 order by 字段1 desc,字段2;  多值不同排列，字段1降序排列，字段2升序排列&lt;/p&gt;
&lt;p&gt;————————————————————————————————————————————————————&lt;/p&gt;
&lt;p&gt;mysqldump -u user -h host -p dbname [tbname,[tbname…]]&amp;gt;filename.sql   tbname表示数据库中的表名，多个表之间空格隔开&lt;/p&gt;
&lt;p&gt;例：mysqldump -u user -h host -p bookDB book&amp;gt;D:/test/book_01.sql   创建book_01.sql的备份&lt;/p&gt;
&lt;p&gt;mysqldump -u user -h host -p —databases [tbname,[tbname…]]&amp;gt;filename.sql  备份多个数据库&lt;/p&gt;
&lt;p&gt;例：mysqldump -u user -h host -p —phone bookDB book&amp;gt;D:/test/book_01_phone.sql   创建book_01_phone.sql的备份，其中包含2个数据库，如果使用—all—databases则是备份所有的数据库&lt;/p&gt;
&lt;p&gt;mysql -u user -p [dbname]&amp;lt;filename.sql  mysql还原&lt;/p&gt;
</content>
        <category term="数据库" />
        <category term="mysql" />
        <updated>2014-11-17T13:55:00.000Z</updated>
    </entry>
</feed>