{
    "version": "https://jsonfeed.org/version/1",
    "title": "艾瑞可erik • All posts by \"go时间获取\" tag • All posts by \"undefined\" categories",
    "description": "一只PHP开发的程序猿，偶尔做做运维、Goland、Python、Java、摄影、画画、写作、顺便睡觉，反正整站都搞过。",
    "home_page_url": "https://erik.xyz",
    "items": [
        {
            "id": "https://erik.xyz/2022/06/18/go-stat-data-and-end-data/",
            "url": "https://erik.xyz/2022/06/18/go-stat-data-and-end-data/",
            "title": "go中时间范围的获取",
            "date_published": "2022-06-18T02:30:00.000Z",
            "content_html": "<p>获取部分时间范围</p>\n<pre><code>//获得当前月的初始和结束日期\nfunc GetMonthDay(types int) (string, string) &#123;\n    now := time.Now()\n    currentYear, currentMonth, _ := now.Date()\n    currentLocation := now.Location()\n\n    firstOfMonth := time.Date(currentYear, currentMonth, 1, 0, 0, 0, 0, currentLocation)\n    lastOfMonth := firstOfMonth.AddDate(0, 1, -1)\n    f := firstOfMonth.Unix()\n    l := lastOfMonth.Unix()\n    if types == 1 &#123;\n        return time.Unix(f, 0).Format(&quot;2006-01-02&quot;), time.Unix(l, 0).Format(&quot;2006-01-02&quot;)\n    &#125;\n    return time.Unix(f, 0).Format(&quot;2006-01-02&quot;) + &quot; 00:00:00&quot;, time.Unix(l, 0).Format(&quot;2006-01-02&quot;) + &quot; 23:59:59&quot;\n&#125;\n</code></pre><span id=\"more\"></span>\n<pre><code>//获取当周的开始时间和结束时间\nfunc GetWeekDay(types int) (string, string) &#123;\n    now := time.Now()\n    offset := int(time.Monday - now.Weekday())\n    //周日做特殊判断 因为time.Monday = 0\n    if offset &gt; 0 &#123;\n        offset = -6\n    &#125;\n\n    lastoffset := int(time.Saturday - now.Weekday())\n    //周日做特殊判断 因为time.Monday = 0\n    if lastoffset == 6 &#123;\n        lastoffset = -1\n    &#125;\n\n    firstOfWeek := time.Date(now.Year(), now.Month(), now.Day(), 0, 0, 0, 0, time.Local).AddDate(0, 0, offset)\n    lastOfWeeK := time.Date(now.Year(), now.Month(), now.Day(), 0, 0, 0, 0, time.Local).AddDate(0, 0, lastoffset+1)\n    f := firstOfWeek.Unix()\n    l := lastOfWeeK.Unix()\n    if types == 1 &#123;\n        return time.Unix(f, 0).Format(&quot;2006-01-02&quot;), time.Unix(l, 0).Format(&quot;2006-01-02&quot;)\n    &#125;\n    return time.Unix(f, 0).Format(&quot;2006-01-02&quot;) + &quot; 00:00:00&quot;, time.Unix(l, 0).Format(&quot;2006-01-02&quot;) + &quot; 23:59:59&quot;\n&#125;\n\n//获得当前季度的初始和结束日期\nfunc GetQuarterDay() (string, string) &#123;\n    year := time.Now().Format(&quot;2006&quot;)\n    month := int(time.Now().Month())\n    var firstOfQuarter string\n    var lastOfQuarter string\n    if month &gt;= 1 &amp;&amp; month &lt;= 3 &#123;\n        //1月1号\n        firstOfQuarter = year + &quot;-01-01 00:00:00&quot;\n        lastOfQuarter = year + &quot;-03-31 23:59:59&quot;\n    &#125; else if month &gt;= 4 &amp;&amp; month &lt;= 6 &#123;\n        firstOfQuarter = year + &quot;-04-01 00:00:00&quot;\n        lastOfQuarter = year + &quot;-06-30 23:59:59&quot;\n    &#125; else if month &gt;= 7 &amp;&amp; month &lt;= 9 &#123;\n        firstOfQuarter = year + &quot;-07-01 00:00:00&quot;\n        lastOfQuarter = year + &quot;-09-30 23:59:59&quot;\n    &#125; else &#123;\n        firstOfQuarter = year + &quot;-10-01 00:00:00&quot;\n        lastOfQuarter = year + &quot;-12-31 23:59:59&quot;\n    &#125;\n    return firstOfQuarter, lastOfQuarter\n&#125;\n\n//获取开始日期和结束日期计算出时间段内所有日期\nfunc GetBetweenDates(sdate, edate string) []string &#123;\n    d := []string&#123;&#125;\n    timeFormatTpl := &quot;2006-01-02 15:04:05&quot;\n    if len(timeFormatTpl) != len(sdate) &#123;\n        timeFormatTpl = timeFormatTpl[0:len(sdate)]\n    &#125;\n    date, err := time.Parse(timeFormatTpl, sdate)\n    if err != nil &#123;\n        // 时间解析，异常\n        return d\n    &#125;\n    date2, err := time.Parse(timeFormatTpl, edate)\n    if err != nil &#123;\n        // 时间解析，异常\n        return d\n    &#125;\n    if date2.Before(date) &#123;\n        // 如果结束时间小于开始时间，异常\n        return d\n    &#125;\n    // 输出日期格式固定\n    timeFormatTpl = &quot;2006-01-02&quot;\n    date2Str := date2.Format(timeFormatTpl)\n    d = append(d, date.Format(timeFormatTpl))\n    for &#123;\n        date = date.AddDate(0, 0, 1)\n        dateStr := date.Format(timeFormatTpl)\n        d = append(d, dateStr)\n        if dateStr == date2Str &#123;\n            break\n        &#125;\n    &#125;\n    return d\n&#125;\n\nvar timeFormatTemplate = &quot;2006-01-02 15:04:05&quot;\n\n// GetDate 获取当前日期\nfunc GetDate() string &#123;\n    return time.Now().Format(timeFormatTemplate)\n&#125;\n\n// GetStampToDate 时间戳转日期\nfunc GetStampToDate(TimeStamp int64) string &#123;\n    return time.Unix(TimeStamp, 0).Format(timeFormatTemplate)\n&#125;\n\n// GetSubDate 动态改变多少天前，或后的日期\nfunc GetSubDate(Year, Month, Date int) string &#123;\n    return time.Now().AddDate(Year, Month, Date).Format(&quot;2006-01-02&quot;)\n&#125;\n\nfunc GetDateToTimeStamp(Date string) int64 &#123;\n    stamp, _ := time.ParseInLocation(timeFormatTemplate, Date, time.Local)\n    return stamp.Unix()\n&#125;\n\n//指定时间格式后，格式化时间\nfunc DataToData(dataType string, data string) string &#123;\n    time, _ := time.Parse(dataType, data)\n    return GetStampToDate(time.Unix())\n&#125;\n</code></pre>",
            "tags": [
                "go时间获取"
            ]
        }
    ]
}